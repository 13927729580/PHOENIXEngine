/*
** Lua binding: PX2
** Generated automatically by tolua++-1.0.92 on 04/13/17 19:22:13.
*/

#ifndef __cplusplus
#include "stdlib.h"
#endif
#include "string.h"

#include "tolua++.h"

/* Exported function */
TOLUA_API int  tolua_PX2_open (lua_State* tolua_S);

#include "PX2ToLua.hpp"

/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_ScriptController (lua_State* tolua_S)
{
 ScriptController* self = (ScriptController*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_EffectModelNode (lua_State* tolua_S)
{
 EffectModelNode* self = (EffectModelNode*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_TexPackElement (lua_State* tolua_S)
{
 TexPackElement* self = (TexPackElement*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_InterpCurveColorController (lua_State* tolua_S)
{
 InterpCurveColorController* self = (InterpCurveColorController*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Controlledable (lua_State* tolua_S)
{
 Controlledable* self = (Controlledable*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_InterpCurveUniformScaleController (lua_State* tolua_S)
{
 InterpCurveUniformScaleController* self = (InterpCurveUniformScaleController*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_EffectModel (lua_State* tolua_S)
{
 EffectModel* self = (EffectModel*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Node (lua_State* tolua_S)
{
 Node* self = (Node*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Triangles (lua_State* tolua_S)
{
 Triangles* self = (Triangles*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_TriMesh (lua_State* tolua_S)
{
 TriMesh* self = (TriMesh*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_InterpCurveFloatController (lua_State* tolua_S)
{
 InterpCurveFloatController* self = (InterpCurveFloatController*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_LanguageManager (lua_State* tolua_S)
{
 LanguageManager* self = (LanguageManager*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Soundable (lua_State* tolua_S)
{
 Soundable* self = (Soundable*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_LanguagePackage (lua_State* tolua_S)
{
 LanguagePackage* self = (LanguagePackage*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_HPlane (lua_State* tolua_S)
{
 HPlane* self = (HPlane*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_HMatrix (lua_State* tolua_S)
{
 HMatrix* self = (HMatrix*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Texture2D (lua_State* tolua_S)
{
 Texture2D* self = (Texture2D*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIButtonBase (lua_State* tolua_S)
{
 UIButtonBase* self = (UIButtonBase*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Float2 (lua_State* tolua_S)
{
 Float2* self = (Float2*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CameraNode (lua_State* tolua_S)
{
 CameraNode* self = (CameraNode*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Transform (lua_State* tolua_S)
{
 Transform* self = (Transform*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ParticleEmitter (lua_State* tolua_S)
{
 ParticleEmitter* self = (ParticleEmitter*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_RenderWindow (lua_State* tolua_S)
{
 RenderWindow* self = (RenderWindow*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Rtti (lua_State* tolua_S)
{
 Rtti* self = (Rtti*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Material (lua_State* tolua_S)
{
 Material* self = (Material*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_SwitchNode (lua_State* tolua_S)
{
 SwitchNode* self = (SwitchNode*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIRound (lua_State* tolua_S)
{
 UIRound* self = (UIRound*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_XMLNode (lua_State* tolua_S)
{
 XMLNode* self = (XMLNode*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_FunObject (lua_State* tolua_S)
{
 FunObject* self = (FunObject*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__map_std__string_FunObjectPtr_ (lua_State* tolua_S)
{
 std::map<std::string,FunObjectPtr>* self = (std::map<std::string,FunObjectPtr>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIComboBox (lua_State* tolua_S)
{
 UIComboBox* self = (UIComboBox*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UITabFrame (lua_State* tolua_S)
{
 UITabFrame* self = (UITabFrame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_TriggerController (lua_State* tolua_S)
{
 TriggerController* self = (TriggerController*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIFrame (lua_State* tolua_S)
{
 UIFrame* self = (UIFrame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIList (lua_State* tolua_S)
{
 UIList* self = (UIList*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Renderable (lua_State* tolua_S)
{
 Renderable* self = (Renderable*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_FunParam (lua_State* tolua_S)
{
 FunParam* self = (FunParam*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Shine (lua_State* tolua_S)
{
 Shine* self = (Shine*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIInputText (lua_State* tolua_S)
{
 UIInputText* self = (UIInputText*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Effectable (lua_State* tolua_S)
{
 Effectable* self = (Effectable*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UICheckButton (lua_State* tolua_S)
{
 UICheckButton* self = (UICheckButton*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_AmbientRegionController (lua_State* tolua_S)
{
 AmbientRegionController* self = (AmbientRegionController*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Sizef (lua_State* tolua_S)
{
 Sizef* self = (Sizef*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Canvas (lua_State* tolua_S)
{
 Canvas* self = (Canvas*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Animation3DSkeleton (lua_State* tolua_S)
{
 Animation3DSkeleton* self = (Animation3DSkeleton*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UISplitterFrame (lua_State* tolua_S)
{
 UISplitterFrame* self = (UISplitterFrame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIAuiFrame (lua_State* tolua_S)
{
 UIAuiFrame* self = (UIAuiFrame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIVlc (lua_State* tolua_S)
{
 UIVlc* self = (UIVlc*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIEditBox (lua_State* tolua_S)
{
 UIEditBox* self = (UIEditBox*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ModelController (lua_State* tolua_S)
{
 ModelController* self = (ModelController*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_AnimationFrames (lua_State* tolua_S)
{
 AnimationFrames* self = (AnimationFrames*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIProgressBar (lua_State* tolua_S)
{
 UIProgressBar* self = (UIProgressBar*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIWebFrame (lua_State* tolua_S)
{
 UIWebFrame* self = (UIWebFrame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_APoint (lua_State* tolua_S)
{
 APoint* self = (APoint*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIFText (lua_State* tolua_S)
{
 UIFText* self = (UIFText*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_EffectModule (lua_State* tolua_S)
{
 EffectModule* self = (EffectModule*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Texture (lua_State* tolua_S)
{
 Texture* self = (Texture*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Billboard (lua_State* tolua_S)
{
 Billboard* self = (Billboard*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Buffer (lua_State* tolua_S)
{
 Buffer* self = (Buffer*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Scene (lua_State* tolua_S)
{
 Scene* self = (Scene*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIPicBox (lua_State* tolua_S)
{
 UIPicBox* self = (UIPicBox*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Controller (lua_State* tolua_S)
{
 Controller* self = (Controller*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIText (lua_State* tolua_S)
{
 UIText* self = (UIText*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_JSONValue (lua_State* tolua_S)
{
 JSONValue* self = (JSONValue*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_HPoint (lua_State* tolua_S)
{
 HPoint* self = (HPoint*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_InterpCurveTranslateController (lua_State* tolua_S)
{
 InterpCurveTranslateController* self = (InterpCurveTranslateController*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Camera (lua_State* tolua_S)
{
 Camera* self = (Camera*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Object (lua_State* tolua_S)
{
 Object* self = (Object*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_TexPack (lua_State* tolua_S)
{
 TexPack* self = (TexPack*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UI (lua_State* tolua_S)
{
 UI* self = (UI*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIItem (lua_State* tolua_S)
{
 UIItem* self = (UIItem*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIButton (lua_State* tolua_S)
{
 UIButton* self = (UIButton*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_FunObjectManager (lua_State* tolua_S)
{
 FunObjectManager* self = (FunObjectManager*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_EffectableController (lua_State* tolua_S)
{
 EffectableController* self = (EffectableController*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Rectf (lua_State* tolua_S)
{
 Rectf* self = (Rectf*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_XMLData (lua_State* tolua_S)
{
 XMLData* self = (XMLData*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_InterpCurveFloat3Controller (lua_State* tolua_S)
{
 InterpCurveFloat3Controller* self = (InterpCurveFloat3Controller*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIFPicBox (lua_State* tolua_S)
{
 UIFPicBox* self = (UIFPicBox*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_RawTerrain (lua_State* tolua_S)
{
 RawTerrain* self = (RawTerrain*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_BeamEmitter (lua_State* tolua_S)
{
 BeamEmitter* self = (BeamEmitter*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Terrain (lua_State* tolua_S)
{
 Terrain* self = (Terrain*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_RibbonEmitter (lua_State* tolua_S)
{
 RibbonEmitter* self = (RibbonEmitter*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CameraShake (lua_State* tolua_S)
{
 CameraShake* self = (CameraShake*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_LuaScriptController (lua_State* tolua_S)
{
 LuaScriptController* self = (LuaScriptController*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_VertexFormat (lua_State* tolua_S)
{
 VertexFormat* self = (VertexFormat*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_LODTerrain (lua_State* tolua_S)
{
 LODTerrain* self = (LODTerrain*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_SizeNode (lua_State* tolua_S)
{
 SizeNode* self = (SizeNode*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIGridFrame (lua_State* tolua_S)
{
 UIGridFrame* self = (UIGridFrame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__vector_std__string_ (lua_State* tolua_S)
{
 std::vector<std::string>* self = (std::vector<std::string>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_GPIO (lua_State* tolua_S)
{
 GPIO* self = (GPIO*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_StringHelp (lua_State* tolua_S)
{
 StringHelp* self = (StringHelp*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Selection (lua_State* tolua_S)
{
 Selection* self = (Selection*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_InterpCurveScaleController (lua_State* tolua_S)
{
 InterpCurveScaleController* self = (InterpCurveScaleController*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_LuaContext (lua_State* tolua_S)
{
 LuaContext* self = (LuaContext*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ScriptContext (lua_State* tolua_S)
{
 ScriptContext* self = (ScriptContext*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_AVector (lua_State* tolua_S)
{
 AVector* self = (AVector*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_InterpCurveRotateController (lua_State* tolua_S)
{
 InterpCurveRotateController* self = (InterpCurveRotateController*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Float3 (lua_State* tolua_S)
{
 Float3* self = (Float3*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Float4 (lua_State* tolua_S)
{
 Float4* self = (Float4*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Movable (lua_State* tolua_S)
{
 Movable* self = (Movable*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_MaterialInstance (lua_State* tolua_S)
{
 MaterialInstance* self = (MaterialInstance*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_InterpCurveController (lua_State* tolua_S)
{
 InterpCurveController* self = (InterpCurveController*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Bound (lua_State* tolua_S)
{
 Bound* self = (Bound*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_InterpCurveAlphaController (lua_State* tolua_S)
{
 InterpCurveAlphaController* self = (InterpCurveAlphaController*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_JSONData (lua_State* tolua_S)
{
 JSONData* self = (JSONData*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}
#endif


/* function to register type */
static void tolua_reg_types (lua_State* tolua_S)
{
 tolua_usertype(tolua_S,"ScriptController");
 tolua_usertype(tolua_S,"ShaderParameters");
 tolua_usertype(tolua_S,"OffsetProperty");
 tolua_usertype(tolua_S,"MaterialPass");
 tolua_usertype(tolua_S,"InterpCurveColorController");
 tolua_usertype(tolua_S,"std::map<FString,AnimationPtr>");
 tolua_usertype(tolua_S,"UIFrame");
 tolua_usertype(tolua_S,"Node");
 tolua_usertype(tolua_S,"Triangles");
 tolua_usertype(tolua_S,"TriMesh");
 tolua_usertype(tolua_S,"InterpCurveFloatController");
 tolua_usertype(tolua_S,"Soundable");
 tolua_usertype(tolua_S,"LanguagePackage");
 tolua_usertype(tolua_S,"ScriptManager");
 tolua_usertype(tolua_S,"UIButtonBase");
 tolua_usertype(tolua_S,"LogicManager");
 tolua_usertype(tolua_S,"Effectable");
 tolua_usertype(tolua_S,"Transform");
 tolua_usertype(tolua_S,"EngineEventHandler");
 tolua_usertype(tolua_S,"PX2::APoint");
 tolua_usertype(tolua_S,"UICheckButton");
 tolua_usertype(tolua_S,"Rtti");
 tolua_usertype(tolua_S,"Material");
 tolua_usertype(tolua_S,"SwitchNode");
 tolua_usertype(tolua_S,"XMLNode");
 tolua_usertype(tolua_S,"Animation");
 tolua_usertype(tolua_S,"UIComboBox");
 tolua_usertype(tolua_S,"Font");
 tolua_usertype(tolua_S,"CameraShake");
 tolua_usertype(tolua_S,"JSONData");
 tolua_usertype(tolua_S,"Sizef");
 tolua_usertype(tolua_S,"Canvas");
 tolua_usertype(tolua_S,"AnimationFrames");
 tolua_usertype(tolua_S,"Time");
 tolua_usertype(tolua_S,"UIWebFrame");
 tolua_usertype(tolua_S,"ResourceManager");
 tolua_usertype(tolua_S,"EffectModule");
 tolua_usertype(tolua_S,"Texture");
 tolua_usertype(tolua_S,"Scene");
 tolua_usertype(tolua_S,"UIPicBox");
 tolua_usertype(tolua_S,"Terrain");
 tolua_usertype(tolua_S,"JSONValue");
 tolua_usertype(tolua_S,"HPoint");
 tolua_usertype(tolua_S,"Camera");
 tolua_usertype(tolua_S,"Vector2f");
 tolua_usertype(tolua_S,"UI");
 tolua_usertype(tolua_S,"ShaderFloat");
 tolua_usertype(tolua_S,"Rectf");
 tolua_usertype(tolua_S,"XMLData");
 tolua_usertype(tolua_S,"VertexShader");
 tolua_usertype(tolua_S,"AlphaProperty");
 tolua_usertype(tolua_S,"RibbonEmitter");
 tolua_usertype(tolua_S,"LODTerrain");
 tolua_usertype(tolua_S,"SizeNode");
 tolua_usertype(tolua_S,"UIGridFrame");
 tolua_usertype(tolua_S,"MaterialInstance");
 tolua_usertype(tolua_S,"LuaContext");
 tolua_usertype(tolua_S,"ScriptContext");
 tolua_usertype(tolua_S,"StencilProperty");
 tolua_usertype(tolua_S,"InterpCurveController");
 tolua_usertype(tolua_S,"Bound");
 tolua_usertype(tolua_S,"TriggerController");
 tolua_usertype(tolua_S,"std::vector<Pointer0<FunObject> >");
 tolua_usertype(tolua_S,"Bluetooth");
 tolua_usertype(tolua_S,"Controlledable");
 tolua_usertype(tolua_S,"InterpCurveUniformScaleController");
 tolua_usertype(tolua_S,"UIItem");
 tolua_usertype(tolua_S,"AVector");
 tolua_usertype(tolua_S,"InterpCurveRotateController");
 tolua_usertype(tolua_S,"Float4");
 tolua_usertype(tolua_S,"LanguageManager");
 tolua_usertype(tolua_S,"std::vector<std::string>");
 tolua_usertype(tolua_S,"HMatrix");
 tolua_usertype(tolua_S,"Texture2D");
 tolua_usertype(tolua_S,"Float2");
 tolua_usertype(tolua_S,"ParticleEmitter");
 tolua_usertype(tolua_S,"RenderWindow");
 tolua_usertype(tolua_S,"Movable");
 tolua_usertype(tolua_S,"Project");
 tolua_usertype(tolua_S,"CullProperty");
 tolua_usertype(tolua_S,"UIRound");
 tolua_usertype(tolua_S,"std::map<std::string,FunObjectPtr>");
 tolua_usertype(tolua_S,"DepthProperty");
 tolua_usertype(tolua_S,"UIList");
 tolua_usertype(tolua_S,"BeamEmitter");
 tolua_usertype(tolua_S,"FunParam");
 tolua_usertype(tolua_S,"Shine");
 tolua_usertype(tolua_S,"UISplitterFramePtr");
 tolua_usertype(tolua_S,"AmbientRegionController");
 tolua_usertype(tolua_S,"StringHelp");
 tolua_usertype(tolua_S,"Animation3DSkeleton");
 tolua_usertype(tolua_S,"ModelController");
 tolua_usertype(tolua_S,"Selection");
 tolua_usertype(tolua_S,"GeneralServer");
 tolua_usertype(tolua_S,"std::vector<CameraPtr>");
 tolua_usertype(tolua_S,"Renderer");
 tolua_usertype(tolua_S,"PixelShader");
 tolua_usertype(tolua_S,"GraphicsRoot");
 tolua_usertype(tolua_S,"HPlane");
 tolua_usertype(tolua_S,"Logger");
 tolua_usertype(tolua_S,"Buffer");
 tolua_usertype(tolua_S,"URDoManager");
 tolua_usertype(tolua_S,"Creater");
 tolua_usertype(tolua_S,"Controller");
 tolua_usertype(tolua_S,"Application");
 tolua_usertype(tolua_S,"MaterialTechnique");
 tolua_usertype(tolua_S,"UIInputText");
 tolua_usertype(tolua_S,"InterpCurveTranslateController");
 tolua_usertype(tolua_S,"UITabFrame");
 tolua_usertype(tolua_S,"Object");
 tolua_usertype(tolua_S,"TexPack");
 tolua_usertype(tolua_S,"UISplitterFrame");
 tolua_usertype(tolua_S,"UIAuiBlockFramePtr");
 tolua_usertype(tolua_S,"std::vector<FunParam>");
 tolua_usertype(tolua_S,"FunObjectManager");
 tolua_usertype(tolua_S,"EffectableController");
 tolua_usertype(tolua_S,"UIAuiFrame");
 tolua_usertype(tolua_S,"TexPackElement");
 tolua_usertype(tolua_S,"InterpCurveFloat3Controller");
 tolua_usertype(tolua_S,"UIFPicBox");
 tolua_usertype(tolua_S,"RawTerrain");
 tolua_usertype(tolua_S,"UIVlc");
 tolua_usertype(tolua_S,"EffectModel");
 tolua_usertype(tolua_S,"Cast");
 tolua_usertype(tolua_S,"UIEditBox");
 tolua_usertype(tolua_S,"UIButton");
 tolua_usertype(tolua_S,"VertexFormat");
 tolua_usertype(tolua_S,"UIProgressBar");
 tolua_usertype(tolua_S,"UIFText");
 tolua_usertype(tolua_S,"Any");
 tolua_usertype(tolua_S,"CameraNode");
 tolua_usertype(tolua_S,"IMEDelegate");
 tolua_usertype(tolua_S,"UIText");
 tolua_usertype(tolua_S,"InterpCurveAlphaController");
 tolua_usertype(tolua_S,"UIProgressBarCtrl");
 tolua_usertype(tolua_S,"WireProperty");
 tolua_usertype(tolua_S,"FunObject");
 tolua_usertype(tolua_S,"RefObject");
 tolua_usertype(tolua_S,"Renderable");
 tolua_usertype(tolua_S,"Float3");
 tolua_usertype(tolua_S,"EffectModelNode");
 tolua_usertype(tolua_S,"Billboard");
 tolua_usertype(tolua_S,"APoint");
 tolua_usertype(tolua_S,"GPIO");
 tolua_usertype(tolua_S,"LuaScriptController");
 tolua_usertype(tolua_S,"InterpCurveScaleController");
 tolua_usertype(tolua_S,"SelectionManager");
}

/* method: delete of class  Rtti */
#ifndef TOLUA_DISABLE_tolua_PX2_Rtti_delete00
static int tolua_PX2_Rtti_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rtti",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rtti* self = (Rtti*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetName of class  Rtti */
#ifndef TOLUA_DISABLE_tolua_PX2_Rtti_GetName00
static int tolua_PX2_Rtti_GetName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Rtti",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Rtti* self = (const Rtti*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetName'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->GetName();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetVersion of class  Rtti */
#ifndef TOLUA_DISABLE_tolua_PX2_Rtti_GetVersion00
static int tolua_PX2_Rtti_GetVersion00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Rtti",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Rtti* self = (const Rtti*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetVersion'", NULL);
#endif
  {
   unsigned short tolua_ret = (unsigned short)  self->GetVersion();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetVersion'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsExactly of class  Rtti */
#ifndef TOLUA_DISABLE_tolua_PX2_Rtti_IsExactly00
static int tolua_PX2_Rtti_IsExactly00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Rtti",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Rtti",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Rtti* self = (const Rtti*)  tolua_tousertype(tolua_S,1,0);
  const Rtti* type = ((const Rtti*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsExactly'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsExactly(*type);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsExactly'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsDerived of class  Rtti */
#ifndef TOLUA_DISABLE_tolua_PX2_Rtti_IsDerived00
static int tolua_PX2_Rtti_IsDerived00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Rtti",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Rtti",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Rtti* self = (const Rtti*)  tolua_tousertype(tolua_S,1,0);
  const Rtti* type = ((const Rtti*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsDerived'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsDerived(*type);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsDerived'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_delete00
static int tolua_PX2_Object_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Object* self = (Object*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Enable of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_Enable00
static int tolua_PX2_Object_Enable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Object",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Object* self = (Object*)  tolua_tousertype(tolua_S,1,0);
  bool enable = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Enable'", NULL);
#endif
  {
   self->Enable(enable);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Enable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsEnable of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_IsEnable00
static int tolua_PX2_Object_IsEnable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Object* self = (const Object*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsEnable'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsEnable();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsEnable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetActivate of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_SetActivate00
static int tolua_PX2_Object_SetActivate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Object",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Object* self = (Object*)  tolua_tousertype(tolua_S,1,0);
  bool act = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetActivate'", NULL);
#endif
  {
   self->SetActivate(act);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetActivate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsActivated of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_IsActivated00
static int tolua_PX2_Object_IsActivated00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Object* self = (const Object*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsActivated'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsActivated();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsActivated'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRttiType of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_GetRttiType00
static int tolua_PX2_Object_GetRttiType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Object* self = (const Object*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRttiType'", NULL);
#endif
  {
   const Rtti& tolua_ret = (const Rtti&)  self->GetRttiType();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Rtti");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRttiType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRttiVersion of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_GetRttiVersion00
static int tolua_PX2_Object_GetRttiVersion00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Object* self = (const Object*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRttiVersion'", NULL);
#endif
  {
   unsigned short tolua_ret = (unsigned short)  self->GetRttiVersion();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRttiVersion'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsExactly of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_IsExactly00
static int tolua_PX2_Object_IsExactly00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Object",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Rtti",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Object* self = (const Object*)  tolua_tousertype(tolua_S,1,0);
  const Rtti* type = ((const Rtti*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsExactly'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsExactly(*type);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsExactly'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsDerived of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_IsDerived00
static int tolua_PX2_Object_IsDerived00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Object",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Rtti",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Object* self = (const Object*)  tolua_tousertype(tolua_S,1,0);
  const Rtti* type = ((const Rtti*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsDerived'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsDerived(*type);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsDerived'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsExactlyTypeOf of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_IsExactlyTypeOf00
static int tolua_PX2_Object_IsExactlyTypeOf00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Object",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Object* self = (const Object*)  tolua_tousertype(tolua_S,1,0);
  const Object* object = ((const Object*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsExactlyTypeOf'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsExactlyTypeOf(object);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsExactlyTypeOf'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsDerivedTypeOf of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_IsDerivedTypeOf00
static int tolua_PX2_Object_IsDerivedTypeOf00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Object",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Object* self = (const Object*)  tolua_tousertype(tolua_S,1,0);
  const Object* object = ((const Object*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsDerivedTypeOf'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsDerivedTypeOf(object);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsDerivedTypeOf'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TYPE of class  Object */
#ifndef TOLUA_DISABLE_tolua_get_Object_TYPE
static int tolua_get_Object_TYPE(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&Object::TYPE,"const Rtti");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUserDataFloat of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_SetUserDataFloat00
static int tolua_PX2_Object_SetUserDataFloat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Object",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Object* self = (Object*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  float val = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUserDataFloat'", NULL);
#endif
  {
   self->SetUserDataFloat(name,val);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUserDataFloat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUserDataFloat of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_GetUserDataFloat00
static int tolua_PX2_Object_GetUserDataFloat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Object",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Object* self = (const Object*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  bool isValied = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUserDataFloat'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetUserDataFloat(name,&isValied);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
   tolua_pushboolean(tolua_S,(bool)isValied);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUserDataFloat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUserDataPointer of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_SetUserDataPointer00
static int tolua_PX2_Object_SetUserDataPointer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Object",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Object* self = (Object*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  void* p = ((void*)  tolua_touserdata(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUserDataPointer'", NULL);
#endif
  {
   self->SetUserDataPointer(name,p);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUserDataPointer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUserDataPointer of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_GetUserDataPointer00
static int tolua_PX2_Object_GetUserDataPointer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Object",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Object* self = (const Object*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  bool isValied = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUserDataPointer'", NULL);
#endif
  {
   void* tolua_ret = (void*)  self->GetUserDataPointer(name,&isValied);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
   tolua_pushboolean(tolua_S,(bool)isValied);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUserDataPointer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetResourcePath of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_GetResourcePath00
static int tolua_PX2_Object_GetResourcePath00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Object* self = (const Object*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetResourcePath'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetResourcePath();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetResourcePath'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetName of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_SetName00
static int tolua_PX2_Object_SetName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Object",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Object* self = (Object*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetName'", NULL);
#endif
  {
   self->SetName(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetName of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_GetName00
static int tolua_PX2_Object_GetName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Object* self = (const Object*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetName'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetObjectByName of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_GetObjectByName00
static int tolua_PX2_Object_GetObjectByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Object",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Object* self = (Object*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetObjectByName'", NULL);
#endif
  {
   Object* tolua_ret = (Object*)  self->GetObjectByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Object");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetObjectByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetID of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_SetID00
static int tolua_PX2_Object_SetID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Object",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Object* self = (Object*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetID'", NULL);
#endif
  {
   self->SetID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetID of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_GetID00
static int tolua_PX2_Object_GetID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Object* self = (const Object*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetID'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetObjectByID of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_GetObjectByID00
static int tolua_PX2_Object_GetObjectByID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Object",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Object* self = (Object*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetObjectByID'", NULL);
#endif
  {
   Object* tolua_ret = (Object*)  self->GetObjectByID(id);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Object");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetObjectByID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ComeInEventWorld of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_ComeInEventWorld00
static int tolua_PX2_Object_ComeInEventWorld00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Object* self = (Object*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ComeInEventWorld'", NULL);
#endif
  {
   self->ComeInEventWorld();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ComeInEventWorld'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GoOutEventWorld of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_GoOutEventWorld00
static int tolua_PX2_Object_GoOutEventWorld00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Object* self = (Object*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GoOutEventWorld'", NULL);
#endif
  {
   self->GoOutEventWorld();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GoOutEventWorld'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsInEventWorld of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_IsInEventWorld00
static int tolua_PX2_Object_IsInEventWorld00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Object* self = (const Object*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsInEventWorld'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsInEventWorld();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsInEventWorld'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUserScriptName of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_SetUserScriptName00
static int tolua_PX2_Object_SetUserScriptName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Object",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Object* self = (Object*)  tolua_tousertype(tolua_S,1,0);
  const std::string scriptName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUserScriptName'", NULL);
#endif
  {
   self->SetUserScriptName(scriptName);
   tolua_pushcppstring(tolua_S,(const char*)scriptName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUserScriptName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUserScriptName of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_GetUserScriptName00
static int tolua_PX2_Object_GetUserScriptName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Object* self = (const Object*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUserScriptName'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetUserScriptName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUserScriptName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetScriptName of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_GetScriptName00
static int tolua_PX2_Object_GetScriptName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Object* self = (const Object*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetScriptName'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetScriptName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetScriptName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RegistToScriptSystem of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_RegistToScriptSystem00
static int tolua_PX2_Object_RegistToScriptSystem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Object* self = (Object*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RegistToScriptSystem'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->RegistToScriptSystem();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RegistToScriptSystem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: UnRegistToScriptSystem of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_UnRegistToScriptSystem00
static int tolua_PX2_Object_UnRegistToScriptSystem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Object* self = (Object*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'UnRegistToScriptSystem'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->UnRegistToScriptSystem();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'UnRegistToScriptSystem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsRegistedToScriptSystem of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_IsRegistedToScriptSystem00
static int tolua_PX2_Object_IsRegistedToScriptSystem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Object* self = (Object*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsRegistedToScriptSystem'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsRegistedToScriptSystem();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsRegistedToScriptSystem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTimeInMicroseconds of class  Time */
#ifndef TOLUA_DISABLE_tolua_PX2_Time_GetTimeInMicroseconds00
static int tolua_PX2_Time_GetTimeInMicroseconds00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Time",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   double tolua_ret = (double)  Time::GetTimeInMicroseconds();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTimeInMicroseconds'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTimeInSeconds of class  Time */
#ifndef TOLUA_DISABLE_tolua_PX2_Time_GetTimeInSeconds00
static int tolua_PX2_Time_GetTimeInSeconds00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Time",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   double tolua_ret = (double)  Time::GetTimeInSeconds();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTimeInSeconds'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ResetTime of class  Time */
#ifndef TOLUA_DISABLE_tolua_PX2_Time_ResetTime00
static int tolua_PX2_Time_ResetTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Time",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Time::ResetTime();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ResetTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FrameElapsedSeconds of class  Time */
#ifndef TOLUA_DISABLE_tolua_get_Time_FrameElapsedSeconds
static int tolua_get_Time_FrameElapsedSeconds(lua_State* tolua_S)
{
  tolua_pushnumber(tolua_S,(lua_Number)Time::FrameElapsedSeconds);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FrameElapsedSeconds of class  Time */
#ifndef TOLUA_DISABLE_tolua_set_Time_FrameElapsedSeconds
static int tolua_set_Time_FrameElapsedSeconds(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  Time::FrameElapsedSeconds = ((double)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: FrameRunnedSeconds of class  Time */
#ifndef TOLUA_DISABLE_tolua_get_Time_FrameRunnedSeconds
static int tolua_get_Time_FrameRunnedSeconds(lua_State* tolua_S)
{
  tolua_pushnumber(tolua_S,(lua_Number)Time::FrameRunnedSeconds);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: FrameRunnedSeconds of class  Time */
#ifndef TOLUA_DISABLE_tolua_set_Time_FrameRunnedSeconds
static int tolua_set_Time_FrameRunnedSeconds(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  Time::FrameRunnedSeconds = ((double)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetBlock of class  Logger */
#ifndef TOLUA_DISABLE_tolua_PX2_Logger_SetBlock00
static int tolua_PX2_Logger_SetBlock00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Logger",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Logger* self = (Logger*)  tolua_tousertype(tolua_S,1,0);
  bool isBlock = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetBlock'", NULL);
#endif
  {
   self->SetBlock(isBlock);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetBlock'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsBlock of class  Logger */
#ifndef TOLUA_DISABLE_tolua_PX2_Logger_IsBlock00
static int tolua_PX2_Logger_IsBlock00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Logger",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Logger* self = (Logger*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsBlock'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsBlock();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsBlock'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLogFileInfo of class  Logger */
#ifndef TOLUA_DISABLE_tolua_PX2_Logger_SetLogFileInfo00
static int tolua_PX2_Logger_SetLogFileInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Logger",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Logger* self = (Logger*)  tolua_tousertype(tolua_S,1,0);
  bool logFileInfo = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLogFileInfo'", NULL);
#endif
  {
   self->SetLogFileInfo(logFileInfo);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLogFileInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsLogFileInfo of class  Logger */
#ifndef TOLUA_DISABLE_tolua_PX2_Logger_IsLogFileInfo00
static int tolua_PX2_Logger_IsLogFileInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Logger",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Logger* self = (const Logger*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsLogFileInfo'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsLogFileInfo();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsLogFileInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LogInfo of class  Logger */
#ifndef TOLUA_DISABLE_tolua_PX2_Logger_LogInfo00
static int tolua_PX2_Logger_LogInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Logger",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Logger* self = (Logger*)  tolua_tousertype(tolua_S,1,0);
  const std::string tag = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string info = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LogInfo'", NULL);
#endif
  {
   self->LogInfo(tag,info);
   tolua_pushcppstring(tolua_S,(const char*)tag);
   tolua_pushcppstring(tolua_S,(const char*)info);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LogInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LogError of class  Logger */
#ifndef TOLUA_DISABLE_tolua_PX2_Logger_LogError00
static int tolua_PX2_Logger_LogError00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Logger",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Logger* self = (Logger*)  tolua_tousertype(tolua_S,1,0);
  const std::string tag = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string info = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LogError'", NULL);
#endif
  {
   self->LogError(tag,info);
   tolua_pushcppstring(tolua_S,(const char*)tag);
   tolua_pushcppstring(tolua_S,(const char*)info);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LogError'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LogUser of class  Logger */
#ifndef TOLUA_DISABLE_tolua_PX2_Logger_LogUser00
static int tolua_PX2_Logger_LogUser00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Logger",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Logger* self = (Logger*)  tolua_tousertype(tolua_S,1,0);
  const std::string tag = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string info = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LogUser'", NULL);
#endif
  {
   self->LogUser(tag,info);
   tolua_pushcppstring(tolua_S,(const char*)tag);
   tolua_pushcppstring(tolua_S,(const char*)info);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LogUser'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  XMLData */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLData_new00
static int tolua_PX2_XMLData_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"XMLData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   XMLData* tolua_ret = (XMLData*)  Mtolua_new((XMLData)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"XMLData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  XMLData */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLData_new00_local
static int tolua_PX2_XMLData_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"XMLData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   XMLData* tolua_ret = (XMLData*)  Mtolua_new((XMLData)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"XMLData");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  XMLData */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLData_delete00
static int tolua_PX2_XMLData_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLData* self = (XMLData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LoadFile of class  XMLData */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLData_LoadFile00
static int tolua_PX2_XMLData_LoadFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLData",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLData* self = (XMLData*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LoadFile'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->LoadFile(fileName);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LoadFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LoadBuffer of class  XMLData */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLData_LoadBuffer00
static int tolua_PX2_XMLData_LoadBuffer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLData",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLData* self = (XMLData*)  tolua_tousertype(tolua_S,1,0);
  const char* buffer = ((const char*)  tolua_tostring(tolua_S,2,0));
  int size = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LoadBuffer'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->LoadBuffer(buffer,size);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LoadBuffer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SaveFile of class  XMLData */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLData_SaveFile00
static int tolua_PX2_XMLData_SaveFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLData",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLData* self = (XMLData*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SaveFile'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->SaveFile(fileName);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SaveFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Create of class  XMLData */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLData_Create00
static int tolua_PX2_XMLData_Create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLData* self = (XMLData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Create'", NULL);
#endif
  {
   self->Create();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRootNode of class  XMLData */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLData_GetRootNode00
static int tolua_PX2_XMLData_GetRootNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLData* self = (XMLData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRootNode'", NULL);
#endif
  {
   XMLNode tolua_ret = (XMLNode)  self->GetRootNode();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((XMLNode)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"XMLNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(XMLNode));
     tolua_pushusertype(tolua_S,tolua_obj,"XMLNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRootNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: NewChild of class  XMLData */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLData_NewChild00
static int tolua_PX2_XMLData_NewChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLData",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLData* self = (XMLData*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'NewChild'", NULL);
#endif
  {
   XMLNode tolua_ret = (XMLNode)  self->NewChild(name);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((XMLNode)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"XMLNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(XMLNode));
     tolua_pushusertype(tolua_S,tolua_obj,"XMLNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'NewChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNodeByPath of class  XMLData */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLData_GetNodeByPath00
static int tolua_PX2_XMLData_GetNodeByPath00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLData",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLData* self = (XMLData*)  tolua_tousertype(tolua_S,1,0);
  const std::string path = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNodeByPath'", NULL);
#endif
  {
   XMLNode tolua_ret = (XMLNode)  self->GetNodeByPath(path);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((XMLNode)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"XMLNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(XMLNode));
     tolua_pushusertype(tolua_S,tolua_obj,"XMLNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
   tolua_pushcppstring(tolua_S,(const char*)path);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNodeByPath'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LinkEndChild of class  XMLData */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLData_LinkEndChild00
static int tolua_PX2_XMLData_LinkEndChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLData",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"XMLNode",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLData* self = (XMLData*)  tolua_tousertype(tolua_S,1,0);
  XMLNode node = *((XMLNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LinkEndChild'", NULL);
#endif
  {
   self->LinkEndChild(node);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LinkEndChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  XMLNode */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLNode_new00
static int tolua_PX2_XMLNode_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"XMLNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   XMLNode* tolua_ret = (XMLNode*)  Mtolua_new((XMLNode)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"XMLNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  XMLNode */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLNode_new00_local
static int tolua_PX2_XMLNode_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"XMLNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   XMLNode* tolua_ret = (XMLNode*)  Mtolua_new((XMLNode)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"XMLNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  XMLNode */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLNode_new01
static int tolua_PX2_XMLNode_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"XMLNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const XMLNode",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const XMLNode* rhs = ((const XMLNode*)  tolua_tousertype(tolua_S,2,0));
  {
   XMLNode* tolua_ret = (XMLNode*)  Mtolua_new((XMLNode)(*rhs));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"XMLNode");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_XMLNode_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  XMLNode */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLNode_new01_local
static int tolua_PX2_XMLNode_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"XMLNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const XMLNode",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const XMLNode* rhs = ((const XMLNode*)  tolua_tousertype(tolua_S,2,0));
  {
   XMLNode* tolua_ret = (XMLNode*)  Mtolua_new((XMLNode)(*rhs));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"XMLNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_XMLNode_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  XMLNode */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLNode_delete00
static int tolua_PX2_XMLNode_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLNode* self = (XMLNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsNull of class  XMLNode */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLNode_IsNull00
static int tolua_PX2_XMLNode_IsNull00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLNode* self = (XMLNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsNull'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsNull();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsNull'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: NewChild of class  XMLNode */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLNode_NewChild00
static int tolua_PX2_XMLNode_NewChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLNode",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLNode* self = (XMLNode*)  tolua_tousertype(tolua_S,1,0);
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'NewChild'", NULL);
#endif
  {
   XMLNode tolua_ret = (XMLNode)  self->NewChild(name);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((XMLNode)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"XMLNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(XMLNode));
     tolua_pushusertype(tolua_S,tolua_obj,"XMLNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'NewChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetName of class  XMLNode */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLNode_GetName00
static int tolua_PX2_XMLNode_GetName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLNode* self = (XMLNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->GetName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetText of class  XMLNode */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLNode_GetText00
static int tolua_PX2_XMLNode_GetText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLNode* self = (XMLNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetText'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->GetText();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: HasChild of class  XMLNode */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLNode_HasChild00
static int tolua_PX2_XMLNode_HasChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLNode",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLNode* self = (XMLNode*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'HasChild'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->HasChild(name);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'HasChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetChild of class  XMLNode */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLNode_GetChild00
static int tolua_PX2_XMLNode_GetChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLNode",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLNode* self = (XMLNode*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetChild'", NULL);
#endif
  {
   XMLNode tolua_ret = (XMLNode)  self->GetChild(name);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((XMLNode)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"XMLNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(XMLNode));
     tolua_pushusertype(tolua_S,tolua_obj,"XMLNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IterateChild of class  XMLNode */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLNode_IterateChild00
static int tolua_PX2_XMLNode_IterateChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLNode* self = (XMLNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IterateChild'", NULL);
#endif
  {
   XMLNode tolua_ret = (XMLNode)  self->IterateChild();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((XMLNode)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"XMLNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(XMLNode));
     tolua_pushusertype(tolua_S,tolua_obj,"XMLNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IterateChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IterateChild of class  XMLNode */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLNode_IterateChild01
static int tolua_PX2_XMLNode_IterateChild01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"XMLNode",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  XMLNode* self = (XMLNode*)  tolua_tousertype(tolua_S,1,0);
  XMLNode previous = *((XMLNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IterateChild'", NULL);
#endif
  {
   XMLNode tolua_ret = (XMLNode)  self->IterateChild(previous);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((XMLNode)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"XMLNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(XMLNode));
     tolua_pushusertype(tolua_S,tolua_obj,"XMLNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_XMLNode_IterateChild00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: HasAttribute of class  XMLNode */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLNode_HasAttribute00
static int tolua_PX2_XMLNode_HasAttribute00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLNode",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLNode* self = (XMLNode*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'HasAttribute'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->HasAttribute(name);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'HasAttribute'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AttributeToInt of class  XMLNode */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLNode_AttributeToInt00
static int tolua_PX2_XMLNode_AttributeToInt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLNode",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLNode* self = (XMLNode*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AttributeToInt'", NULL);
#endif
  {
   int tolua_ret = (int)  self->AttributeToInt(name);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AttributeToInt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AttributeToFloat of class  XMLNode */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLNode_AttributeToFloat00
static int tolua_PX2_XMLNode_AttributeToFloat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLNode",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLNode* self = (XMLNode*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AttributeToFloat'", NULL);
#endif
  {
   float tolua_ret = (float)  self->AttributeToFloat(name);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AttributeToFloat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AttributeToBool of class  XMLNode */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLNode_AttributeToBool00
static int tolua_PX2_XMLNode_AttributeToBool00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLNode",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLNode* self = (XMLNode*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AttributeToBool'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->AttributeToBool(name);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AttributeToBool'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AttributeToString of class  XMLNode */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLNode_AttributeToString00
static int tolua_PX2_XMLNode_AttributeToString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLNode",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLNode* self = (XMLNode*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AttributeToString'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->AttributeToString(name);
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AttributeToString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AttribToInt of class  XMLNode */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLNode_AttribToInt00
static int tolua_PX2_XMLNode_AttribToInt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLNode",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLNode* self = (XMLNode*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  int value = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AttribToInt'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->AttribToInt(name,value);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
   tolua_pushnumber(tolua_S,(lua_Number)value);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AttribToInt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AttribToFloat of class  XMLNode */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLNode_AttribToFloat00
static int tolua_PX2_XMLNode_AttribToFloat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLNode",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLNode* self = (XMLNode*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  float value = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AttribToFloat'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->AttribToFloat(name,value);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
   tolua_pushnumber(tolua_S,(lua_Number)value);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AttribToFloat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AttribToBool of class  XMLNode */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLNode_AttribToBool00
static int tolua_PX2_XMLNode_AttribToBool00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLNode",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLNode* self = (XMLNode*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  bool value = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AttribToBool'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->AttribToBool(name,value);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
   tolua_pushboolean(tolua_S,(bool)value);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AttribToBool'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AttribToString of class  XMLNode */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLNode_AttribToString00
static int tolua_PX2_XMLNode_AttribToString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLNode",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLNode* self = (XMLNode*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  std::string value = ((std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AttribToString'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->AttribToString(name,value);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
   tolua_pushcppstring(tolua_S,(const char*)value);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AttribToString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAttributeInt of class  XMLNode */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLNode_SetAttributeInt00
static int tolua_PX2_XMLNode_SetAttributeInt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLNode",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLNode* self = (XMLNode*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  int value = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAttributeInt'", NULL);
#endif
  {
   self->SetAttributeInt(name,value);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAttributeInt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAttributeFloat of class  XMLNode */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLNode_SetAttributeFloat00
static int tolua_PX2_XMLNode_SetAttributeFloat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLNode",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLNode* self = (XMLNode*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  float value = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAttributeFloat'", NULL);
#endif
  {
   self->SetAttributeFloat(name,value);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAttributeFloat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAttributeBool of class  XMLNode */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLNode_SetAttributeBool00
static int tolua_PX2_XMLNode_SetAttributeBool00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLNode",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLNode* self = (XMLNode*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  bool value = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAttributeBool'", NULL);
#endif
  {
   self->SetAttributeBool(name,value);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAttributeBool'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAttributeString of class  XMLNode */
#ifndef TOLUA_DISABLE_tolua_PX2_XMLNode_SetAttributeString00
static int tolua_PX2_XMLNode_SetAttributeString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"XMLNode",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  XMLNode* self = (XMLNode*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string str = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAttributeString'", NULL);
#endif
  {
   self->SetAttributeString(name,str);
   tolua_pushcppstring(tolua_S,(const char*)name);
   tolua_pushcppstring(tolua_S,(const char*)str);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAttributeString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  JSONData */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONData_new00
static int tolua_PX2_JSONData_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"JSONData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   JSONData* tolua_ret = (JSONData*)  Mtolua_new((JSONData)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"JSONData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  JSONData */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONData_new00_local
static int tolua_PX2_JSONData_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"JSONData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   JSONData* tolua_ret = (JSONData*)  Mtolua_new((JSONData)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"JSONData");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  JSONData */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONData_delete00
static int tolua_PX2_JSONData_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONData* self = (JSONData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LoadBuffer of class  JSONData */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONData_LoadBuffer00
static int tolua_PX2_JSONData_LoadBuffer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONData",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONData* self = (JSONData*)  tolua_tousertype(tolua_S,1,0);
  const char* buffer = ((const char*)  tolua_tostring(tolua_S,2,0));
  int size = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LoadBuffer'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->LoadBuffer(buffer,size);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LoadBuffer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LoadBuffer of class  JSONData */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONData_LoadBuffer01
static int tolua_PX2_JSONData_LoadBuffer01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONData",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  JSONData* self = (JSONData*)  tolua_tousertype(tolua_S,1,0);
  const std::string strBuffer = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LoadBuffer'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->LoadBuffer(strBuffer);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)strBuffer);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_JSONData_LoadBuffer00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsNull of class  JSONData */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONData_IsNull00
static int tolua_PX2_JSONData_IsNull00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONData* self = (JSONData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsNull'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsNull();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsNull'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ToInt of class  JSONData */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONData_ToInt00
static int tolua_PX2_JSONData_ToInt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONData* self = (JSONData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ToInt'", NULL);
#endif
  {
   int tolua_ret = (int)  self->ToInt();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ToInt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ToFloat of class  JSONData */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONData_ToFloat00
static int tolua_PX2_JSONData_ToFloat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONData* self = (JSONData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ToFloat'", NULL);
#endif
  {
   float tolua_ret = (float)  self->ToFloat();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ToFloat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ToBool of class  JSONData */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONData_ToBool00
static int tolua_PX2_JSONData_ToBool00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONData* self = (JSONData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ToBool'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->ToBool();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ToBool'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ToString of class  JSONData */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONData_ToString00
static int tolua_PX2_JSONData_ToString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONData* self = (JSONData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ToString'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->ToString();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ToString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ToIntVal of class  JSONData */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONData_ToIntVal00
static int tolua_PX2_JSONData_ToIntVal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONData",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONData* self = (JSONData*)  tolua_tousertype(tolua_S,1,0);
  int value = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ToIntVal'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->ToIntVal(value);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)value);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ToIntVal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ToFloatVal of class  JSONData */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONData_ToFloatVal00
static int tolua_PX2_JSONData_ToFloatVal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONData",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONData* self = (JSONData*)  tolua_tousertype(tolua_S,1,0);
  float value = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ToFloatVal'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->ToFloatVal(value);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)value);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ToFloatVal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ToBoolVal of class  JSONData */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONData_ToBoolVal00
static int tolua_PX2_JSONData_ToBoolVal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONData",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONData* self = (JSONData*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ToBoolVal'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->ToBoolVal(value);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushboolean(tolua_S,(bool)value);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ToBoolVal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ToStringVal of class  JSONData */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONData_ToStringVal00
static int tolua_PX2_JSONData_ToStringVal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONData",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONData* self = (JSONData*)  tolua_tousertype(tolua_S,1,0);
  std::string value = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ToStringVal'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->ToStringVal(value);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)value);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ToStringVal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsArray of class  JSONData */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONData_IsArray00
static int tolua_PX2_JSONData_IsArray00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONData* self = (JSONData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsArray'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsArray();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsArray'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetArraySize of class  JSONData */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONData_GetArraySize00
static int tolua_PX2_JSONData_GetArraySize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONData* self = (JSONData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetArraySize'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetArraySize();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetArraySize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetArrayElement of class  JSONData */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONData_GetArrayElement00
static int tolua_PX2_JSONData_GetArrayElement00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONData",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONData* self = (JSONData*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetArrayElement'", NULL);
#endif
  {
   JSONValue tolua_ret = (JSONValue)  self->GetArrayElement(i);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((JSONValue)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"JSONValue");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(JSONValue));
     tolua_pushusertype(tolua_S,tolua_obj,"JSONValue");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetArrayElement'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsHasMember of class  JSONData */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONData_IsHasMember00
static int tolua_PX2_JSONData_IsHasMember00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONData",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONData* self = (JSONData*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsHasMember'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsHasMember(name);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsHasMember'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMember of class  JSONData */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONData_GetMember00
static int tolua_PX2_JSONData_GetMember00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONData",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONData* self = (JSONData*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMember'", NULL);
#endif
  {
   JSONValue tolua_ret = (JSONValue)  self->GetMember(name);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((JSONValue)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"JSONValue");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(JSONValue));
     tolua_pushusertype(tolua_S,tolua_obj,"JSONValue");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMember'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  JSONValue */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONValue_new00
static int tolua_PX2_JSONValue_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"JSONValue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   JSONValue* tolua_ret = (JSONValue*)  Mtolua_new((JSONValue)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"JSONValue");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  JSONValue */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONValue_new00_local
static int tolua_PX2_JSONValue_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"JSONValue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   JSONValue* tolua_ret = (JSONValue*)  Mtolua_new((JSONValue)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"JSONValue");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  JSONValue */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONValue_new01
static int tolua_PX2_JSONValue_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"JSONValue",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const JSONValue",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const JSONValue* rhs = ((const JSONValue*)  tolua_tousertype(tolua_S,2,0));
  {
   JSONValue* tolua_ret = (JSONValue*)  Mtolua_new((JSONValue)(*rhs));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"JSONValue");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_JSONValue_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  JSONValue */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONValue_new01_local
static int tolua_PX2_JSONValue_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"JSONValue",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const JSONValue",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const JSONValue* rhs = ((const JSONValue*)  tolua_tousertype(tolua_S,2,0));
  {
   JSONValue* tolua_ret = (JSONValue*)  Mtolua_new((JSONValue)(*rhs));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"JSONValue");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_JSONValue_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  JSONValue */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONValue_delete00
static int tolua_PX2_JSONValue_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONValue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONValue* self = (JSONValue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsNull of class  JSONValue */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONValue_IsNull00
static int tolua_PX2_JSONValue_IsNull00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONValue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONValue* self = (JSONValue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsNull'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsNull();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsNull'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ToInt of class  JSONValue */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONValue_ToInt00
static int tolua_PX2_JSONValue_ToInt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONValue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONValue* self = (JSONValue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ToInt'", NULL);
#endif
  {
   int tolua_ret = (int)  self->ToInt();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ToInt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ToFloat of class  JSONValue */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONValue_ToFloat00
static int tolua_PX2_JSONValue_ToFloat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONValue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONValue* self = (JSONValue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ToFloat'", NULL);
#endif
  {
   float tolua_ret = (float)  self->ToFloat();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ToFloat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ToBool of class  JSONValue */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONValue_ToBool00
static int tolua_PX2_JSONValue_ToBool00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONValue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONValue* self = (JSONValue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ToBool'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->ToBool();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ToBool'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ToString of class  JSONValue */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONValue_ToString00
static int tolua_PX2_JSONValue_ToString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONValue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONValue* self = (JSONValue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ToString'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->ToString();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ToString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ToIntVal of class  JSONValue */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONValue_ToIntVal00
static int tolua_PX2_JSONValue_ToIntVal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONValue",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONValue* self = (JSONValue*)  tolua_tousertype(tolua_S,1,0);
  int value = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ToIntVal'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->ToIntVal(value);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)value);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ToIntVal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ToFloatVal of class  JSONValue */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONValue_ToFloatVal00
static int tolua_PX2_JSONValue_ToFloatVal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONValue",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONValue* self = (JSONValue*)  tolua_tousertype(tolua_S,1,0);
  float value = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ToFloatVal'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->ToFloatVal(value);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)value);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ToFloatVal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ToBoolVal of class  JSONValue */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONValue_ToBoolVal00
static int tolua_PX2_JSONValue_ToBoolVal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONValue",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONValue* self = (JSONValue*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ToBoolVal'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->ToBoolVal(value);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushboolean(tolua_S,(bool)value);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ToBoolVal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ToStringVal of class  JSONValue */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONValue_ToStringVal00
static int tolua_PX2_JSONValue_ToStringVal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONValue",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONValue* self = (JSONValue*)  tolua_tousertype(tolua_S,1,0);
  std::string value = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ToStringVal'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->ToStringVal(value);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)value);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ToStringVal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsArray of class  JSONValue */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONValue_IsArray00
static int tolua_PX2_JSONValue_IsArray00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONValue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONValue* self = (JSONValue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsArray'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsArray();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsArray'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetArraySize of class  JSONValue */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONValue_GetArraySize00
static int tolua_PX2_JSONValue_GetArraySize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONValue",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONValue* self = (JSONValue*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetArraySize'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetArraySize();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetArraySize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetArrayElement of class  JSONValue */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONValue_GetArrayElement00
static int tolua_PX2_JSONValue_GetArrayElement00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONValue",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONValue* self = (JSONValue*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetArrayElement'", NULL);
#endif
  {
   JSONValue tolua_ret = (JSONValue)  self->GetArrayElement(i);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((JSONValue)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"JSONValue");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(JSONValue));
     tolua_pushusertype(tolua_S,tolua_obj,"JSONValue");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetArrayElement'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsHasMember of class  JSONValue */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONValue_IsHasMember00
static int tolua_PX2_JSONValue_IsHasMember00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONValue",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONValue* self = (JSONValue*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsHasMember'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsHasMember(name);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsHasMember'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMember of class  JSONValue */
#ifndef TOLUA_DISABLE_tolua_PX2_JSONValue_GetMember00
static int tolua_PX2_JSONValue_GetMember00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"JSONValue",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  JSONValue* self = (JSONValue*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMember'", NULL);
#endif
  {
   JSONValue tolua_ret = (JSONValue)  self->GetMember(name);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((JSONValue)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"JSONValue");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(JSONValue));
     tolua_pushusertype(tolua_S,tolua_obj,"JSONValue");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMember'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  StringHelp */
#ifndef TOLUA_DISABLE_tolua_PX2_StringHelp_new00
static int tolua_PX2_StringHelp_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"StringHelp",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   StringHelp* tolua_ret = (StringHelp*)  Mtolua_new((StringHelp)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"StringHelp");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  StringHelp */
#ifndef TOLUA_DISABLE_tolua_PX2_StringHelp_new00_local
static int tolua_PX2_StringHelp_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"StringHelp",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   StringHelp* tolua_ret = (StringHelp*)  Mtolua_new((StringHelp)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"StringHelp");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  StringHelp */
#ifndef TOLUA_DISABLE_tolua_PX2_StringHelp_delete00
static int tolua_PX2_StringHelp_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StringHelp",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StringHelp* self = (StringHelp*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: StandardiseFilename of class  StringHelp */
#ifndef TOLUA_DISABLE_tolua_PX2_StringHelp_StandardiseFilename00
static int tolua_PX2_StringHelp_StandardiseFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"StringHelp",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const std::string path = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   std::string tolua_ret = (std::string)  StringHelp::StandardiseFilename(path);
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)path);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'StandardiseFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: StandardisePath of class  StringHelp */
#ifndef TOLUA_DISABLE_tolua_PX2_StringHelp_StandardisePath00
static int tolua_PX2_StringHelp_StandardisePath00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"StringHelp",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const std::string path = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   std::string tolua_ret = (std::string)  StringHelp::StandardisePath(path);
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)path);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'StandardisePath'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SplitFilename of class  StringHelp */
#ifndef TOLUA_DISABLE_tolua_PX2_StringHelp_SplitFilename00
static int tolua_PX2_StringHelp_SplitFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"StringHelp",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const std::string fullName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  std::string outPath = ((std::string)  tolua_tocppstring(tolua_S,3,0));
  std::string outBaseFileName = ((std::string)  tolua_tocppstring(tolua_S,4,0));
  {
   StringHelp::SplitFilename(fullName,outPath,outBaseFileName);
   tolua_pushcppstring(tolua_S,(const char*)fullName);
   tolua_pushcppstring(tolua_S,(const char*)outPath);
   tolua_pushcppstring(tolua_S,(const char*)outBaseFileName);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SplitFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SplitBaseFilename of class  StringHelp */
#ifndef TOLUA_DISABLE_tolua_PX2_StringHelp_SplitBaseFilename00
static int tolua_PX2_StringHelp_SplitBaseFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"StringHelp",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const std::string baseFileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  std::string outBaseName = ((std::string)  tolua_tocppstring(tolua_S,3,0));
  std::string outExtention = ((std::string)  tolua_tocppstring(tolua_S,4,0));
  {
   StringHelp::SplitBaseFilename(baseFileName,outBaseName,outExtention);
   tolua_pushcppstring(tolua_S,(const char*)baseFileName);
   tolua_pushcppstring(tolua_S,(const char*)outBaseName);
   tolua_pushcppstring(tolua_S,(const char*)outExtention);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SplitBaseFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SplitFullFilename of class  StringHelp */
#ifndef TOLUA_DISABLE_tolua_PX2_StringHelp_SplitFullFilename00
static int tolua_PX2_StringHelp_SplitFullFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"StringHelp",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,4,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const std::string fullName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  std::string outPath = ((std::string)  tolua_tocppstring(tolua_S,3,0));
  std::string outBaseName = ((std::string)  tolua_tocppstring(tolua_S,4,0));
  std::string outExtention = ((std::string)  tolua_tocppstring(tolua_S,5,0));
  {
   StringHelp::SplitFullFilename(fullName,outPath,outBaseName,outExtention);
   tolua_pushcppstring(tolua_S,(const char*)fullName);
   tolua_pushcppstring(tolua_S,(const char*)outPath);
   tolua_pushcppstring(tolua_S,(const char*)outBaseName);
   tolua_pushcppstring(tolua_S,(const char*)outExtention);
  }
 }
 return 4;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SplitFullFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: PathToWindowStyle of class  StringHelp */
#ifndef TOLUA_DISABLE_tolua_PX2_StringHelp_PathToWindowStyle00
static int tolua_PX2_StringHelp_PathToWindowStyle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"StringHelp",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const std::string fromPath = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   std::string tolua_ret = (std::string)  StringHelp::PathToWindowStyle(fromPath);
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)fromPath);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'PathToWindowStyle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IntToString of class  StringHelp */
#ifndef TOLUA_DISABLE_tolua_PX2_StringHelp_IntToString00
static int tolua_PX2_StringHelp_IntToString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"StringHelp",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int val = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   std::string tolua_ret = (std::string)  StringHelp::IntToString(val);
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IntToString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: StringToInt of class  StringHelp */
#ifndef TOLUA_DISABLE_tolua_PX2_StringHelp_StringToInt00
static int tolua_PX2_StringHelp_StringToInt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"StringHelp",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const std::string val = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   int tolua_ret = (int)  StringHelp::StringToInt(val);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)val);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'StringToInt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: FloatToString of class  StringHelp */
#ifndef TOLUA_DISABLE_tolua_PX2_StringHelp_FloatToString00
static int tolua_PX2_StringHelp_FloatToString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"StringHelp",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float val = ((float)  tolua_tonumber(tolua_S,2,0));
  int numPoint = ((int)  tolua_tonumber(tolua_S,3,1));
  {
   std::string tolua_ret = (std::string)  StringHelp::FloatToString(val,numPoint);
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'FloatToString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: StringToFloat of class  StringHelp */
#ifndef TOLUA_DISABLE_tolua_PX2_StringHelp_StringToFloat00
static int tolua_PX2_StringHelp_StringToFloat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"StringHelp",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const std::string val = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   float tolua_ret = (float)  StringHelp::StringToFloat(val);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)val);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'StringToFloat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: StringToXYZ of class  StringHelp */
#ifndef TOLUA_DISABLE_tolua_PX2_StringHelp_StringToXYZ00
static int tolua_PX2_StringHelp_StringToXYZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"StringHelp",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const std::string val = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  float x = ((float)  tolua_tonumber(tolua_S,3,0));
  float y = ((float)  tolua_tonumber(tolua_S,4,0));
  float z = ((float)  tolua_tonumber(tolua_S,5,0));
  {
   StringHelp::StringToXYZ(val,x,y,z);
   tolua_pushcppstring(tolua_S,(const char*)val);
   tolua_pushnumber(tolua_S,(lua_Number)x);
   tolua_pushnumber(tolua_S,(lua_Number)y);
   tolua_pushnumber(tolua_S,(lua_Number)z);
  }
 }
 return 4;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'StringToXYZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: FormatColor of class  StringHelp */
#ifndef TOLUA_DISABLE_tolua_PX2_StringHelp_FormatColor00
static int tolua_PX2_StringHelp_FormatColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"StringHelp",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int r = ((int)  tolua_tonumber(tolua_S,2,0));
  int g = ((int)  tolua_tonumber(tolua_S,3,0));
  int b = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   std::string tolua_ret = (std::string)  StringHelp::FormatColor(r,g,b);
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'FormatColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  FunParam */
#ifndef TOLUA_DISABLE_tolua_PX2_FunParam_new00
static int tolua_PX2_FunParam_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"FunParam",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   FunParam* tolua_ret = (FunParam*)  Mtolua_new((FunParam)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FunParam");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  FunParam */
#ifndef TOLUA_DISABLE_tolua_PX2_FunParam_new00_local
static int tolua_PX2_FunParam_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"FunParam",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   FunParam* tolua_ret = (FunParam*)  Mtolua_new((FunParam)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FunParam");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  FunParam */
#ifndef TOLUA_DISABLE_tolua_PX2_FunParam_delete00
static int tolua_PX2_FunParam_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FunParam",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FunParam* self = (FunParam*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Name of class  FunParam */
#ifndef TOLUA_DISABLE_tolua_get_FunParam_Name
static int tolua_get_FunParam_Name(lua_State* tolua_S)
{
  FunParam* self = (FunParam*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->Name);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Name of class  FunParam */
#ifndef TOLUA_DISABLE_tolua_set_FunParam_Name
static int tolua_set_FunParam_Name(lua_State* tolua_S)
{
  FunParam* self = (FunParam*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Name = ((std::string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Type of class  FunParam */
#ifndef TOLUA_DISABLE_tolua_get_FunParam_Type
static int tolua_get_FunParam_Type(lua_State* tolua_S)
{
  FunParam* self = (FunParam*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Type'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Type);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Type of class  FunParam */
#ifndef TOLUA_DISABLE_tolua_set_FunParam_Type
static int tolua_set_FunParam_Type(lua_State* tolua_S)
{
  FunParam* self = (FunParam*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Type'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Type = ((FunParamType) (int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Value of class  FunParam */
#ifndef TOLUA_DISABLE_tolua_get_FunParam_Value
static int tolua_get_FunParam_Value(lua_State* tolua_S)
{
  FunParam* self = (FunParam*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Value'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->Value,"Any");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Value of class  FunParam */
#ifndef TOLUA_DISABLE_tolua_set_FunParam_Value
static int tolua_set_FunParam_Value(lua_State* tolua_S)
{
  FunParam* self = (FunParam*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Value'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Any",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Value = *((Any*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObject_new00
static int tolua_PX2_FunObject_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"FunObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   FunObject* tolua_ret = (FunObject*)  Mtolua_new((FunObject)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FunObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObject_new00_local
static int tolua_PX2_FunObject_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"FunObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   FunObject* tolua_ret = (FunObject*)  Mtolua_new((FunObject)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FunObject");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObject_delete00
static int tolua_PX2_FunObject_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FunObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FunObject* self = (FunObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IsClassCatalogue of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_get_FunObject_IsClassCatalogue
static int tolua_get_FunObject_IsClassCatalogue(lua_State* tolua_S)
{
  FunObject* self = (FunObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IsClassCatalogue'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->IsClassCatalogue);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IsClassCatalogue of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_set_FunObject_IsClassCatalogue
static int tolua_set_FunObject_IsClassCatalogue(lua_State* tolua_S)
{
  FunObject* self = (FunObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IsClassCatalogue'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IsClassCatalogue = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ParentClassName of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_get_FunObject_ParentClassName
static int tolua_get_FunObject_ParentClassName(lua_State* tolua_S)
{
  FunObject* self = (FunObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ParentClassName'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->ParentClassName);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ParentClassName of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_set_FunObject_ParentClassName
static int tolua_set_FunObject_ParentClassName(lua_State* tolua_S)
{
  FunObject* self = (FunObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ParentClassName'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ParentClassName = ((std::string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ClassName of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_get_FunObject_ClassName
static int tolua_get_FunObject_ClassName(lua_State* tolua_S)
{
  FunObject* self = (FunObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ClassName'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->ClassName);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ClassName of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_set_FunObject_ClassName
static int tolua_set_FunObject_ClassName(lua_State* tolua_S)
{
  FunObject* self = (FunObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ClassName'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ClassName = ((std::string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Name of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_get_FunObject_Name
static int tolua_get_FunObject_Name(lua_State* tolua_S)
{
  FunObject* self = (FunObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->Name);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Name of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_set_FunObject_Name
static int tolua_set_FunObject_Name(lua_State* tolua_S)
{
  FunObject* self = (FunObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Name'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Name = ((std::string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddInput of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObject_AddInput00
static int tolua_PX2_FunObject_AddInput00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FunObject",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const Any",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FunObject* self = (FunObject*)  tolua_tousertype(tolua_S,1,0);
  const std::string paramName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  FunParamType type = ((FunParamType) (int)  tolua_tonumber(tolua_S,3,0));
  const Any* paramValue = ((const Any*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddInput'", NULL);
#endif
  {
   self->AddInput(paramName,type,*paramValue);
   tolua_pushcppstring(tolua_S,(const char*)paramName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddInput'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddOutput of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObject_AddOutput00
static int tolua_PX2_FunObject_AddOutput00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FunObject",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const Any",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FunObject* self = (FunObject*)  tolua_tousertype(tolua_S,1,0);
  const std::string paramName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  FunParamType type = ((FunParamType) (int)  tolua_tonumber(tolua_S,3,0));
  const Any* paramValue = ((const Any*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddOutput'", NULL);
#endif
  {
   self->AddOutput(paramName,type,*paramValue);
   tolua_pushcppstring(tolua_S,(const char*)paramName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddOutput'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetInParams of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObject_GetInParams00
static int tolua_PX2_FunObject_GetInParams00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const FunObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const FunObject* self = (const FunObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetInParams'", NULL);
#endif
  {
   const std::vector<FunParam>& tolua_ret = (const std::vector<FunParam>&)  self->GetInParams();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const std::vector<FunParam>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetInParams'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumInParams of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObject_GetNumInParams00
static int tolua_PX2_FunObject_GetNumInParams00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const FunObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const FunObject* self = (const FunObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumInParams'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumInParams();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumInParams'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetInParam of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObject_GetInParam00
static int tolua_PX2_FunObject_GetInParam00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const FunObject",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const FunObject* self = (const FunObject*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetInParam'", NULL);
#endif
  {
   const FunParam& tolua_ret = (const FunParam&)  self->GetInParam(i);
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const FunParam");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetInParam'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ClearInParams of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObject_ClearInParams00
static int tolua_PX2_FunObject_ClearInParams00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FunObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FunObject* self = (FunObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ClearInParams'", NULL);
#endif
  {
   self->ClearInParams();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ClearInParams'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetOutParams of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObject_GetOutParams00
static int tolua_PX2_FunObject_GetOutParams00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const FunObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const FunObject* self = (const FunObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetOutParams'", NULL);
#endif
  {
   const std::vector<FunParam>& tolua_ret = (const std::vector<FunParam>&)  self->GetOutParams();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const std::vector<FunParam>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetOutParams'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumOutParams of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObject_GetNumOutParams00
static int tolua_PX2_FunObject_GetNumOutParams00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const FunObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const FunObject* self = (const FunObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumOutParams'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumOutParams();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumOutParams'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetOutParam of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObject_GetOutParam00
static int tolua_PX2_FunObject_GetOutParam00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const FunObject",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const FunObject* self = (const FunObject*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetOutParam'", NULL);
#endif
  {
   const FunParam& tolua_ret = (const FunParam&)  self->GetOutParam(i);
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const FunParam");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetOutParam'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ClearOutParams of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObject_ClearOutParams00
static int tolua_PX2_FunObject_ClearOutParams00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FunObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FunObject* self = (FunObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ClearOutParams'", NULL);
#endif
  {
   self->ClearOutParams();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ClearOutParams'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetParamType of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObject_SetParamType00
static int tolua_PX2_FunObject_SetParamType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FunObject",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FunObject* self = (FunObject*)  tolua_tousertype(tolua_S,1,0);
  FunObject::ParamType pt = ((FunObject::ParamType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetParamType'", NULL);
#endif
  {
   self->SetParamType(pt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetParamType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetParamType of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObject_GetParamType00
static int tolua_PX2_FunObject_GetParamType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const FunObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const FunObject* self = (const FunObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetParamType'", NULL);
#endif
  {
   FunObject::ParamType tolua_ret = (FunObject::ParamType)  self->GetParamType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetParamType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAddClass of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObject_GetAddClass00
static int tolua_PX2_FunObject_GetAddClass00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FunObject",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FunObject* self = (FunObject*)  tolua_tousertype(tolua_S,1,0);
  const std::string className = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAddClass'", NULL);
#endif
  {
   FunObject* tolua_ret = (FunObject*)  self->GetAddClass(className);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FunObject");
   tolua_pushcppstring(tolua_S,(const char*)className);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAddClass'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFunObject of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObject_GetFunObject00
static int tolua_PX2_FunObject_GetFunObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FunObject",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FunObject* self = (FunObject*)  tolua_tousertype(tolua_S,1,0);
  const std::string className = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string funName = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFunObject'", NULL);
#endif
  {
   FunObject* tolua_ret = (FunObject*)  self->GetFunObject(className,funName);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FunObject");
   tolua_pushcppstring(tolua_S,(const char*)className);
   tolua_pushcppstring(tolua_S,(const char*)funName);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFunObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddFunObject of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObject_AddFunObject00
static int tolua_PX2_FunObject_AddFunObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FunObject",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"FunObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FunObject* self = (FunObject*)  tolua_tousertype(tolua_S,1,0);
  FunObject* funObj = ((FunObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddFunObject'", NULL);
#endif
  {
   self->AddFunObject(funObj);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddFunObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsHasFunObject of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObject_IsHasFunObject00
static int tolua_PX2_FunObject_IsHasFunObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FunObject",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"FunObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FunObject* self = (FunObject*)  tolua_tousertype(tolua_S,1,0);
  FunObject* funObj = ((FunObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsHasFunObject'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsHasFunObject(funObj);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsHasFunObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: mChildFunObjectVec_Class of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_get_FunObject_mChildFunObjectVec_Class
static int tolua_get_FunObject_mChildFunObjectVec_Class(lua_State* tolua_S)
{
  FunObject* self = (FunObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'mChildFunObjectVec_Class'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->mChildFunObjectVec_Class,"std::vector<Pointer0<FunObject> >");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: mChildFunObjectVec_Class of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_set_FunObject_mChildFunObjectVec_Class
static int tolua_set_FunObject_mChildFunObjectVec_Class(lua_State* tolua_S)
{
  FunObject* self = (FunObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'mChildFunObjectVec_Class'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"std::vector<Pointer0<FunObject> >",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->mChildFunObjectVec_Class = *((std::vector<Pointer0<FunObject> >*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: mChildFunObjectVec of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_get_FunObject_mChildFunObjectVec
static int tolua_get_FunObject_mChildFunObjectVec(lua_State* tolua_S)
{
  FunObject* self = (FunObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'mChildFunObjectVec'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->mChildFunObjectVec,"std::vector<Pointer0<FunObject> >");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: mChildFunObjectVec of class  FunObject */
#ifndef TOLUA_DISABLE_tolua_set_FunObject_mChildFunObjectVec
static int tolua_set_FunObject_mChildFunObjectVec(lua_State* tolua_S)
{
  FunObject* self = (FunObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'mChildFunObjectVec'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"std::vector<Pointer0<FunObject> >",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->mChildFunObjectVec = *((std::vector<Pointer0<FunObject> >*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  FunObjectManager */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObjectManager_new00
static int tolua_PX2_FunObjectManager_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"FunObjectManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   FunObjectManager* tolua_ret = (FunObjectManager*)  Mtolua_new((FunObjectManager)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FunObjectManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  FunObjectManager */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObjectManager_new00_local
static int tolua_PX2_FunObjectManager_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"FunObjectManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   FunObjectManager* tolua_ret = (FunObjectManager*)  Mtolua_new((FunObjectManager)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FunObjectManager");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  FunObjectManager */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObjectManager_delete00
static int tolua_PX2_FunObjectManager_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FunObjectManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FunObjectManager* self = (FunObjectManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Initlize of class  FunObjectManager */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObjectManager_Initlize00
static int tolua_PX2_FunObjectManager_Initlize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FunObjectManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FunObjectManager* self = (FunObjectManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Initlize'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->Initlize();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Initlize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Terminate of class  FunObjectManager */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObjectManager_Terminate00
static int tolua_PX2_FunObjectManager_Terminate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FunObjectManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FunObjectManager* self = (FunObjectManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Terminate'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->Terminate();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Terminate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetObjectFunObject of class  FunObjectManager */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObjectManager_SetObjectFunObject00
static int tolua_PX2_FunObjectManager_SetObjectFunObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FunObjectManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"FunObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FunObjectManager* self = (FunObjectManager*)  tolua_tousertype(tolua_S,1,0);
  FunObject* funObject = ((FunObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetObjectFunObject'", NULL);
#endif
  {
   self->SetObjectFunObject(funObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetObjectFunObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetObjectFunObject of class  FunObjectManager */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObjectManager_GetObjectFunObject00
static int tolua_PX2_FunObjectManager_GetObjectFunObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FunObjectManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FunObjectManager* self = (FunObjectManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetObjectFunObject'", NULL);
#endif
  {
   FunObject* tolua_ret = (FunObject*)  self->GetObjectFunObject();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FunObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetObjectFunObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFunMap of class  FunObjectManager */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObjectManager_GetFunMap00
static int tolua_PX2_FunObjectManager_GetFunMap00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FunObjectManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FunObjectManager* self = (FunObjectManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFunMap'", NULL);
#endif
  {
   std::map<std::string,FunObjectPtr> tolua_ret = (std::map<std::string,FunObjectPtr>)  self->GetFunMap();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::map<std::string,FunObjectPtr>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::map<std::string,FunObjectPtr>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::map<std::string,FunObjectPtr>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::map<std::string,FunObjectPtr>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFunMap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAddFunMap of class  FunObjectManager */
#ifndef TOLUA_DISABLE_tolua_PX2_FunObjectManager_GetAddFunMap00
static int tolua_PX2_FunObjectManager_GetAddFunMap00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FunObjectManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FunObjectManager* self = (FunObjectManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAddFunMap'", NULL);
#endif
  {
   FunObject* tolua_ret = (FunObject*)  self->GetAddFunMap(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FunObject");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAddFunMap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_new00
static int tolua_PX2_HPoint_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   HPoint* tolua_ret = (HPoint*)  Mtolua_new((HPoint)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_new00_local
static int tolua_PX2_HPoint_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   HPoint* tolua_ret = (HPoint*)  Mtolua_new((HPoint)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_new01
static int tolua_PX2_HPoint_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPoint",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const HPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const HPoint* pnt = ((const HPoint*)  tolua_tousertype(tolua_S,2,0));
  {
   HPoint* tolua_ret = (HPoint*)  Mtolua_new((HPoint)(*pnt));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPoint");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPoint_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_new01_local
static int tolua_PX2_HPoint_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPoint",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const HPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const HPoint* pnt = ((const HPoint*)  tolua_tousertype(tolua_S,2,0));
  {
   HPoint* tolua_ret = (HPoint*)  Mtolua_new((HPoint)(*pnt));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPoint_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_new02
static int tolua_PX2_HPoint_new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  float z = ((float)  tolua_tonumber(tolua_S,4,0));
  float w = ((float)  tolua_tonumber(tolua_S,5,0));
  {
   HPoint* tolua_ret = (HPoint*)  Mtolua_new((HPoint)(x,y,z,w));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPoint");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPoint_new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_new02_local
static int tolua_PX2_HPoint_new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  float z = ((float)  tolua_tonumber(tolua_S,4,0));
  float w = ((float)  tolua_tonumber(tolua_S,5,0));
  {
   HPoint* tolua_ret = (HPoint*)  Mtolua_new((HPoint)(x,y,z,w));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPoint_new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_delete00
static int tolua_PX2_HPoint_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HPoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  HPoint* self = (HPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator[] of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint__geti00
static int tolua_PX2_HPoint__geti00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const HPoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const HPoint* self = (const HPoint*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator[]'", NULL);
#endif
  {
   float tolua_ret = (float)  self->operator[](i);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.geti'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator&[] of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint__seti00
static int tolua_PX2_HPoint__seti00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HPoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  HPoint* self = (HPoint*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
  float tolua_value = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator&[]'", NULL);
#endif
  self->operator[](i) =  tolua_value;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.seti'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator[] of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint__geti01
static int tolua_PX2_HPoint__geti01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HPoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  HPoint* self = (HPoint*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator[]'", NULL);
#endif
  {
   float tolua_ret = (float)  self->operator[](i);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPoint__geti00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: X of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_X00
static int tolua_PX2_HPoint_X00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const HPoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const HPoint* self = (const HPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'X'", NULL);
#endif
  {
   float tolua_ret = (float)  self->X();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'X'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: X of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_X01
static int tolua_PX2_HPoint_X01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HPoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  HPoint* self = (HPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'X'", NULL);
#endif
  {
   float tolua_ret = (float)  self->X();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPoint_X00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Y of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_Y00
static int tolua_PX2_HPoint_Y00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const HPoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const HPoint* self = (const HPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Y'", NULL);
#endif
  {
   float tolua_ret = (float)  self->Y();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Y'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Y of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_Y01
static int tolua_PX2_HPoint_Y01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HPoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  HPoint* self = (HPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Y'", NULL);
#endif
  {
   float tolua_ret = (float)  self->Y();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPoint_Y00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Z of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_Z00
static int tolua_PX2_HPoint_Z00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const HPoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const HPoint* self = (const HPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Z'", NULL);
#endif
  {
   float tolua_ret = (float)  self->Z();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Z'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Z of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_Z01
static int tolua_PX2_HPoint_Z01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HPoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  HPoint* self = (HPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Z'", NULL);
#endif
  {
   float tolua_ret = (float)  self->Z();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPoint_Z00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: W of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_W00
static int tolua_PX2_HPoint_W00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const HPoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const HPoint* self = (const HPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'W'", NULL);
#endif
  {
   float tolua_ret = (float)  self->W();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'W'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: W of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_W01
static int tolua_PX2_HPoint_W01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HPoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  HPoint* self = (HPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'W'", NULL);
#endif
  {
   float tolua_ret = (float)  self->W();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPoint_W00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint_new00
static int tolua_PX2_APoint_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"APoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   APoint* tolua_ret = (APoint*)  Mtolua_new((APoint)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"APoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint_new00_local
static int tolua_PX2_APoint_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"APoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   APoint* tolua_ret = (APoint*)  Mtolua_new((APoint)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint_new01
static int tolua_PX2_APoint_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"APoint",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const APoint* pnt = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
  {
   APoint* tolua_ret = (APoint*)  Mtolua_new((APoint)(*pnt));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"APoint");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_APoint_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint_new01_local
static int tolua_PX2_APoint_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"APoint",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const APoint* pnt = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
  {
   APoint* tolua_ret = (APoint*)  Mtolua_new((APoint)(*pnt));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_APoint_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint_new02
static int tolua_PX2_APoint_new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"APoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  float z = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   APoint* tolua_ret = (APoint*)  Mtolua_new((APoint)(x,y,z));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"APoint");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_APoint_new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint_new02_local
static int tolua_PX2_APoint_new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"APoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  float z = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   APoint* tolua_ret = (APoint*)  Mtolua_new((APoint)(x,y,z));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_APoint_new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint_delete00
static int tolua_PX2_APoint_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"APoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  APoint* self = (APoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetX of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint_SetX00
static int tolua_PX2_APoint_SetX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"APoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  APoint* self = (APoint*)  tolua_tousertype(tolua_S,1,0);
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetX'", NULL);
#endif
  {
   self->SetX(x);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetY of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint_SetY00
static int tolua_PX2_APoint_SetY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"APoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  APoint* self = (APoint*)  tolua_tousertype(tolua_S,1,0);
  float y = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetY'", NULL);
#endif
  {
   self->SetY(y);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetZ of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint_SetZ00
static int tolua_PX2_APoint_SetZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"APoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  APoint* self = (APoint*)  tolua_tousertype(tolua_S,1,0);
  float z = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetZ'", NULL);
#endif
  {
   self->SetZ(z);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetW of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint_SetW00
static int tolua_PX2_APoint_SetW00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"APoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  APoint* self = (APoint*)  tolua_tousertype(tolua_S,1,0);
  float w = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetW'", NULL);
#endif
  {
   self->SetW(w);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetW'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint_Set00
static int tolua_PX2_APoint_Set00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"APoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  APoint* self = (APoint*)  tolua_tousertype(tolua_S,1,0);
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  float z = ((float)  tolua_tonumber(tolua_S,4,0));
  float w = ((float)  tolua_tonumber(tolua_S,5,1.0f));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set'", NULL);
#endif
  {
   self->Set(x,y,z,w);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Dot of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint_Dot00
static int tolua_PX2_APoint_Dot00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const APoint",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const APoint* self = (const APoint*)  tolua_tousertype(tolua_S,1,0);
  const AVector* vec = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Dot'", NULL);
#endif
  {
   float tolua_ret = (float)  self->Dot(*vec);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Dot'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ORIGIN of class  APoint */
#ifndef TOLUA_DISABLE_tolua_get_APoint_ORIGIN
static int tolua_get_APoint_ORIGIN(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&APoint::ORIGIN,"const APoint");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UNIT of class  APoint */
#ifndef TOLUA_DISABLE_tolua_get_APoint_UNIT
static int tolua_get_APoint_UNIT(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&APoint::UNIT,"const APoint");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_new00
static int tolua_PX2_AVector_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   AVector* tolua_ret = (AVector*)  Mtolua_new((AVector)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AVector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_new00_local
static int tolua_PX2_AVector_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   AVector* tolua_ret = (AVector*)  Mtolua_new((AVector)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_new01
static int tolua_PX2_AVector_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AVector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const AVector* vec = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
  {
   AVector* tolua_ret = (AVector*)  Mtolua_new((AVector)(*vec));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AVector");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_AVector_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_new01_local
static int tolua_PX2_AVector_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AVector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const AVector* vec = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
  {
   AVector* tolua_ret = (AVector*)  Mtolua_new((AVector)(*vec));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_AVector_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_new02
static int tolua_PX2_AVector_new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AVector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  float z = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   AVector* tolua_ret = (AVector*)  Mtolua_new((AVector)(x,y,z));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AVector");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_AVector_new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_new02_local
static int tolua_PX2_AVector_new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AVector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  float z = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   AVector* tolua_ret = (AVector*)  Mtolua_new((AVector)(x,y,z));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_AVector_new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_new03
static int tolua_PX2_AVector_new03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AVector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Float3* tuple = ((const Float3*)  tolua_tousertype(tolua_S,2,0));
  {
   AVector* tolua_ret = (AVector*)  Mtolua_new((AVector)(*tuple));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AVector");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_AVector_new02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_new03_local
static int tolua_PX2_AVector_new03_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AVector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Float3* tuple = ((const Float3*)  tolua_tousertype(tolua_S,2,0));
  {
   AVector* tolua_ret = (AVector*)  Mtolua_new((AVector)(*tuple));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_AVector_new02_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_delete00
static int tolua_PX2_AVector_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AVector* self = (AVector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetX of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_SetX00
static int tolua_PX2_AVector_SetX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AVector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AVector* self = (AVector*)  tolua_tousertype(tolua_S,1,0);
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetX'", NULL);
#endif
  {
   self->SetX(x);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetY of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_SetY00
static int tolua_PX2_AVector_SetY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AVector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AVector* self = (AVector*)  tolua_tousertype(tolua_S,1,0);
  float y = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetY'", NULL);
#endif
  {
   self->SetY(y);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetZ of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_SetZ00
static int tolua_PX2_AVector_SetZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AVector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AVector* self = (AVector*)  tolua_tousertype(tolua_S,1,0);
  float z = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetZ'", NULL);
#endif
  {
   self->SetZ(z);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetW of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_SetW00
static int tolua_PX2_AVector_SetW00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AVector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AVector* self = (AVector*)  tolua_tousertype(tolua_S,1,0);
  float w = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetW'", NULL);
#endif
  {
   self->SetW(w);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetW'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_Set00
static int tolua_PX2_AVector_Set00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AVector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AVector* self = (AVector*)  tolua_tousertype(tolua_S,1,0);
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  float z = ((float)  tolua_tonumber(tolua_S,4,0));
  float w = ((float)  tolua_tonumber(tolua_S,5,1.0f));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set'", NULL);
#endif
  {
   self->Set(x,y,z,w);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Length of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_Length00
static int tolua_PX2_AVector_Length00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AVector* self = (const AVector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Length'", NULL);
#endif
  {
   float tolua_ret = (float)  self->Length();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Length'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SquaredLength of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_SquaredLength00
static int tolua_PX2_AVector_SquaredLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AVector* self = (const AVector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SquaredLength'", NULL);
#endif
  {
   float tolua_ret = (float)  self->SquaredLength();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SquaredLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Dot of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_Dot00
static int tolua_PX2_AVector_Dot00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AVector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AVector* self = (const AVector*)  tolua_tousertype(tolua_S,1,0);
  const AVector* vec = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Dot'", NULL);
#endif
  {
   float tolua_ret = (float)  self->Dot(*vec);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Dot'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Normalize of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_Normalize00
static int tolua_PX2_AVector_Normalize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AVector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AVector* self = (AVector*)  tolua_tousertype(tolua_S,1,0);
  float epsilon = ((float)  tolua_tonumber(tolua_S,2,Mathf::ZERO_TOLERANCE));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Normalize'", NULL);
#endif
  {
   float tolua_ret = (float)  self->Normalize(epsilon);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Normalize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Cross of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_Cross00
static int tolua_PX2_AVector_Cross00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AVector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AVector* self = (const AVector*)  tolua_tousertype(tolua_S,1,0);
  const AVector* vec = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Cross'", NULL);
#endif
  {
   AVector tolua_ret = (AVector)  self->Cross(*vec);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((AVector)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(AVector));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Cross'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: UnitCross of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_UnitCross00
static int tolua_PX2_AVector_UnitCross00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AVector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AVector* self = (const AVector*)  tolua_tousertype(tolua_S,1,0);
  const AVector* vec = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'UnitCross'", NULL);
#endif
  {
   AVector tolua_ret = (AVector)  self->UnitCross(*vec);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((AVector)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(AVector));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'UnitCross'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Orthonormalize of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_Orthonormalize00
static int tolua_PX2_AVector_Orthonormalize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AVector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"AVector",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"AVector",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AVector* vec0 = ((AVector*)  tolua_tousertype(tolua_S,2,0));
  AVector* vec1 = ((AVector*)  tolua_tousertype(tolua_S,3,0));
  AVector* vec2 = ((AVector*)  tolua_tousertype(tolua_S,4,0));
  {
   AVector::Orthonormalize(*vec0,*vec1,*vec2);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Orthonormalize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Orthonormalize of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_Orthonormalize01
static int tolua_PX2_AVector_Orthonormalize01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AVector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"AVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  AVector* vec = ((AVector*)  tolua_tousertype(tolua_S,2,0));
  {
   AVector::Orthonormalize(vec);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_AVector_Orthonormalize00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GenerateOrthonormalBasis of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_GenerateOrthonormalBasis00
static int tolua_PX2_AVector_GenerateOrthonormalBasis00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AVector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"AVector",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"AVector",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AVector* vec0 = ((AVector*)  tolua_tousertype(tolua_S,2,0));
  AVector* vec1 = ((AVector*)  tolua_tousertype(tolua_S,3,0));
  AVector* vec2 = ((AVector*)  tolua_tousertype(tolua_S,4,0));
  {
   AVector::GenerateOrthonormalBasis(*vec0,*vec1,*vec2);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GenerateOrthonormalBasis'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GenerateComplementBasis of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_GenerateComplementBasis00
static int tolua_PX2_AVector_GenerateComplementBasis00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AVector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"AVector",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"AVector",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AVector* vec0 = ((AVector*)  tolua_tousertype(tolua_S,2,0));
  AVector* vec1 = ((AVector*)  tolua_tousertype(tolua_S,3,0));
  const AVector* vec2 = ((const AVector*)  tolua_tousertype(tolua_S,4,0));
  {
   AVector::GenerateComplementBasis(*vec0,*vec1,*vec2);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GenerateComplementBasis'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ZERO of class  AVector */
#ifndef TOLUA_DISABLE_tolua_get_AVector_ZERO
static int tolua_get_AVector_ZERO(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&AVector::ZERO,"const AVector");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UNIT_X of class  AVector */
#ifndef TOLUA_DISABLE_tolua_get_AVector_UNIT_X
static int tolua_get_AVector_UNIT_X(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&AVector::UNIT_X,"const AVector");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UNIT_Y of class  AVector */
#ifndef TOLUA_DISABLE_tolua_get_AVector_UNIT_Y
static int tolua_get_AVector_UNIT_Y(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&AVector::UNIT_Y,"const AVector");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UNIT_Z of class  AVector */
#ifndef TOLUA_DISABLE_tolua_get_AVector_UNIT_Z
static int tolua_get_AVector_UNIT_Z(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&AVector::UNIT_Z,"const AVector");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UNIT of class  AVector */
#ifndef TOLUA_DISABLE_tolua_get_AVector_UNIT
static int tolua_get_AVector_UNIT(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&AVector::UNIT,"const AVector");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: AnglesToDirection of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_AnglesToDirection00
static int tolua_PX2_AVector_AnglesToDirection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AVector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float angle0 = ((float)  tolua_tonumber(tolua_S,2,0));
  float angle1 = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   AVector tolua_ret = (AVector)  AVector::AnglesToDirection(angle0,angle1);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((AVector)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(AVector));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AnglesToDirection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  HPlane */
#ifndef TOLUA_DISABLE_tolua_PX2_HPlane_new00
static int tolua_PX2_HPlane_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPlane",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   HPlane* tolua_ret = (HPlane*)  Mtolua_new((HPlane)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPlane");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  HPlane */
#ifndef TOLUA_DISABLE_tolua_PX2_HPlane_new00_local
static int tolua_PX2_HPlane_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPlane",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   HPlane* tolua_ret = (HPlane*)  Mtolua_new((HPlane)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPlane");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  HPlane */
#ifndef TOLUA_DISABLE_tolua_PX2_HPlane_new01
static int tolua_PX2_HPlane_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPlane",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const HPlane",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const HPlane* plane = ((const HPlane*)  tolua_tousertype(tolua_S,2,0));
  {
   HPlane* tolua_ret = (HPlane*)  Mtolua_new((HPlane)(*plane));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPlane");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPlane_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  HPlane */
#ifndef TOLUA_DISABLE_tolua_PX2_HPlane_new01_local
static int tolua_PX2_HPlane_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPlane",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const HPlane",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const HPlane* plane = ((const HPlane*)  tolua_tousertype(tolua_S,2,0));
  {
   HPlane* tolua_ret = (HPlane*)  Mtolua_new((HPlane)(*plane));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPlane");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPlane_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  HPlane */
#ifndef TOLUA_DISABLE_tolua_PX2_HPlane_delete00
static int tolua_PX2_HPlane_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HPlane",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  HPlane* self = (HPlane*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  HPlane */
#ifndef TOLUA_DISABLE_tolua_PX2_HPlane_new02
static int tolua_PX2_HPlane_new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPlane",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float normal0 = ((float)  tolua_tonumber(tolua_S,2,0));
  float normal1 = ((float)  tolua_tonumber(tolua_S,3,0));
  float normal2 = ((float)  tolua_tonumber(tolua_S,4,0));
  float constant = ((float)  tolua_tonumber(tolua_S,5,0));
  {
   HPlane* tolua_ret = (HPlane*)  Mtolua_new((HPlane)(normal0,normal1,normal2,constant));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPlane");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPlane_new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  HPlane */
#ifndef TOLUA_DISABLE_tolua_PX2_HPlane_new02_local
static int tolua_PX2_HPlane_new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPlane",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float normal0 = ((float)  tolua_tonumber(tolua_S,2,0));
  float normal1 = ((float)  tolua_tonumber(tolua_S,3,0));
  float normal2 = ((float)  tolua_tonumber(tolua_S,4,0));
  float constant = ((float)  tolua_tonumber(tolua_S,5,0));
  {
   HPlane* tolua_ret = (HPlane*)  Mtolua_new((HPlane)(normal0,normal1,normal2,constant));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPlane");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPlane_new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  HPlane */
#ifndef TOLUA_DISABLE_tolua_PX2_HPlane_new03
static int tolua_PX2_HPlane_new03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPlane",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const AVector* normal = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
  float constant = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   HPlane* tolua_ret = (HPlane*)  Mtolua_new((HPlane)(*normal,constant));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPlane");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPlane_new02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  HPlane */
#ifndef TOLUA_DISABLE_tolua_PX2_HPlane_new03_local
static int tolua_PX2_HPlane_new03_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPlane",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const AVector* normal = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
  float constant = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   HPlane* tolua_ret = (HPlane*)  Mtolua_new((HPlane)(*normal,constant));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPlane");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPlane_new02_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  HPlane */
#ifndef TOLUA_DISABLE_tolua_PX2_HPlane_new04
static int tolua_PX2_HPlane_new04(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPlane",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const AVector* normal = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
  const APoint* p = ((const APoint*)  tolua_tousertype(tolua_S,3,0));
  {
   HPlane* tolua_ret = (HPlane*)  Mtolua_new((HPlane)(*normal,*p));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPlane");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPlane_new03(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  HPlane */
#ifndef TOLUA_DISABLE_tolua_PX2_HPlane_new04_local
static int tolua_PX2_HPlane_new04_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPlane",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const AVector* normal = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
  const APoint* p = ((const APoint*)  tolua_tousertype(tolua_S,3,0));
  {
   HPlane* tolua_ret = (HPlane*)  Mtolua_new((HPlane)(*normal,*p));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPlane");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPlane_new03_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  HPlane */
#ifndef TOLUA_DISABLE_tolua_PX2_HPlane_new05
static int tolua_PX2_HPlane_new05(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPlane",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const APoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const APoint* p0 = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
  const APoint* p1 = ((const APoint*)  tolua_tousertype(tolua_S,3,0));
  const APoint* p2 = ((const APoint*)  tolua_tousertype(tolua_S,4,0));
  {
   HPlane* tolua_ret = (HPlane*)  Mtolua_new((HPlane)(*p0,*p1,*p2));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPlane");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPlane_new04(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  HPlane */
#ifndef TOLUA_DISABLE_tolua_PX2_HPlane_new05_local
static int tolua_PX2_HPlane_new05_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPlane",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const APoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const APoint* p0 = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
  const APoint* p1 = ((const APoint*)  tolua_tousertype(tolua_S,3,0));
  const APoint* p2 = ((const APoint*)  tolua_tousertype(tolua_S,4,0));
  {
   HPlane* tolua_ret = (HPlane*)  Mtolua_new((HPlane)(*p0,*p1,*p2));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPlane");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPlane_new04_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  HPlane */
#ifndef TOLUA_DISABLE_tolua_PX2_HPlane_new06
static int tolua_PX2_HPlane_new06(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPlane",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const HPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const HPoint* tuple = ((const HPoint*)  tolua_tousertype(tolua_S,2,0));
  {
   HPlane* tolua_ret = (HPlane*)  Mtolua_new((HPlane)(*tuple));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPlane");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPlane_new05(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  HPlane */
#ifndef TOLUA_DISABLE_tolua_PX2_HPlane_new06_local
static int tolua_PX2_HPlane_new06_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPlane",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const HPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const HPoint* tuple = ((const HPoint*)  tolua_tousertype(tolua_S,2,0));
  {
   HPlane* tolua_ret = (HPlane*)  Mtolua_new((HPlane)(*tuple));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPlane");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPlane_new05_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetNormal of class  HPlane */
#ifndef TOLUA_DISABLE_tolua_PX2_HPlane_SetNormal00
static int tolua_PX2_HPlane_SetNormal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HPlane",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  HPlane* self = (HPlane*)  tolua_tousertype(tolua_S,1,0);
  const AVector* normal = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetNormal'", NULL);
#endif
  {
   self->SetNormal(*normal);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetNormal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetConstant of class  HPlane */
#ifndef TOLUA_DISABLE_tolua_PX2_HPlane_SetConstant00
static int tolua_PX2_HPlane_SetConstant00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HPlane",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  HPlane* self = (HPlane*)  tolua_tousertype(tolua_S,1,0);
  float constant = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetConstant'", NULL);
#endif
  {
   self->SetConstant(constant);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetConstant'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNormal of class  HPlane */
#ifndef TOLUA_DISABLE_tolua_PX2_HPlane_GetNormal00
static int tolua_PX2_HPlane_GetNormal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const HPlane",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const HPlane* self = (const HPlane*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNormal'", NULL);
#endif
  {
   AVector tolua_ret = (AVector)  self->GetNormal();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((AVector)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(AVector));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNormal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetConstant of class  HPlane */
#ifndef TOLUA_DISABLE_tolua_PX2_HPlane_GetConstant00
static int tolua_PX2_HPlane_GetConstant00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const HPlane",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const HPlane* self = (const HPlane*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetConstant'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetConstant();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetConstant'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Normalize of class  HPlane */
#ifndef TOLUA_DISABLE_tolua_PX2_HPlane_Normalize00
static int tolua_PX2_HPlane_Normalize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HPlane",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  HPlane* self = (HPlane*)  tolua_tousertype(tolua_S,1,0);
  float epsilon = ((float)  tolua_tonumber(tolua_S,2,Mathf::ZERO_TOLERANCE));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Normalize'", NULL);
#endif
  {
   float tolua_ret = (float)  self->Normalize(epsilon);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Normalize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DistanceTo of class  HPlane */
#ifndef TOLUA_DISABLE_tolua_PX2_HPlane_DistanceTo00
static int tolua_PX2_HPlane_DistanceTo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const HPlane",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const HPlane* self = (const HPlane*)  tolua_tousertype(tolua_S,1,0);
  const APoint* p = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DistanceTo'", NULL);
#endif
  {
   float tolua_ret = (float)  self->DistanceTo(*p);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DistanceTo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: WhichSide of class  HPlane */
#ifndef TOLUA_DISABLE_tolua_PX2_HPlane_WhichSide00
static int tolua_PX2_HPlane_WhichSide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const HPlane",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const HPlane* self = (const HPlane*)  tolua_tousertype(tolua_S,1,0);
  const APoint* p = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'WhichSide'", NULL);
#endif
  {
   int tolua_ret = (int)  self->WhichSide(*p);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'WhichSide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Float2 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float2_new00
static int tolua_PX2_Float2_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Float2",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Float2* tolua_ret = (Float2*)  Mtolua_new((Float2)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Float2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Float2 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float2_new00_local
static int tolua_PX2_Float2_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Float2",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Float2* tolua_ret = (Float2*)  Mtolua_new((Float2)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Float2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Float2 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float2_delete00
static int tolua_PX2_Float2_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Float2",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Float2* self = (Float2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Float2 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float2_new01
static int tolua_PX2_Float2_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Float2",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float f0 = ((float)  tolua_tonumber(tolua_S,2,0));
  float f1 = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   Float2* tolua_ret = (Float2*)  Mtolua_new((Float2)(f0,f1));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Float2");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Float2_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Float2 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float2_new01_local
static int tolua_PX2_Float2_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Float2",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float f0 = ((float)  tolua_tonumber(tolua_S,2,0));
  float f1 = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   Float2* tolua_ret = (Float2*)  Mtolua_new((Float2)(f0,f1));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Float2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Float2_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Float2 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float2_new02
static int tolua_PX2_Float2_new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Float2",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Float2* tuple = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
  {
   Float2* tolua_ret = (Float2*)  Mtolua_new((Float2)(*tuple));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Float2");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Float2_new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Float2 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float2_new02_local
static int tolua_PX2_Float2_new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Float2",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Float2* tuple = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
  {
   Float2* tolua_ret = (Float2*)  Mtolua_new((Float2)(*tuple));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Float2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Float2_new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: X of class  Float2 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float2_X00
static int tolua_PX2_Float2_X00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Float2",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Float2* self = (const Float2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'X'", NULL);
#endif
  {
   float tolua_ret = (float)  self->X();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'X'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Y of class  Float2 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float2_Y00
static int tolua_PX2_Float2_Y00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Float2",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Float2* self = (const Float2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Y'", NULL);
#endif
  {
   float tolua_ret = (float)  self->Y();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Y'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ZERO of class  Float2 */
#ifndef TOLUA_DISABLE_tolua_get_Float2_ZERO
static int tolua_get_Float2_ZERO(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&Float2::ZERO,"const Float2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UNIT of class  Float2 */
#ifndef TOLUA_DISABLE_tolua_get_Float2_UNIT
static int tolua_get_Float2_UNIT(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&Float2::UNIT,"const Float2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: HALFUNIT of class  Float2 */
#ifndef TOLUA_DISABLE_tolua_get_Float2_HALFUNIT
static int tolua_get_Float2_HALFUNIT(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&Float2::HALFUNIT,"const Float2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Float3 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float3_new00
static int tolua_PX2_Float3_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Float3",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Float3* tolua_ret = (Float3*)  Mtolua_new((Float3)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Float3");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Float3 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float3_new00_local
static int tolua_PX2_Float3_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Float3",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Float3* tolua_ret = (Float3*)  Mtolua_new((Float3)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Float3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Float3 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float3_delete00
static int tolua_PX2_Float3_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Float3",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Float3* self = (Float3*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Float3 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float3_new01
static int tolua_PX2_Float3_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Float3",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float f0 = ((float)  tolua_tonumber(tolua_S,2,0));
  float f1 = ((float)  tolua_tonumber(tolua_S,3,0));
  float f2 = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   Float3* tolua_ret = (Float3*)  Mtolua_new((Float3)(f0,f1,f2));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Float3");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Float3_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Float3 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float3_new01_local
static int tolua_PX2_Float3_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Float3",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float f0 = ((float)  tolua_tonumber(tolua_S,2,0));
  float f1 = ((float)  tolua_tonumber(tolua_S,3,0));
  float f2 = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   Float3* tolua_ret = (Float3*)  Mtolua_new((Float3)(f0,f1,f2));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Float3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Float3_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Float3 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float3_new02
static int tolua_PX2_Float3_new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Float3",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Float3* tuple = ((const Float3*)  tolua_tousertype(tolua_S,2,0));
  {
   Float3* tolua_ret = (Float3*)  Mtolua_new((Float3)(*tuple));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Float3");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Float3_new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Float3 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float3_new02_local
static int tolua_PX2_Float3_new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Float3",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Float3* tuple = ((const Float3*)  tolua_tousertype(tolua_S,2,0));
  {
   Float3* tolua_ret = (Float3*)  Mtolua_new((Float3)(*tuple));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Float3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Float3_new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: X of class  Float3 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float3_X00
static int tolua_PX2_Float3_X00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Float3",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Float3* self = (const Float3*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'X'", NULL);
#endif
  {
   float tolua_ret = (float)  self->X();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'X'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Y of class  Float3 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float3_Y00
static int tolua_PX2_Float3_Y00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Float3",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Float3* self = (const Float3*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Y'", NULL);
#endif
  {
   float tolua_ret = (float)  self->Y();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Y'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Z of class  Float3 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float3_Z00
static int tolua_PX2_Float3_Z00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Float3",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Float3* self = (const Float3*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Z'", NULL);
#endif
  {
   float tolua_ret = (float)  self->Z();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Z'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: MakeColor of class  Float3 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float3_MakeColor00
static int tolua_PX2_Float3_MakeColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Float3",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int r = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  unsigned int g = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
  unsigned int b = ((unsigned int)  tolua_tonumber(tolua_S,4,0));
  {
   Float3 tolua_ret = (Float3)  Float3::MakeColor(r,g,b);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Float3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Float3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Float3));
     tolua_pushusertype(tolua_S,tolua_obj,"Float3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'MakeColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ZERO of class  Float3 */
#ifndef TOLUA_DISABLE_tolua_get_Float3_ZERO
static int tolua_get_Float3_ZERO(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&Float3::ZERO,"const Float3");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UNIT of class  Float3 */
#ifndef TOLUA_DISABLE_tolua_get_Float3_UNIT
static int tolua_get_Float3_UNIT(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&Float3::UNIT,"const Float3");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BLACK of class  Float3 */
#ifndef TOLUA_DISABLE_tolua_get_Float3_BLACK
static int tolua_get_Float3_BLACK(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&Float3::BLACK,"const Float3");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WHITE of class  Float3 */
#ifndef TOLUA_DISABLE_tolua_get_Float3_WHITE
static int tolua_get_Float3_WHITE(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&Float3::WHITE,"const Float3");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RED of class  Float3 */
#ifndef TOLUA_DISABLE_tolua_get_Float3_RED
static int tolua_get_Float3_RED(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&Float3::RED,"const Float3");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GREEN of class  Float3 */
#ifndef TOLUA_DISABLE_tolua_get_Float3_GREEN
static int tolua_get_Float3_GREEN(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&Float3::GREEN,"const Float3");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BLUE of class  Float3 */
#ifndef TOLUA_DISABLE_tolua_get_Float3_BLUE
static int tolua_get_Float3_BLUE(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&Float3::BLUE,"const Float3");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: YELLOW of class  Float3 */
#ifndef TOLUA_DISABLE_tolua_get_Float3_YELLOW
static int tolua_get_Float3_YELLOW(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&Float3::YELLOW,"const Float3");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Float4 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float4_new00
static int tolua_PX2_Float4_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Float4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Float4* tolua_ret = (Float4*)  Mtolua_new((Float4)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Float4");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Float4 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float4_new00_local
static int tolua_PX2_Float4_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Float4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Float4* tolua_ret = (Float4*)  Mtolua_new((Float4)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Float4");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Float4 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float4_delete00
static int tolua_PX2_Float4_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Float4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Float4* self = (Float4*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Float4 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float4_new01
static int tolua_PX2_Float4_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Float4",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float f0 = ((float)  tolua_tonumber(tolua_S,2,0));
  float f1 = ((float)  tolua_tonumber(tolua_S,3,0));
  float f2 = ((float)  tolua_tonumber(tolua_S,4,0));
  float f3 = ((float)  tolua_tonumber(tolua_S,5,0));
  {
   Float4* tolua_ret = (Float4*)  Mtolua_new((Float4)(f0,f1,f2,f3));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Float4");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Float4_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Float4 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float4_new01_local
static int tolua_PX2_Float4_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Float4",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float f0 = ((float)  tolua_tonumber(tolua_S,2,0));
  float f1 = ((float)  tolua_tonumber(tolua_S,3,0));
  float f2 = ((float)  tolua_tonumber(tolua_S,4,0));
  float f3 = ((float)  tolua_tonumber(tolua_S,5,0));
  {
   Float4* tolua_ret = (Float4*)  Mtolua_new((Float4)(f0,f1,f2,f3));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Float4");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Float4_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Float4 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float4_new02
static int tolua_PX2_Float4_new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Float4",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float4",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Float4* tuple = ((const Float4*)  tolua_tousertype(tolua_S,2,0));
  {
   Float4* tolua_ret = (Float4*)  Mtolua_new((Float4)(*tuple));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Float4");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Float4_new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Float4 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float4_new02_local
static int tolua_PX2_Float4_new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Float4",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float4",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Float4* tuple = ((const Float4*)  tolua_tousertype(tolua_S,2,0));
  {
   Float4* tolua_ret = (Float4*)  Mtolua_new((Float4)(*tuple));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Float4");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Float4_new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: X of class  Float4 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float4_X00
static int tolua_PX2_Float4_X00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Float4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Float4* self = (const Float4*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'X'", NULL);
#endif
  {
   float tolua_ret = (float)  self->X();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'X'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Y of class  Float4 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float4_Y00
static int tolua_PX2_Float4_Y00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Float4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Float4* self = (const Float4*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Y'", NULL);
#endif
  {
   float tolua_ret = (float)  self->Y();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Y'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Z of class  Float4 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float4_Z00
static int tolua_PX2_Float4_Z00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Float4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Float4* self = (const Float4*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Z'", NULL);
#endif
  {
   float tolua_ret = (float)  self->Z();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Z'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: W of class  Float4 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float4_W00
static int tolua_PX2_Float4_W00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Float4",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Float4* self = (const Float4*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'W'", NULL);
#endif
  {
   float tolua_ret = (float)  self->W();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'W'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: MakeColor of class  Float4 */
#ifndef TOLUA_DISABLE_tolua_PX2_Float4_MakeColor00
static int tolua_PX2_Float4_MakeColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Float4",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int r = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  unsigned int g = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
  unsigned int b = ((unsigned int)  tolua_tonumber(tolua_S,4,0));
  unsigned int a = ((unsigned int)  tolua_tonumber(tolua_S,5,0));
  {
   Float4 tolua_ret = (Float4)  Float4::MakeColor(r,g,b,a);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Float4)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Float4");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Float4));
     tolua_pushusertype(tolua_S,tolua_obj,"Float4");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'MakeColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ZERO of class  Float4 */
#ifndef TOLUA_DISABLE_tolua_get_Float4_ZERO
static int tolua_get_Float4_ZERO(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&Float4::ZERO,"const Float4");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UNIT of class  Float4 */
#ifndef TOLUA_DISABLE_tolua_get_Float4_UNIT
static int tolua_get_Float4_UNIT(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&Float4::UNIT,"const Float4");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BLACK of class  Float4 */
#ifndef TOLUA_DISABLE_tolua_get_Float4_BLACK
static int tolua_get_Float4_BLACK(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&Float4::BLACK,"const Float4");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WHITE of class  Float4 */
#ifndef TOLUA_DISABLE_tolua_get_Float4_WHITE
static int tolua_get_Float4_WHITE(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&Float4::WHITE,"const Float4");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RED of class  Float4 */
#ifndef TOLUA_DISABLE_tolua_get_Float4_RED
static int tolua_get_Float4_RED(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&Float4::RED,"const Float4");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: GREEN of class  Float4 */
#ifndef TOLUA_DISABLE_tolua_get_Float4_GREEN
static int tolua_get_Float4_GREEN(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&Float4::GREEN,"const Float4");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BLUE of class  Float4 */
#ifndef TOLUA_DISABLE_tolua_get_Float4_BLUE
static int tolua_get_Float4_BLUE(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&Float4::BLUE,"const Float4");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: YELLOW of class  Float4 */
#ifndef TOLUA_DISABLE_tolua_get_Float4_YELLOW
static int tolua_get_Float4_YELLOW(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&Float4::YELLOW,"const Float4");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  HMatrix */
#ifndef TOLUA_DISABLE_tolua_PX2_HMatrix_new00
static int tolua_PX2_HMatrix_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HMatrix",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   HMatrix* tolua_ret = (HMatrix*)  Mtolua_new((HMatrix)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HMatrix");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  HMatrix */
#ifndef TOLUA_DISABLE_tolua_PX2_HMatrix_new00_local
static int tolua_PX2_HMatrix_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HMatrix",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   HMatrix* tolua_ret = (HMatrix*)  Mtolua_new((HMatrix)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HMatrix");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  HMatrix */
#ifndef TOLUA_DISABLE_tolua_PX2_HMatrix_delete00
static int tolua_PX2_HMatrix_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HMatrix",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  HMatrix* self = (HMatrix*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Width of class  Sizef */
#ifndef TOLUA_DISABLE_tolua_get_Sizef_Width
static int tolua_get_Sizef_Width(lua_State* tolua_S)
{
  Sizef* self = (Sizef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Width'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Width);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Width of class  Sizef */
#ifndef TOLUA_DISABLE_tolua_set_Sizef_Width
static int tolua_set_Sizef_Width(lua_State* tolua_S)
{
  Sizef* self = (Sizef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Width'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Width = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Height of class  Sizef */
#ifndef TOLUA_DISABLE_tolua_get_Sizef_Height
static int tolua_get_Sizef_Height(lua_State* tolua_S)
{
  Sizef* self = (Sizef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Height'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Height);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Height of class  Sizef */
#ifndef TOLUA_DISABLE_tolua_set_Sizef_Height
static int tolua_set_Sizef_Height(lua_State* tolua_S)
{
  Sizef* self = (Sizef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Height'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Height = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Sizef */
#ifndef TOLUA_DISABLE_tolua_PX2_Sizef_new00
static int tolua_PX2_Sizef_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Sizef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Sizef* tolua_ret = (Sizef*)  Mtolua_new((Sizef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Sizef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Sizef */
#ifndef TOLUA_DISABLE_tolua_PX2_Sizef_new00_local
static int tolua_PX2_Sizef_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Sizef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Sizef* tolua_ret = (Sizef*)  Mtolua_new((Sizef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Sizef");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Sizef */
#ifndef TOLUA_DISABLE_tolua_PX2_Sizef_new01
static int tolua_PX2_Sizef_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Sizef",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const float width = ((const float)  tolua_tonumber(tolua_S,2,0));
  const float height = ((const float)  tolua_tonumber(tolua_S,3,0));
  {
   Sizef* tolua_ret = (Sizef*)  Mtolua_new((Sizef)(width,height));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Sizef");
   tolua_pushnumber(tolua_S,(lua_Number)width);
   tolua_pushnumber(tolua_S,(lua_Number)height);
  }
 }
 return 3;
tolua_lerror:
 return tolua_PX2_Sizef_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Sizef */
#ifndef TOLUA_DISABLE_tolua_PX2_Sizef_new01_local
static int tolua_PX2_Sizef_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Sizef",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const float width = ((const float)  tolua_tonumber(tolua_S,2,0));
  const float height = ((const float)  tolua_tonumber(tolua_S,3,0));
  {
   Sizef* tolua_ret = (Sizef*)  Mtolua_new((Sizef)(width,height));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Sizef");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
   tolua_pushnumber(tolua_S,(lua_Number)width);
   tolua_pushnumber(tolua_S,(lua_Number)height);
  }
 }
 return 3;
tolua_lerror:
 return tolua_PX2_Sizef_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Sizef */
#ifndef TOLUA_DISABLE_tolua_PX2_Sizef_new02
static int tolua_PX2_Sizef_new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Sizef",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Sizef",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Sizef* size = ((const Sizef*)  tolua_tousertype(tolua_S,2,0));
  {
   Sizef* tolua_ret = (Sizef*)  Mtolua_new((Sizef)(*size));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Sizef");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Sizef_new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Sizef */
#ifndef TOLUA_DISABLE_tolua_PX2_Sizef_new02_local
static int tolua_PX2_Sizef_new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Sizef",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Sizef",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Sizef* size = ((const Sizef*)  tolua_tousertype(tolua_S,2,0));
  {
   Sizef* tolua_ret = (Sizef*)  Mtolua_new((Sizef)(*size));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Sizef");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Sizef_new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Sizef */
#ifndef TOLUA_DISABLE_tolua_PX2_Sizef_delete00
static int tolua_PX2_Sizef_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Sizef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Sizef* self = (Sizef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Clear of class  Sizef */
#ifndef TOLUA_DISABLE_tolua_PX2_Sizef_Clear00
static int tolua_PX2_Sizef_Clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Sizef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Sizef* self = (Sizef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Clear'", NULL);
#endif
  {
   self->Clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set of class  Sizef */
#ifndef TOLUA_DISABLE_tolua_PX2_Sizef_Set00
static int tolua_PX2_Sizef_Set00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Sizef",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Sizef* self = (Sizef*)  tolua_tousertype(tolua_S,1,0);
  const float width = ((const float)  tolua_tonumber(tolua_S,2,0));
  const float height = ((const float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set'", NULL);
#endif
  {
   self->Set(width,height);
   tolua_pushnumber(tolua_S,(lua_Number)width);
   tolua_pushnumber(tolua_S,(lua_Number)height);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Swap of class  Sizef */
#ifndef TOLUA_DISABLE_tolua_PX2_Sizef_Swap00
static int tolua_PX2_Sizef_Swap00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Sizef",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Sizef",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Sizef* self = (Sizef*)  tolua_tousertype(tolua_S,1,0);
  Sizef* val = ((Sizef*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Swap'", NULL);
#endif
  {
   self->Swap(*val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Swap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsEmpty of class  Sizef */
#ifndef TOLUA_DISABLE_tolua_PX2_Sizef_IsEmpty00
static int tolua_PX2_Sizef_IsEmpty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Sizef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Sizef* self = (const Sizef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsEmpty'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsEmpty();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsEmpty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Left of class  Rectf */
#ifndef TOLUA_DISABLE_tolua_get_Rectf_Left
static int tolua_get_Rectf_Left(lua_State* tolua_S)
{
  Rectf* self = (Rectf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Left'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Left);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Left of class  Rectf */
#ifndef TOLUA_DISABLE_tolua_set_Rectf_Left
static int tolua_set_Rectf_Left(lua_State* tolua_S)
{
  Rectf* self = (Rectf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Left'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Left = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Bottom of class  Rectf */
#ifndef TOLUA_DISABLE_tolua_get_Rectf_Bottom
static int tolua_get_Rectf_Bottom(lua_State* tolua_S)
{
  Rectf* self = (Rectf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Bottom'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Bottom);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Bottom of class  Rectf */
#ifndef TOLUA_DISABLE_tolua_set_Rectf_Bottom
static int tolua_set_Rectf_Bottom(lua_State* tolua_S)
{
  Rectf* self = (Rectf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Bottom'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Bottom = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Right of class  Rectf */
#ifndef TOLUA_DISABLE_tolua_get_Rectf_Right
static int tolua_get_Rectf_Right(lua_State* tolua_S)
{
  Rectf* self = (Rectf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Right'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Right);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Right of class  Rectf */
#ifndef TOLUA_DISABLE_tolua_set_Rectf_Right
static int tolua_set_Rectf_Right(lua_State* tolua_S)
{
  Rectf* self = (Rectf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Right'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Right = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Top of class  Rectf */
#ifndef TOLUA_DISABLE_tolua_get_Rectf_Top
static int tolua_get_Rectf_Top(lua_State* tolua_S)
{
  Rectf* self = (Rectf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Top'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Top);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Top of class  Rectf */
#ifndef TOLUA_DISABLE_tolua_set_Rectf_Top
static int tolua_set_Rectf_Top(lua_State* tolua_S)
{
  Rectf* self = (Rectf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Top'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Top = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Rectf */
#ifndef TOLUA_DISABLE_tolua_PX2_Rectf_new00
static int tolua_PX2_Rectf_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Rectf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Rectf* tolua_ret = (Rectf*)  Mtolua_new((Rectf)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Rectf");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Rectf */
#ifndef TOLUA_DISABLE_tolua_PX2_Rectf_new00_local
static int tolua_PX2_Rectf_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Rectf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Rectf* tolua_ret = (Rectf*)  Mtolua_new((Rectf)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Rectf");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Rectf */
#ifndef TOLUA_DISABLE_tolua_PX2_Rectf_new01
static int tolua_PX2_Rectf_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Rectf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const float left = ((const float)  tolua_tonumber(tolua_S,2,0));
  const float bottom = ((const float)  tolua_tonumber(tolua_S,3,0));
  const float right = ((const float)  tolua_tonumber(tolua_S,4,0));
  const float top = ((const float)  tolua_tonumber(tolua_S,5,0));
  {
   Rectf* tolua_ret = (Rectf*)  Mtolua_new((Rectf)(left,bottom,right,top));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Rectf");
   tolua_pushnumber(tolua_S,(lua_Number)left);
   tolua_pushnumber(tolua_S,(lua_Number)bottom);
   tolua_pushnumber(tolua_S,(lua_Number)right);
   tolua_pushnumber(tolua_S,(lua_Number)top);
  }
 }
 return 5;
tolua_lerror:
 return tolua_PX2_Rectf_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Rectf */
#ifndef TOLUA_DISABLE_tolua_PX2_Rectf_new01_local
static int tolua_PX2_Rectf_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Rectf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const float left = ((const float)  tolua_tonumber(tolua_S,2,0));
  const float bottom = ((const float)  tolua_tonumber(tolua_S,3,0));
  const float right = ((const float)  tolua_tonumber(tolua_S,4,0));
  const float top = ((const float)  tolua_tonumber(tolua_S,5,0));
  {
   Rectf* tolua_ret = (Rectf*)  Mtolua_new((Rectf)(left,bottom,right,top));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Rectf");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
   tolua_pushnumber(tolua_S,(lua_Number)left);
   tolua_pushnumber(tolua_S,(lua_Number)bottom);
   tolua_pushnumber(tolua_S,(lua_Number)right);
   tolua_pushnumber(tolua_S,(lua_Number)top);
  }
 }
 return 5;
tolua_lerror:
 return tolua_PX2_Rectf_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Rectf */
#ifndef TOLUA_DISABLE_tolua_PX2_Rectf_new02
static int tolua_PX2_Rectf_new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Rectf",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Rectf",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Rectf* rct = ((const Rectf*)  tolua_tousertype(tolua_S,2,0));
  {
   Rectf* tolua_ret = (Rectf*)  Mtolua_new((Rectf)(*rct));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Rectf");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Rectf_new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Rectf */
#ifndef TOLUA_DISABLE_tolua_PX2_Rectf_new02_local
static int tolua_PX2_Rectf_new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Rectf",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Rectf",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Rectf* rct = ((const Rectf*)  tolua_tousertype(tolua_S,2,0));
  {
   Rectf* tolua_ret = (Rectf*)  Mtolua_new((Rectf)(*rct));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Rectf");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Rectf_new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Rectf */
#ifndef TOLUA_DISABLE_tolua_PX2_Rectf_delete00
static int tolua_PX2_Rectf_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rectf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rectf* self = (Rectf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Width of class  Rectf */
#ifndef TOLUA_DISABLE_tolua_PX2_Rectf_Width00
static int tolua_PX2_Rectf_Width00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Rectf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Rectf* self = (const Rectf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Width'", NULL);
#endif
  {
   float tolua_ret = (float)  self->Width();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Width'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Height of class  Rectf */
#ifndef TOLUA_DISABLE_tolua_PX2_Rectf_Height00
static int tolua_PX2_Rectf_Height00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Rectf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Rectf* self = (const Rectf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Height'", NULL);
#endif
  {
   float tolua_ret = (float)  self->Height();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Height'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Clear of class  Rectf */
#ifndef TOLUA_DISABLE_tolua_PX2_Rectf_Clear00
static int tolua_PX2_Rectf_Clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rectf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rectf* self = (Rectf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Clear'", NULL);
#endif
  {
   self->Clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set of class  Rectf */
#ifndef TOLUA_DISABLE_tolua_PX2_Rectf_Set00
static int tolua_PX2_Rectf_Set00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rectf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rectf* self = (Rectf*)  tolua_tousertype(tolua_S,1,0);
  const float left = ((const float)  tolua_tonumber(tolua_S,2,0));
  const float bottom = ((const float)  tolua_tonumber(tolua_S,3,0));
  const float right = ((const float)  tolua_tonumber(tolua_S,4,0));
  const float top = ((const float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set'", NULL);
#endif
  {
   self->Set(left,bottom,right,top);
   tolua_pushnumber(tolua_S,(lua_Number)left);
   tolua_pushnumber(tolua_S,(lua_Number)bottom);
   tolua_pushnumber(tolua_S,(lua_Number)right);
   tolua_pushnumber(tolua_S,(lua_Number)top);
  }
 }
 return 4;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Swap of class  Rectf */
#ifndef TOLUA_DISABLE_tolua_PX2_Rectf_Swap00
static int tolua_PX2_Rectf_Swap00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rectf",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Rectf",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rectf* self = (Rectf*)  tolua_tousertype(tolua_S,1,0);
  Rectf* rect = ((Rectf*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Swap'", NULL);
#endif
  {
   self->Swap(*rect);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Swap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsEmpty of class  Rectf */
#ifndef TOLUA_DISABLE_tolua_PX2_Rectf_IsEmpty00
static int tolua_PX2_Rectf_IsEmpty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Rectf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Rectf* self = (const Rectf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsEmpty'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsEmpty();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsEmpty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsInSide of class  Rectf */
#ifndef TOLUA_DISABLE_tolua_PX2_Rectf_IsInSide00
static int tolua_PX2_Rectf_IsInSide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Rectf",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Rectf",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Rectf* self = (const Rectf*)  tolua_tousertype(tolua_S,1,0);
  const Rectf* rect = ((const Rectf*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsInSide'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsInSide(*rect);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsInSide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsIntersect of class  Rectf */
#ifndef TOLUA_DISABLE_tolua_PX2_Rectf_IsIntersect00
static int tolua_PX2_Rectf_IsIntersect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Rectf",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Rectf",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Rectf* self = (const Rectf*)  tolua_tousertype(tolua_S,1,0);
  const Rectf* rect = ((const Rectf*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsIntersect'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsIntersect(*rect);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsIntersect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsInsize of class  Rectf */
#ifndef TOLUA_DISABLE_tolua_PX2_Rectf_IsInsize00
static int tolua_PX2_Rectf_IsInsize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Rectf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Rectf* self = (const Rectf*)  tolua_tousertype(tolua_S,1,0);
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsInsize'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsInsize(x,y);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsInsize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator- of class  Rectf */
#ifndef TOLUA_DISABLE_tolua_PX2_Rectf__sub00
static int tolua_PX2_Rectf__sub00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rectf",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Rectf",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rectf* self = (Rectf*)  tolua_tousertype(tolua_S,1,0);
  const Rectf* rect = ((const Rectf*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator-'", NULL);
#endif
  {
   Rectf tolua_ret = (Rectf)  self->operator-(*rect);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Rectf)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Rectf");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Rectf));
     tolua_pushusertype(tolua_S,tolua_obj,"Rectf");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.sub'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator+ of class  Rectf */
#ifndef TOLUA_DISABLE_tolua_PX2_Rectf__add00
static int tolua_PX2_Rectf__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Rectf",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Rectf",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rectf* self = (Rectf*)  tolua_tousertype(tolua_S,1,0);
  const Rectf* rect = ((const Rectf*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator+'", NULL);
#endif
  {
   Rectf tolua_ret = (Rectf)  self->operator+(*rect);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Rectf)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Rectf");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Rectf));
     tolua_pushusertype(tolua_S,tolua_obj,"Rectf");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator== of class  Rectf */
#ifndef TOLUA_DISABLE_tolua_PX2_Rectf__eq00
static int tolua_PX2_Rectf__eq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Rectf",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Rectf",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Rectf* self = (const Rectf*)  tolua_tousertype(tolua_S,1,0);
  const Rectf* rect = ((const Rectf*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator=='", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator==(*rect);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.eq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_new00
static int tolua_PX2_Transform_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Transform* tolua_ret = (Transform*)  Mtolua_new((Transform)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Transform");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_new00_local
static int tolua_PX2_Transform_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Transform* tolua_ret = (Transform*)  Mtolua_new((Transform)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Transform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_delete00
static int tolua_PX2_Transform_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Transform* self = (Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: MakeIdentity of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_MakeIdentity00
static int tolua_PX2_Transform_MakeIdentity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Transform* self = (Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'MakeIdentity'", NULL);
#endif
  {
   self->MakeIdentity();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'MakeIdentity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: MakeUnitScale of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_MakeUnitScale00
static int tolua_PX2_Transform_MakeUnitScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Transform* self = (Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'MakeUnitScale'", NULL);
#endif
  {
   self->MakeUnitScale();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'MakeUnitScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsIdentity of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_IsIdentity00
static int tolua_PX2_Transform_IsIdentity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Transform* self = (const Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsIdentity'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsIdentity();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsIdentity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsRSMatrix of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_IsRSMatrix00
static int tolua_PX2_Transform_IsRSMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Transform* self = (const Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsRSMatrix'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsRSMatrix();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsRSMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsUniformScale of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_IsUniformScale00
static int tolua_PX2_Transform_IsUniformScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Transform* self = (const Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsUniformScale'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsUniformScale();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsUniformScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetRotate of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_SetRotate00
static int tolua_PX2_Transform_SetRotate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Transform",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Transform* self = (Transform*)  tolua_tousertype(tolua_S,1,0);
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  float z = ((float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetRotate'", NULL);
#endif
  {
   self->SetRotate(x,y,z);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetRotate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTranslate of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_SetTranslate00
static int tolua_PX2_Transform_SetTranslate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Transform* self = (Transform*)  tolua_tousertype(tolua_S,1,0);
  const APoint* translate = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTranslate'", NULL);
#endif
  {
   self->SetTranslate(*translate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTranslate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTranslate of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_SetTranslate01
static int tolua_PX2_Transform_SetTranslate01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Transform",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Transform* self = (Transform*)  tolua_tousertype(tolua_S,1,0);
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  float z = ((float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTranslate'", NULL);
#endif
  {
   self->SetTranslate(x,y,z);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Transform_SetTranslate00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTranslateX of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_SetTranslateX00
static int tolua_PX2_Transform_SetTranslateX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Transform",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Transform* self = (Transform*)  tolua_tousertype(tolua_S,1,0);
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTranslateX'", NULL);
#endif
  {
   self->SetTranslateX(x);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTranslateX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTranslateY of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_SetTranslateY00
static int tolua_PX2_Transform_SetTranslateY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Transform",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Transform* self = (Transform*)  tolua_tousertype(tolua_S,1,0);
  float y = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTranslateY'", NULL);
#endif
  {
   self->SetTranslateY(y);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTranslateY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTranslateZ of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_SetTranslateZ00
static int tolua_PX2_Transform_SetTranslateZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Transform",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Transform* self = (Transform*)  tolua_tousertype(tolua_S,1,0);
  float z = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTranslateZ'", NULL);
#endif
  {
   self->SetTranslateZ(z);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTranslateZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTranslateXZ of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_SetTranslateXZ00
static int tolua_PX2_Transform_SetTranslateXZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Transform",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Transform* self = (Transform*)  tolua_tousertype(tolua_S,1,0);
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float z = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTranslateXZ'", NULL);
#endif
  {
   self->SetTranslateXZ(x,z);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTranslateXZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetScale of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_SetScale00
static int tolua_PX2_Transform_SetScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Transform* self = (Transform*)  tolua_tousertype(tolua_S,1,0);
  const APoint* scale = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetScale'", NULL);
#endif
  {
   self->SetScale(*scale);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUniformScale of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_SetUniformScale00
static int tolua_PX2_Transform_SetUniformScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Transform",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Transform* self = (Transform*)  tolua_tousertype(tolua_S,1,0);
  float scale = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUniformScale'", NULL);
#endif
  {
   self->SetUniformScale(scale);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUniformScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTranslate of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_GetTranslate00
static int tolua_PX2_Transform_GetTranslate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Transform* self = (const Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTranslate'", NULL);
#endif
  {
   const APoint& tolua_ret = (const APoint&)  self->GetTranslate();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const APoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTranslate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetScale of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_GetScale00
static int tolua_PX2_Transform_GetScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Transform* self = (const Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetScale'", NULL);
#endif
  {
   const APoint& tolua_ret = (const APoint&)  self->GetScale();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const APoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUniformScale of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_GetUniformScale00
static int tolua_PX2_Transform_GetUniformScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Transform* self = (const Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUniformScale'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetUniformScale();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUniformScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNorm of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_GetNorm00
static int tolua_PX2_Transform_GetNorm00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Transform* self = (const Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNorm'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetNorm();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNorm'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator* of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform__mul00
static int tolua_PX2_Transform__mul00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Transform* self = (const Transform*)  tolua_tousertype(tolua_S,1,0);
  const APoint* pnt = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator*'", NULL);
#endif
  {
   APoint tolua_ret = (APoint)  self->operator*(*pnt);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((APoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(APoint));
     tolua_pushusertype(tolua_S,tolua_obj,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.mul'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator* of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform__mul01
static int tolua_PX2_Transform__mul01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Transform* self = (const Transform*)  tolua_tousertype(tolua_S,1,0);
  const AVector* vec = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator*'", NULL);
#endif
  {
   AVector tolua_ret = (AVector)  self->operator*(*vec);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((AVector)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(AVector));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Transform__mul00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator* of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform__mul02
static int tolua_PX2_Transform__mul02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Transform",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Transform* self = (const Transform*)  tolua_tousertype(tolua_S,1,0);
  const Transform* transform = ((const Transform*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator*'", NULL);
#endif
  {
   Transform tolua_ret = (Transform)  self->operator*(*transform);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Transform)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Transform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Transform));
     tolua_pushusertype(tolua_S,tolua_obj,"Transform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Transform__mul01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: InverseTransform of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_InverseTransform00
static int tolua_PX2_Transform_InverseTransform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Transform* self = (const Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'InverseTransform'", NULL);
#endif
  {
   Transform tolua_ret = (Transform)  self->InverseTransform();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Transform)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Transform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Transform));
     tolua_pushusertype(tolua_S,tolua_obj,"Transform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'InverseTransform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IDENTITY of class  Transform */
#ifndef TOLUA_DISABLE_tolua_get_Transform_IDENTITY
static int tolua_get_Transform_IDENTITY(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&Transform::IDENTITY,"const Transform");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetStreamingSize of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_GetStreamingSize00
static int tolua_PX2_Transform_GetStreamingSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   int tolua_ret = (int)  Transform::GetStreamingSize();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetStreamingSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Bound */
#ifndef TOLUA_DISABLE_tolua_PX2_Bound_new00
static int tolua_PX2_Bound_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Bound",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Bound* tolua_ret = (Bound*)  Mtolua_new((Bound)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Bound");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Bound */
#ifndef TOLUA_DISABLE_tolua_PX2_Bound_new00_local
static int tolua_PX2_Bound_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Bound",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Bound* tolua_ret = (Bound*)  Mtolua_new((Bound)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Bound");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Bound */
#ifndef TOLUA_DISABLE_tolua_PX2_Bound_delete00
static int tolua_PX2_Bound_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Bound",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Bound* self = (Bound*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCenter of class  Bound */
#ifndef TOLUA_DISABLE_tolua_PX2_Bound_SetCenter00
static int tolua_PX2_Bound_SetCenter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Bound",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Bound* self = (Bound*)  tolua_tousertype(tolua_S,1,0);
  const APoint* center = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCenter'", NULL);
#endif
  {
   self->SetCenter(*center);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCenter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetRadius of class  Bound */
#ifndef TOLUA_DISABLE_tolua_PX2_Bound_SetRadius00
static int tolua_PX2_Bound_SetRadius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Bound",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Bound* self = (Bound*)  tolua_tousertype(tolua_S,1,0);
  float radius = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetRadius'", NULL);
#endif
  {
   self->SetRadius(radius);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetRadius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCenter of class  Bound */
#ifndef TOLUA_DISABLE_tolua_PX2_Bound_GetCenter00
static int tolua_PX2_Bound_GetCenter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Bound",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Bound* self = (const Bound*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCenter'", NULL);
#endif
  {
   const APoint& tolua_ret = (const APoint&)  self->GetCenter();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const APoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCenter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRadius of class  Bound */
#ifndef TOLUA_DISABLE_tolua_PX2_Bound_GetRadius00
static int tolua_PX2_Bound_GetRadius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Bound",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Bound* self = (const Bound*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRadius'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetRadius();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRadius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: WhichSide of class  Bound */
#ifndef TOLUA_DISABLE_tolua_PX2_Bound_WhichSide00
static int tolua_PX2_Bound_WhichSide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Bound",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const HPlane",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Bound* self = (const Bound*)  tolua_tousertype(tolua_S,1,0);
  const HPlane* plane = ((const HPlane*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'WhichSide'", NULL);
#endif
  {
   int tolua_ret = (int)  self->WhichSide(*plane);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'WhichSide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GrowToContain of class  Bound */
#ifndef TOLUA_DISABLE_tolua_PX2_Bound_GrowToContain00
static int tolua_PX2_Bound_GrowToContain00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Bound",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Bound",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Bound* self = (Bound*)  tolua_tousertype(tolua_S,1,0);
  const Bound* bound = ((const Bound*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GrowToContain'", NULL);
#endif
  {
   self->GrowToContain(*bound);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GrowToContain'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: TransformBy of class  Bound */
#ifndef TOLUA_DISABLE_tolua_PX2_Bound_TransformBy00
static int tolua_PX2_Bound_TransformBy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Bound",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Transform",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Bound",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Bound* self = (Bound*)  tolua_tousertype(tolua_S,1,0);
  const Transform* transform = ((const Transform*)  tolua_tousertype(tolua_S,2,0));
  Bound* bound = ((Bound*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'TransformBy'", NULL);
#endif
  {
   self->TransformBy(*transform,*bound);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'TransformBy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ComputeFromData of class  Bound */
#ifndef TOLUA_DISABLE_tolua_PX2_Bound_ComputeFromData00
static int tolua_PX2_Bound_ComputeFromData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Bound",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Bound* self = (Bound*)  tolua_tousertype(tolua_S,1,0);
  int numElements = ((int)  tolua_tonumber(tolua_S,2,0));
  int stride = ((int)  tolua_tonumber(tolua_S,3,0));
  const char* data = ((const char*)  tolua_tostring(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ComputeFromData'", NULL);
#endif
  {
   self->ComputeFromData(numElements,stride,data);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ComputeFromData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: TestIntersection of class  Bound */
#ifndef TOLUA_DISABLE_tolua_PX2_Bound_TestIntersection00
static int tolua_PX2_Bound_TestIntersection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Bound",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const AVector",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Bound* self = (const Bound*)  tolua_tousertype(tolua_S,1,0);
  const APoint* origin = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
  const AVector* direction = ((const AVector*)  tolua_tousertype(tolua_S,3,0));
  float tmin = ((float)  tolua_tonumber(tolua_S,4,0));
  float tmax = ((float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'TestIntersection'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->TestIntersection(*origin,*direction,tmin,tmax);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'TestIntersection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: TestIntersection of class  Bound */
#ifndef TOLUA_DISABLE_tolua_PX2_Bound_TestIntersection01
static int tolua_PX2_Bound_TestIntersection01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Bound",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Bound",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Bound* self = (const Bound*)  tolua_tousertype(tolua_S,1,0);
  const Bound* bound = ((const Bound*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'TestIntersection'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->TestIntersection(*bound);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Bound_TestIntersection00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: TestIntersection of class  Bound */
#ifndef TOLUA_DISABLE_tolua_PX2_Bound_TestIntersection02
static int tolua_PX2_Bound_TestIntersection02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Bound",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Bound",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const AVector",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Bound* self = (const Bound*)  tolua_tousertype(tolua_S,1,0);
  const Bound* bound = ((const Bound*)  tolua_tousertype(tolua_S,2,0));
  float tmax = ((float)  tolua_tonumber(tolua_S,3,0));
  const AVector* velocity0 = ((const AVector*)  tolua_tousertype(tolua_S,4,0));
  const AVector* velocity1 = ((const AVector*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'TestIntersection'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->TestIntersection(*bound,tmax,*velocity0,*velocity1);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Bound_TestIntersection01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Controlledable */
#ifndef TOLUA_DISABLE_tolua_PX2_Controlledable_delete00
static int tolua_PX2_Controlledable_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Controlledable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Controlledable* self = (Controlledable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ResetPlay of class  Controlledable */
#ifndef TOLUA_DISABLE_tolua_PX2_Controlledable_ResetPlay00
static int tolua_PX2_Controlledable_ResetPlay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Controlledable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Controlledable* self = (Controlledable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ResetPlay'", NULL);
#endif
  {
   self->ResetPlay();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ResetPlay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Play of class  Controlledable */
#ifndef TOLUA_DISABLE_tolua_PX2_Controlledable_Play00
static int tolua_PX2_Controlledable_Play00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Controlledable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Controlledable* self = (Controlledable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Play'", NULL);
#endif
  {
   self->Play();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Play'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsPlaying of class  Controlledable */
#ifndef TOLUA_DISABLE_tolua_PX2_Controlledable_IsPlaying00
static int tolua_PX2_Controlledable_IsPlaying00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Controlledable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Controlledable* self = (const Controlledable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsPlaying'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsPlaying();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsPlaying'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Stop of class  Controlledable */
#ifndef TOLUA_DISABLE_tolua_PX2_Controlledable_Stop00
static int tolua_PX2_Controlledable_Stop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Controlledable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Controlledable* self = (Controlledable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Stop'", NULL);
#endif
  {
   self->Stop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Stop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Reset of class  Controlledable */
#ifndef TOLUA_DISABLE_tolua_PX2_Controlledable_Reset00
static int tolua_PX2_Controlledable_Reset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Controlledable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Controlledable* self = (Controlledable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Reset'", NULL);
#endif
  {
   self->Reset();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Reset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSelfCtrled of class  Controlledable */
#ifndef TOLUA_DISABLE_tolua_PX2_Controlledable_SetSelfCtrled00
static int tolua_PX2_Controlledable_SetSelfCtrled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Controlledable",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Controlledable* self = (Controlledable*)  tolua_tousertype(tolua_S,1,0);
  bool selfCtrled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSelfCtrled'", NULL);
#endif
  {
   self->SetSelfCtrled(selfCtrled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSelfCtrled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsSelfCtrled of class  Controlledable */
#ifndef TOLUA_DISABLE_tolua_PX2_Controlledable_IsSelfCtrled00
static int tolua_PX2_Controlledable_IsSelfCtrled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Controlledable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Controlledable* self = (const Controlledable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsSelfCtrled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsSelfCtrled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsSelfCtrled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAutoPlay of class  Controlledable */
#ifndef TOLUA_DISABLE_tolua_PX2_Controlledable_SetAutoPlay00
static int tolua_PX2_Controlledable_SetAutoPlay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Controlledable",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Controlledable* self = (Controlledable*)  tolua_tousertype(tolua_S,1,0);
  bool autoPlay = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAutoPlay'", NULL);
#endif
  {
   self->SetAutoPlay(autoPlay);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAutoPlay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsAutoPlay of class  Controlledable */
#ifndef TOLUA_DISABLE_tolua_PX2_Controlledable_IsAutoPlay00
static int tolua_PX2_Controlledable_IsAutoPlay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Controlledable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Controlledable* self = (const Controlledable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsAutoPlay'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsAutoPlay();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsAutoPlay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumControllers of class  Controlledable */
#ifndef TOLUA_DISABLE_tolua_PX2_Controlledable_GetNumControllers00
static int tolua_PX2_Controlledable_GetNumControllers00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Controlledable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Controlledable* self = (const Controlledable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumControllers'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumControllers();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumControllers'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetController of class  Controlledable */
#ifndef TOLUA_DISABLE_tolua_PX2_Controlledable_GetController00
static int tolua_PX2_Controlledable_GetController00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Controlledable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Controlledable* self = (const Controlledable*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetController'", NULL);
#endif
  {
   Controller* tolua_ret = (Controller*)  self->GetController(i);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Controller");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetController'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetControllerByName of class  Controlledable */
#ifndef TOLUA_DISABLE_tolua_PX2_Controlledable_GetControllerByName00
static int tolua_PX2_Controlledable_GetControllerByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Controlledable",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Controlledable* self = (const Controlledable*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetControllerByName'", NULL);
#endif
  {
   Controller* tolua_ret = (Controller*)  self->GetControllerByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Controller");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetControllerByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: HasController of class  Controlledable */
#ifndef TOLUA_DISABLE_tolua_PX2_Controlledable_HasController00
static int tolua_PX2_Controlledable_HasController00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Controlledable",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Controller",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Controlledable* self = (Controlledable*)  tolua_tousertype(tolua_S,1,0);
  Controller* controller = ((Controller*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'HasController'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->HasController(controller);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'HasController'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AttachController of class  Controlledable */
#ifndef TOLUA_DISABLE_tolua_PX2_Controlledable_AttachController00
static int tolua_PX2_Controlledable_AttachController00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Controlledable",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Controller",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Controlledable* self = (Controlledable*)  tolua_tousertype(tolua_S,1,0);
  Controller* controller = ((Controller*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AttachController'", NULL);
#endif
  {
   self->AttachController(controller);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AttachController'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DetachController of class  Controlledable */
#ifndef TOLUA_DISABLE_tolua_PX2_Controlledable_DetachController00
static int tolua_PX2_Controlledable_DetachController00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Controlledable",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Controller",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Controlledable* self = (Controlledable*)  tolua_tousertype(tolua_S,1,0);
  Controller* controller = ((Controller*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DetachController'", NULL);
#endif
  {
   self->DetachController(controller);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DetachController'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DetachAllControllers of class  Controlledable */
#ifndef TOLUA_DISABLE_tolua_PX2_Controlledable_DetachAllControllers00
static int tolua_PX2_Controlledable_DetachAllControllers00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Controlledable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Controlledable* self = (Controlledable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DetachAllControllers'", NULL);
#endif
  {
   self->DetachAllControllers();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DetachAllControllers'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SortControls of class  Controlledable */
#ifndef TOLUA_DISABLE_tolua_PX2_Controlledable_SortControls00
static int tolua_PX2_Controlledable_SortControls00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Controlledable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Controlledable* self = (Controlledable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SortControls'", NULL);
#endif
  {
   self->SortControls();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SortControls'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: UpdateControllers of class  Controlledable */
#ifndef TOLUA_DISABLE_tolua_PX2_Controlledable_UpdateControllers00
static int tolua_PX2_Controlledable_UpdateControllers00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Controlledable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Controlledable* self = (Controlledable*)  tolua_tousertype(tolua_S,1,0);
  double applicationTime = ((double)  tolua_tonumber(tolua_S,2,0));
  double elapsedTime = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'UpdateControllers'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->UpdateControllers(applicationTime,elapsedTime);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'UpdateControllers'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_Controller_delete00
static int tolua_PX2_Controller_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Controller",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Controller* self = (Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPriority of class  Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_Controller_SetPriority00
static int tolua_PX2_Controller_SetPriority00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Controller",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Controller* self = (Controller*)  tolua_tousertype(tolua_S,1,0);
  int priority = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPriority'", NULL);
#endif
  {
   self->SetPriority(priority);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPriority'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPriority of class  Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_Controller_GetPriority00
static int tolua_PX2_Controller_GetPriority00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Controller",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Controller* self = (const Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPriority'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetPriority();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPriority'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ResetPlay of class  Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_Controller_ResetPlay00
static int tolua_PX2_Controller_ResetPlay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Controller",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Controller* self = (Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ResetPlay'", NULL);
#endif
  {
   self->ResetPlay();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ResetPlay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Play of class  Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_Controller_Play00
static int tolua_PX2_Controller_Play00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Controller",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Controller* self = (Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Play'", NULL);
#endif
  {
   self->Play();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Play'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsPlaying of class  Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_Controller_IsPlaying00
static int tolua_PX2_Controller_IsPlaying00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Controller",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Controller* self = (const Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsPlaying'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsPlaying();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsPlaying'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Stop of class  Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_Controller_Stop00
static int tolua_PX2_Controller_Stop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Controller",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Controller* self = (Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Stop'", NULL);
#endif
  {
   self->Stop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Stop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Reset of class  Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_Controller_Reset00
static int tolua_PX2_Controller_Reset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Controller",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Controller* self = (Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Reset'", NULL);
#endif
  {
   self->Reset();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Reset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMaxPlayTime of class  Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_Controller_SetMaxPlayTime00
static int tolua_PX2_Controller_SetMaxPlayTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Controller",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Controller* self = (Controller*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMaxPlayTime'", NULL);
#endif
  {
   self->SetMaxPlayTime(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMaxPlayTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMaxPlayTime of class  Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_Controller_GetMaxPlayTime00
static int tolua_PX2_Controller_GetMaxPlayTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Controller",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Controller* self = (const Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMaxPlayTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetMaxPlayTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMaxPlayTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDelayPlayTime of class  Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_Controller_SetDelayPlayTime00
static int tolua_PX2_Controller_SetDelayPlayTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Controller",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Controller* self = (Controller*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDelayPlayTime'", NULL);
#endif
  {
   self->SetDelayPlayTime(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDelayPlayTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDelayPlayTime of class  Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_Controller_GetDelayPlayTime00
static int tolua_PX2_Controller_GetDelayPlayTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Controller",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Controller* self = (const Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDelayPlayTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetDelayPlayTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDelayPlayTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPlayedTime of class  Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_Controller_GetPlayedTime00
static int tolua_PX2_Controller_GetPlayedTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Controller",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Controller* self = (const Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPlayedTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetPlayedTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPlayedTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPlayedTimeMinusDelay of class  Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_Controller_GetPlayedTimeMinusDelay00
static int tolua_PX2_Controller_GetPlayedTimeMinusDelay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Controller",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Controller* self = (const Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPlayedTimeMinusDelay'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetPlayedTimeMinusDelay();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPlayedTimeMinusDelay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPlayedDoDetach of class  Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_Controller_SetPlayedDoDetach00
static int tolua_PX2_Controller_SetPlayedDoDetach00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Controller",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Controller* self = (Controller*)  tolua_tousertype(tolua_S,1,0);
  bool doDetach = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPlayedDoDetach'", NULL);
#endif
  {
   self->SetPlayedDoDetach(doDetach);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPlayedDoDetach'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsPlayedDoDetach of class  Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_Controller_IsPlayedDoDetach00
static int tolua_PX2_Controller_IsPlayedDoDetach00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Controller",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Controller* self = (const Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsPlayedDoDetach'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsPlayedDoDetach();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsPlayedDoDetach'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetControlledable of class  Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_Controller_GetControlledable00
static int tolua_PX2_Controller_GetControlledable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Controller",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Controller* self = (const Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetControlledable'", NULL);
#endif
  {
   Controlledable* tolua_ret = (Controlledable*)  self->GetControlledable();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Controlledable");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetControlledable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Update of class  Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_Controller_Update00
static int tolua_PX2_Controller_Update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Controller",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Controller* self = (Controller*)  tolua_tousertype(tolua_S,1,0);
  double applicationTime = ((double)  tolua_tonumber(tolua_S,2,0));
  double elapsedTime = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Update'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->Update(applicationTime,elapsedTime);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Repeat of class  Controller */
#ifndef TOLUA_DISABLE_tolua_get_Controller_Repeat
static int tolua_get_Controller_Repeat(lua_State* tolua_S)
{
  Controller* self = (Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Repeat'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Repeat);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Repeat of class  Controller */
#ifndef TOLUA_DISABLE_tolua_set_Controller_Repeat
static int tolua_set_Controller_Repeat(lua_State* tolua_S)
{
  Controller* self = (Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Repeat'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Repeat = ((Controller::RepeatType) (int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MinTime of class  Controller */
#ifndef TOLUA_DISABLE_tolua_get_Controller_MinTime
static int tolua_get_Controller_MinTime(lua_State* tolua_S)
{
  Controller* self = (Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MinTime'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MinTime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MinTime of class  Controller */
#ifndef TOLUA_DISABLE_tolua_set_Controller_MinTime
static int tolua_set_Controller_MinTime(lua_State* tolua_S)
{
  Controller* self = (Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MinTime'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MinTime = ((double)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxTime of class  Controller */
#ifndef TOLUA_DISABLE_tolua_get_Controller_MaxTime
static int tolua_get_Controller_MaxTime(lua_State* tolua_S)
{
  Controller* self = (Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxTime'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxTime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxTime of class  Controller */
#ifndef TOLUA_DISABLE_tolua_set_Controller_MaxTime
static int tolua_set_Controller_MaxTime(lua_State* tolua_S)
{
  Controller* self = (Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxTime'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxTime = ((double)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Phase of class  Controller */
#ifndef TOLUA_DISABLE_tolua_get_Controller_Phase
static int tolua_get_Controller_Phase(lua_State* tolua_S)
{
  Controller* self = (Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Phase'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Phase);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Phase of class  Controller */
#ifndef TOLUA_DISABLE_tolua_set_Controller_Phase
static int tolua_set_Controller_Phase(lua_State* tolua_S)
{
  Controller* self = (Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Phase'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Phase = ((double)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Frequency of class  Controller */
#ifndef TOLUA_DISABLE_tolua_get_Controller_Frequency
static int tolua_get_Controller_Frequency(lua_State* tolua_S)
{
  Controller* self = (Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Frequency'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Frequency);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Frequency of class  Controller */
#ifndef TOLUA_DISABLE_tolua_set_Controller_Frequency
static int tolua_set_Controller_Frequency(lua_State* tolua_S)
{
  Controller* self = (Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Frequency'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Frequency = ((double)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Active of class  Controller */
#ifndef TOLUA_DISABLE_tolua_get_Controller_Active
static int tolua_get_Controller_Active(lua_State* tolua_S)
{
  Controller* self = (Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Active'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->Active);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Active of class  Controller */
#ifndef TOLUA_DISABLE_tolua_set_Controller_Active
static int tolua_set_Controller_Active(lua_State* tolua_S)
{
  Controller* self = (Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Active'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Active = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  InterpCurveController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveController_new00
static int tolua_PX2_InterpCurveController_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InterpCurveController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   InterpCurveController* tolua_ret = (InterpCurveController*)  Mtolua_new((InterpCurveController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  InterpCurveController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveController_new00_local
static int tolua_PX2_InterpCurveController_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InterpCurveController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   InterpCurveController* tolua_ret = (InterpCurveController*)  Mtolua_new((InterpCurveController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveController");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  InterpCurveController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveController_delete00
static int tolua_PX2_InterpCurveController_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InterpCurveController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InterpCurveController* self = (InterpCurveController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAttachUpdateInit of class  InterpCurveController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveController_SetAttachUpdateInit00
static int tolua_PX2_InterpCurveController_SetAttachUpdateInit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InterpCurveController",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InterpCurveController* self = (InterpCurveController*)  tolua_tousertype(tolua_S,1,0);
  bool doUpdate = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAttachUpdateInit'", NULL);
#endif
  {
   self->SetAttachUpdateInit(doUpdate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAttachUpdateInit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsAttachUpdateInit of class  InterpCurveController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveController_IsAttachUpdateInit00
static int tolua_PX2_InterpCurveController_IsAttachUpdateInit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const InterpCurveController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const InterpCurveController* self = (const InterpCurveController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsAttachUpdateInit'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsAttachUpdateInit();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsAttachUpdateInit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDetachResetInit of class  InterpCurveController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveController_SetDetachResetInit00
static int tolua_PX2_InterpCurveController_SetDetachResetInit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InterpCurveController",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InterpCurveController* self = (InterpCurveController*)  tolua_tousertype(tolua_S,1,0);
  bool doReset = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDetachResetInit'", NULL);
#endif
  {
   self->SetDetachResetInit(doReset);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDetachResetInit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsDetachResetInit of class  InterpCurveController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveController_IsDetachResetInit00
static int tolua_PX2_InterpCurveController_IsDetachResetInit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const InterpCurveController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const InterpCurveController* self = (const InterpCurveController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsDetachResetInit'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsDetachResetInit();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsDetachResetInit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetRelatively of class  InterpCurveController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveController_SetRelatively00
static int tolua_PX2_InterpCurveController_SetRelatively00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InterpCurveController",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InterpCurveController* self = (InterpCurveController*)  tolua_tousertype(tolua_S,1,0);
  bool r = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetRelatively'", NULL);
#endif
  {
   self->SetRelatively(r);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetRelatively'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsRelatively of class  InterpCurveController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveController_IsRelatively00
static int tolua_PX2_InterpCurveController_IsRelatively00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const InterpCurveController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const InterpCurveController* self = (const InterpCurveController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsRelatively'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsRelatively();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsRelatively'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  InterpCurveFloatController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveFloatController_new00
static int tolua_PX2_InterpCurveFloatController_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InterpCurveFloatController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float initValue = ((float)  tolua_tonumber(tolua_S,2,0.0f));
  {
   InterpCurveFloatController* tolua_ret = (InterpCurveFloatController*)  Mtolua_new((InterpCurveFloatController)(initValue));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveFloatController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  InterpCurveFloatController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveFloatController_new00_local
static int tolua_PX2_InterpCurveFloatController_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InterpCurveFloatController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float initValue = ((float)  tolua_tonumber(tolua_S,2,0.0f));
  {
   InterpCurveFloatController* tolua_ret = (InterpCurveFloatController*)  Mtolua_new((InterpCurveFloatController)(initValue));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveFloatController");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  InterpCurveFloatController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveFloatController_delete00
static int tolua_PX2_InterpCurveFloatController_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InterpCurveFloatController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InterpCurveFloatController* self = (InterpCurveFloatController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetInitValue of class  InterpCurveFloatController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveFloatController_SetInitValue00
static int tolua_PX2_InterpCurveFloatController_SetInitValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InterpCurveFloatController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InterpCurveFloatController* self = (InterpCurveFloatController*)  tolua_tousertype(tolua_S,1,0);
  float val = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetInitValue'", NULL);
#endif
  {
   self->SetInitValue(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetInitValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetInitValue of class  InterpCurveFloatController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveFloatController_GetInitValue00
static int tolua_PX2_InterpCurveFloatController_GetInitValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const InterpCurveFloatController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const InterpCurveFloatController* self = (const InterpCurveFloatController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetInitValue'", NULL);
#endif
  {
   const float tolua_ret = (const float)  self->GetInitValue();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetInitValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCurValueRaw of class  InterpCurveFloatController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveFloatController_GetCurValueRaw00
static int tolua_PX2_InterpCurveFloatController_GetCurValueRaw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const InterpCurveFloatController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const InterpCurveFloatController* self = (const InterpCurveFloatController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCurValueRaw'", NULL);
#endif
  {
   const float tolua_ret = (const float)  self->GetCurValueRaw();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCurValueRaw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCurValueRelatived of class  InterpCurveFloatController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveFloatController_GetCurValueRelatived00
static int tolua_PX2_InterpCurveFloatController_GetCurValueRelatived00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const InterpCurveFloatController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const InterpCurveFloatController* self = (const InterpCurveFloatController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCurValueRelatived'", NULL);
#endif
  {
   const float tolua_ret = (const float)  self->GetCurValueRelatived();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCurValueRelatived'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Clear of class  InterpCurveFloatController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveFloatController_Clear00
static int tolua_PX2_InterpCurveFloatController_Clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InterpCurveFloatController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InterpCurveFloatController* self = (InterpCurveFloatController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Clear'", NULL);
#endif
  {
   self->Clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddPoint of class  InterpCurveFloatController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveFloatController_AddPoint00
static int tolua_PX2_InterpCurveFloatController_AddPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InterpCurveFloatController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InterpCurveFloatController* self = (InterpCurveFloatController*)  tolua_tousertype(tolua_S,1,0);
  float inVal = ((float)  tolua_tonumber(tolua_S,2,0));
  float outVal = ((float)  tolua_tonumber(tolua_S,3,0));
  InterpCurveMode mode = ((InterpCurveMode) (int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddPoint'", NULL);
#endif
  {
   self->AddPoint(inVal,outVal,mode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  InterpCurveFloat3Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveFloat3Controller_new00
static int tolua_PX2_InterpCurveFloat3Controller_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InterpCurveFloat3Controller",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   InterpCurveFloat3Controller* tolua_ret = (InterpCurveFloat3Controller*)  Mtolua_new((InterpCurveFloat3Controller)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveFloat3Controller");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  InterpCurveFloat3Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveFloat3Controller_new00_local
static int tolua_PX2_InterpCurveFloat3Controller_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InterpCurveFloat3Controller",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   InterpCurveFloat3Controller* tolua_ret = (InterpCurveFloat3Controller*)  Mtolua_new((InterpCurveFloat3Controller)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveFloat3Controller");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  InterpCurveFloat3Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveFloat3Controller_new01
static int tolua_PX2_InterpCurveFloat3Controller_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InterpCurveFloat3Controller",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Float3* initValue = ((const Float3*)  tolua_tousertype(tolua_S,2,0));
  {
   InterpCurveFloat3Controller* tolua_ret = (InterpCurveFloat3Controller*)  Mtolua_new((InterpCurveFloat3Controller)(*initValue));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveFloat3Controller");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_InterpCurveFloat3Controller_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  InterpCurveFloat3Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveFloat3Controller_new01_local
static int tolua_PX2_InterpCurveFloat3Controller_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InterpCurveFloat3Controller",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Float3* initValue = ((const Float3*)  tolua_tousertype(tolua_S,2,0));
  {
   InterpCurveFloat3Controller* tolua_ret = (InterpCurveFloat3Controller*)  Mtolua_new((InterpCurveFloat3Controller)(*initValue));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveFloat3Controller");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_InterpCurveFloat3Controller_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  InterpCurveFloat3Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveFloat3Controller_delete00
static int tolua_PX2_InterpCurveFloat3Controller_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InterpCurveFloat3Controller",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InterpCurveFloat3Controller* self = (InterpCurveFloat3Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetInitValue of class  InterpCurveFloat3Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveFloat3Controller_SetInitValue00
static int tolua_PX2_InterpCurveFloat3Controller_SetInitValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InterpCurveFloat3Controller",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InterpCurveFloat3Controller* self = (InterpCurveFloat3Controller*)  tolua_tousertype(tolua_S,1,0);
  const Float3* val = ((const Float3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetInitValue'", NULL);
#endif
  {
   self->SetInitValue(*val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetInitValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetInitValue of class  InterpCurveFloat3Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveFloat3Controller_GetInitValue00
static int tolua_PX2_InterpCurveFloat3Controller_GetInitValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const InterpCurveFloat3Controller",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const InterpCurveFloat3Controller* self = (const InterpCurveFloat3Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetInitValue'", NULL);
#endif
  {
   const Float3& tolua_ret = (const Float3&)  self->GetInitValue();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float3");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetInitValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCurValueRaw of class  InterpCurveFloat3Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveFloat3Controller_GetCurValueRaw00
static int tolua_PX2_InterpCurveFloat3Controller_GetCurValueRaw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const InterpCurveFloat3Controller",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const InterpCurveFloat3Controller* self = (const InterpCurveFloat3Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCurValueRaw'", NULL);
#endif
  {
   const Float3& tolua_ret = (const Float3&)  self->GetCurValueRaw();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float3");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCurValueRaw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCurValueRelatived of class  InterpCurveFloat3Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveFloat3Controller_GetCurValueRelatived00
static int tolua_PX2_InterpCurveFloat3Controller_GetCurValueRelatived00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const InterpCurveFloat3Controller",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const InterpCurveFloat3Controller* self = (const InterpCurveFloat3Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCurValueRelatived'", NULL);
#endif
  {
   const Float3& tolua_ret = (const Float3&)  self->GetCurValueRelatived();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float3");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCurValueRelatived'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Clear of class  InterpCurveFloat3Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveFloat3Controller_Clear00
static int tolua_PX2_InterpCurveFloat3Controller_Clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InterpCurveFloat3Controller",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InterpCurveFloat3Controller* self = (InterpCurveFloat3Controller*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Clear'", NULL);
#endif
  {
   self->Clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddPoint of class  InterpCurveFloat3Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveFloat3Controller_AddPoint00
static int tolua_PX2_InterpCurveFloat3Controller_AddPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InterpCurveFloat3Controller",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const Float3",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InterpCurveFloat3Controller* self = (InterpCurveFloat3Controller*)  tolua_tousertype(tolua_S,1,0);
  float inVal = ((float)  tolua_tonumber(tolua_S,2,0));
  const Float3* outVal = ((const Float3*)  tolua_tousertype(tolua_S,3,0));
  InterpCurveMode mode = ((InterpCurveMode) (int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddPoint'", NULL);
#endif
  {
   self->AddPoint(inVal,*outVal,mode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddPoint of class  InterpCurveFloat3Controller */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveFloat3Controller_AddPoint01
static int tolua_PX2_InterpCurveFloat3Controller_AddPoint01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InterpCurveFloat3Controller",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const AVector",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  InterpCurveFloat3Controller* self = (InterpCurveFloat3Controller*)  tolua_tousertype(tolua_S,1,0);
  float inVal = ((float)  tolua_tonumber(tolua_S,2,0));
  const AVector* outVal = ((const AVector*)  tolua_tousertype(tolua_S,3,0));
  InterpCurveMode mode = ((InterpCurveMode) (int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddPoint'", NULL);
#endif
  {
   self->AddPoint(inVal,*outVal,mode);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_InterpCurveFloat3Controller_AddPoint00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  InterpCurveUniformScaleController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveUniformScaleController_new00
static int tolua_PX2_InterpCurveUniformScaleController_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InterpCurveUniformScaleController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   InterpCurveUniformScaleController* tolua_ret = (InterpCurveUniformScaleController*)  Mtolua_new((InterpCurveUniformScaleController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveUniformScaleController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  InterpCurveUniformScaleController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveUniformScaleController_new00_local
static int tolua_PX2_InterpCurveUniformScaleController_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InterpCurveUniformScaleController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   InterpCurveUniformScaleController* tolua_ret = (InterpCurveUniformScaleController*)  Mtolua_new((InterpCurveUniformScaleController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveUniformScaleController");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  InterpCurveUniformScaleController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveUniformScaleController_delete00
static int tolua_PX2_InterpCurveUniformScaleController_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InterpCurveUniformScaleController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InterpCurveUniformScaleController* self = (InterpCurveUniformScaleController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  InterpCurveUniformScaleController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveUniformScaleController_New00
static int tolua_PX2_InterpCurveUniformScaleController_New00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InterpCurveUniformScaleController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   InterpCurveUniformScaleController* tolua_ret = (InterpCurveUniformScaleController*)  InterpCurveUniformScaleController::New();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveUniformScaleController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'New'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  InterpCurveUniformScaleController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveUniformScaleController_New01
static int tolua_PX2_InterpCurveUniformScaleController_New01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InterpCurveUniformScaleController",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   InterpCurveUniformScaleController* tolua_ret = (InterpCurveUniformScaleController*)  InterpCurveUniformScaleController::New(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveUniformScaleController");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_InterpCurveUniformScaleController_New00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  InterpCurveAlphaController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveAlphaController_new00
static int tolua_PX2_InterpCurveAlphaController_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InterpCurveAlphaController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   InterpCurveAlphaController* tolua_ret = (InterpCurveAlphaController*)  Mtolua_new((InterpCurveAlphaController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveAlphaController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  InterpCurveAlphaController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveAlphaController_new00_local
static int tolua_PX2_InterpCurveAlphaController_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InterpCurveAlphaController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   InterpCurveAlphaController* tolua_ret = (InterpCurveAlphaController*)  Mtolua_new((InterpCurveAlphaController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveAlphaController");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  InterpCurveAlphaController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveAlphaController_delete00
static int tolua_PX2_InterpCurveAlphaController_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InterpCurveAlphaController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InterpCurveAlphaController* self = (InterpCurveAlphaController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  InterpCurveScaleController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveScaleController_new00
static int tolua_PX2_InterpCurveScaleController_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InterpCurveScaleController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   InterpCurveScaleController* tolua_ret = (InterpCurveScaleController*)  Mtolua_new((InterpCurveScaleController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveScaleController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  InterpCurveScaleController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveScaleController_new00_local
static int tolua_PX2_InterpCurveScaleController_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InterpCurveScaleController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   InterpCurveScaleController* tolua_ret = (InterpCurveScaleController*)  Mtolua_new((InterpCurveScaleController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveScaleController");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  InterpCurveScaleController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveScaleController_delete00
static int tolua_PX2_InterpCurveScaleController_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InterpCurveScaleController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InterpCurveScaleController* self = (InterpCurveScaleController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  InterpCurveRotateController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveRotateController_new00
static int tolua_PX2_InterpCurveRotateController_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InterpCurveRotateController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   InterpCurveRotateController* tolua_ret = (InterpCurveRotateController*)  Mtolua_new((InterpCurveRotateController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveRotateController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  InterpCurveRotateController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveRotateController_new00_local
static int tolua_PX2_InterpCurveRotateController_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InterpCurveRotateController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   InterpCurveRotateController* tolua_ret = (InterpCurveRotateController*)  Mtolua_new((InterpCurveRotateController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveRotateController");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  InterpCurveRotateController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveRotateController_delete00
static int tolua_PX2_InterpCurveRotateController_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InterpCurveRotateController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InterpCurveRotateController* self = (InterpCurveRotateController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  InterpCurveRotateController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveRotateController_New00
static int tolua_PX2_InterpCurveRotateController_New00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InterpCurveRotateController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   InterpCurveRotateController* tolua_ret = (InterpCurveRotateController*)  InterpCurveRotateController::New();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveRotateController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'New'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  InterpCurveRotateController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveRotateController_New01
static int tolua_PX2_InterpCurveRotateController_New01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InterpCurveRotateController",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   InterpCurveRotateController* tolua_ret = (InterpCurveRotateController*)  InterpCurveRotateController::New(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveRotateController");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_InterpCurveRotateController_New00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  InterpCurveTranslateController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveTranslateController_new00
static int tolua_PX2_InterpCurveTranslateController_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InterpCurveTranslateController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   InterpCurveTranslateController* tolua_ret = (InterpCurveTranslateController*)  Mtolua_new((InterpCurveTranslateController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveTranslateController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  InterpCurveTranslateController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveTranslateController_new00_local
static int tolua_PX2_InterpCurveTranslateController_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InterpCurveTranslateController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   InterpCurveTranslateController* tolua_ret = (InterpCurveTranslateController*)  Mtolua_new((InterpCurveTranslateController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveTranslateController");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  InterpCurveTranslateController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveTranslateController_delete00
static int tolua_PX2_InterpCurveTranslateController_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InterpCurveTranslateController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InterpCurveTranslateController* self = (InterpCurveTranslateController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  InterpCurveColorController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveColorController_new00
static int tolua_PX2_InterpCurveColorController_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InterpCurveColorController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   InterpCurveColorController* tolua_ret = (InterpCurveColorController*)  Mtolua_new((InterpCurveColorController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveColorController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  InterpCurveColorController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveColorController_new00_local
static int tolua_PX2_InterpCurveColorController_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InterpCurveColorController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   InterpCurveColorController* tolua_ret = (InterpCurveColorController*)  Mtolua_new((InterpCurveColorController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveColorController");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  InterpCurveColorController */
#ifndef TOLUA_DISABLE_tolua_PX2_InterpCurveColorController_delete00
static int tolua_PX2_InterpCurveColorController_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InterpCurveColorController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InterpCurveColorController* self = (InterpCurveColorController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Buffer */
#ifndef TOLUA_DISABLE_tolua_PX2_Buffer_delete00
static int tolua_PX2_Buffer_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Buffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Buffer* self = (Buffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumElements of class  Buffer */
#ifndef TOLUA_DISABLE_tolua_PX2_Buffer_GetNumElements00
static int tolua_PX2_Buffer_GetNumElements00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Buffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Buffer* self = (const Buffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumElements'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumElements();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumElements'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetElementSize of class  Buffer */
#ifndef TOLUA_DISABLE_tolua_PX2_Buffer_GetElementSize00
static int tolua_PX2_Buffer_GetElementSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Buffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Buffer* self = (const Buffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetElementSize'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetElementSize();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetElementSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUsage of class  Buffer */
#ifndef TOLUA_DISABLE_tolua_PX2_Buffer_GetUsage00
static int tolua_PX2_Buffer_GetUsage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Buffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Buffer* self = (const Buffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUsage'", NULL);
#endif
  {
   Buffer::Usage tolua_ret = (Buffer::Usage)  self->GetUsage();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUsage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetNumElements of class  Buffer */
#ifndef TOLUA_DISABLE_tolua_PX2_Buffer_SetNumElements00
static int tolua_PX2_Buffer_SetNumElements00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Buffer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Buffer* self = (Buffer*)  tolua_tousertype(tolua_S,1,0);
  int numElements = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetNumElements'", NULL);
#endif
  {
   self->SetNumElements(numElements);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetNumElements'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumBytes of class  Buffer */
#ifndef TOLUA_DISABLE_tolua_PX2_Buffer_GetNumBytes00
static int tolua_PX2_Buffer_GetNumBytes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Buffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Buffer* self = (const Buffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumBytes'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumBytes();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumBytes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ClearData of class  Buffer */
#ifndef TOLUA_DISABLE_tolua_PX2_Buffer_ClearData00
static int tolua_PX2_Buffer_ClearData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Buffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Buffer* self = (Buffer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ClearData'", NULL);
#endif
  {
   self->ClearData();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ClearData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Texture */
#ifndef TOLUA_DISABLE_tolua_PX2_Texture_delete00
static int tolua_PX2_Texture_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Texture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Texture* self = (Texture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFormat of class  Texture */
#ifndef TOLUA_DISABLE_tolua_PX2_Texture_GetFormat00
static int tolua_PX2_Texture_GetFormat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Texture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Texture* self = (const Texture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFormat'", NULL);
#endif
  {
   Texture::Format tolua_ret = (Texture::Format)  self->GetFormat();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFormat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTextureType of class  Texture */
#ifndef TOLUA_DISABLE_tolua_PX2_Texture_GetTextureType00
static int tolua_PX2_Texture_GetTextureType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Texture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Texture* self = (const Texture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTextureType'", NULL);
#endif
  {
   Texture::Type tolua_ret = (Texture::Type)  self->GetTextureType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTextureType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUsage of class  Texture */
#ifndef TOLUA_DISABLE_tolua_PX2_Texture_GetUsage00
static int tolua_PX2_Texture_GetUsage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Texture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Texture* self = (const Texture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUsage'", NULL);
#endif
  {
   Buffer::Usage tolua_ret = (Buffer::Usage)  self->GetUsage();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUsage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumLevels of class  Texture */
#ifndef TOLUA_DISABLE_tolua_PX2_Texture_GetNumLevels00
static int tolua_PX2_Texture_GetNumLevels00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Texture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Texture* self = (const Texture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumLevels'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumLevels();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumLevels'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumDimensions of class  Texture */
#ifndef TOLUA_DISABLE_tolua_PX2_Texture_GetNumDimensions00
static int tolua_PX2_Texture_GetNumDimensions00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Texture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Texture* self = (const Texture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumDimensions'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumDimensions();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumDimensions'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDimension of class  Texture */
#ifndef TOLUA_DISABLE_tolua_PX2_Texture_GetDimension00
static int tolua_PX2_Texture_GetDimension00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Texture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Texture* self = (const Texture*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
  int level = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDimension'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetDimension(i,level);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDimension'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumLevelBytes of class  Texture */
#ifndef TOLUA_DISABLE_tolua_PX2_Texture_GetNumLevelBytes00
static int tolua_PX2_Texture_GetNumLevelBytes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Texture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Texture* self = (const Texture*)  tolua_tousertype(tolua_S,1,0);
  int level = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumLevelBytes'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumLevelBytes(level);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumLevelBytes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumTotalBytes of class  Texture */
#ifndef TOLUA_DISABLE_tolua_PX2_Texture_GetNumTotalBytes00
static int tolua_PX2_Texture_GetNumTotalBytes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Texture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Texture* self = (const Texture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumTotalBytes'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumTotalBytes();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumTotalBytes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLevelOffset of class  Texture */
#ifndef TOLUA_DISABLE_tolua_PX2_Texture_GetLevelOffset00
static int tolua_PX2_Texture_GetLevelOffset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Texture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Texture* self = (const Texture*)  tolua_tousertype(tolua_S,1,0);
  int level = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLevelOffset'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetLevelOffset(level);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLevelOffset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPixelSize of class  Texture */
#ifndef TOLUA_DISABLE_tolua_PX2_Texture_GetPixelSize00
static int tolua_PX2_Texture_GetPixelSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Texture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Texture* self = (const Texture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPixelSize'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetPixelSize();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPixelSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsCompressed of class  Texture */
#ifndef TOLUA_DISABLE_tolua_PX2_Texture_IsCompressed00
static int tolua_PX2_Texture_IsCompressed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Texture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Texture* self = (const Texture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsCompressed'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsCompressed();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsCompressed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsMipmapable of class  Texture */
#ifndef TOLUA_DISABLE_tolua_PX2_Texture_IsMipmapable00
static int tolua_PX2_Texture_IsMipmapable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Texture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Texture* self = (const Texture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsMipmapable'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsMipmapable();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsMipmapable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsDataNull of class  Texture */
#ifndef TOLUA_DISABLE_tolua_PX2_Texture_IsDataNull00
static int tolua_PX2_Texture_IsDataNull00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Texture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Texture* self = (const Texture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsDataNull'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsDataNull();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsDataNull'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetBindDoClearData of class  Texture */
#ifndef TOLUA_DISABLE_tolua_PX2_Texture_SetBindDoClearData00
static int tolua_PX2_Texture_SetBindDoClearData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Texture",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Texture* self = (Texture*)  tolua_tousertype(tolua_S,1,0);
  bool doClearData = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetBindDoClearData'", NULL);
#endif
  {
   self->SetBindDoClearData(doClearData);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetBindDoClearData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsBindDoClearData of class  Texture */
#ifndef TOLUA_DISABLE_tolua_PX2_Texture_IsBindDoClearData00
static int tolua_PX2_Texture_IsBindDoClearData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Texture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Texture* self = (const Texture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsBindDoClearData'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsBindDoClearData();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsBindDoClearData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ClearData of class  Texture */
#ifndef TOLUA_DISABLE_tolua_PX2_Texture_ClearData00
static int tolua_PX2_Texture_ClearData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Texture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Texture* self = (Texture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ClearData'", NULL);
#endif
  {
   self->ClearData();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ClearData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Texture2D */
#ifndef TOLUA_DISABLE_tolua_PX2_Texture2D_delete00
static int tolua_PX2_Texture2D_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Texture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Texture2D* self = (Texture2D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWidth of class  Texture2D */
#ifndef TOLUA_DISABLE_tolua_PX2_Texture2D_GetWidth00
static int tolua_PX2_Texture2D_GetWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Texture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Texture2D* self = (const Texture2D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWidth'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetWidth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetHeight of class  Texture2D */
#ifndef TOLUA_DISABLE_tolua_PX2_Texture2D_GetHeight00
static int tolua_PX2_Texture2D_GetHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Texture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Texture2D* self = (const Texture2D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetHeight'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CanGenMinmaps of class  Texture2D */
#ifndef TOLUA_DISABLE_tolua_PX2_Texture2D_CanGenMinmaps00
static int tolua_PX2_Texture2D_CanGenMinmaps00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Texture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Texture2D* self = (const Texture2D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CanGenMinmaps'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->CanGenMinmaps();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CanGenMinmaps'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GenerateMipmaps of class  Texture2D */
#ifndef TOLUA_DISABLE_tolua_PX2_Texture2D_GenerateMipmaps00
static int tolua_PX2_Texture2D_GenerateMipmaps00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Texture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Texture2D* self = (Texture2D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GenerateMipmaps'", NULL);
#endif
  {
   self->GenerateMipmaps();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GenerateMipmaps'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: HasMipmaps of class  Texture2D */
#ifndef TOLUA_DISABLE_tolua_PX2_Texture2D_HasMipmaps00
static int tolua_PX2_Texture2D_HasMipmaps00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Texture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Texture2D* self = (const Texture2D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'HasMipmaps'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->HasMipmaps();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'HasMipmaps'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Shine */
#ifndef TOLUA_DISABLE_tolua_PX2_Shine_new00
static int tolua_PX2_Shine_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Shine",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Shine* tolua_ret = (Shine*)  Mtolua_new((Shine)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Shine");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Shine */
#ifndef TOLUA_DISABLE_tolua_PX2_Shine_new00_local
static int tolua_PX2_Shine_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Shine",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Shine* tolua_ret = (Shine*)  Mtolua_new((Shine)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Shine");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Shine */
#ifndef TOLUA_DISABLE_tolua_PX2_Shine_delete00
static int tolua_PX2_Shine_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shine",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shine* self = (Shine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Emissive of class  Shine */
#ifndef TOLUA_DISABLE_tolua_get_Shine_Emissive
static int tolua_get_Shine_Emissive(lua_State* tolua_S)
{
  Shine* self = (Shine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Emissive'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->Emissive,"Float4");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Emissive of class  Shine */
#ifndef TOLUA_DISABLE_tolua_set_Shine_Emissive
static int tolua_set_Shine_Emissive(lua_State* tolua_S)
{
  Shine* self = (Shine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Emissive'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Float4",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Emissive = *((Float4*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Ambient of class  Shine */
#ifndef TOLUA_DISABLE_tolua_get_Shine_Ambient
static int tolua_get_Shine_Ambient(lua_State* tolua_S)
{
  Shine* self = (Shine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Ambient'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->Ambient,"Float4");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Ambient of class  Shine */
#ifndef TOLUA_DISABLE_tolua_set_Shine_Ambient
static int tolua_set_Shine_Ambient(lua_State* tolua_S)
{
  Shine* self = (Shine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Ambient'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Float4",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Ambient = *((Float4*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Diffuse of class  Shine */
#ifndef TOLUA_DISABLE_tolua_get_Shine_Diffuse
static int tolua_get_Shine_Diffuse(lua_State* tolua_S)
{
  Shine* self = (Shine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Diffuse'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->Diffuse,"Float4");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Diffuse of class  Shine */
#ifndef TOLUA_DISABLE_tolua_set_Shine_Diffuse
static int tolua_set_Shine_Diffuse(lua_State* tolua_S)
{
  Shine* self = (Shine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Diffuse'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Float4",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Diffuse = *((Float4*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Specular of class  Shine */
#ifndef TOLUA_DISABLE_tolua_get_Shine_Specular
static int tolua_get_Shine_Specular(lua_State* tolua_S)
{
  Shine* self = (Shine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Specular'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->Specular,"Float4");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Specular of class  Shine */
#ifndef TOLUA_DISABLE_tolua_set_Shine_Specular
static int tolua_set_Shine_Specular(lua_State* tolua_S)
{
  Shine* self = (Shine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Specular'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Float4",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Specular = *((Float4*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: ReCalTemp of class  Shine */
#ifndef TOLUA_DISABLE_tolua_PX2_Shine_ReCalTemp00
static int tolua_PX2_Shine_ReCalTemp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shine",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shine* self = (Shine*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ReCalTemp'", NULL);
#endif
  {
   self->ReCalTemp();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ReCalTemp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Material */
#ifndef TOLUA_DISABLE_tolua_PX2_Material_new00
static int tolua_PX2_Material_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Material",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Material* tolua_ret = (Material*)  Mtolua_new((Material)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Material");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Material */
#ifndef TOLUA_DISABLE_tolua_PX2_Material_new00_local
static int tolua_PX2_Material_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Material",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Material* tolua_ret = (Material*)  Mtolua_new((Material)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Material");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Material */
#ifndef TOLUA_DISABLE_tolua_PX2_Material_delete00
static int tolua_PX2_Material_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Material",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Material* self = (Material*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumTechniques of class  Material */
#ifndef TOLUA_DISABLE_tolua_PX2_Material_GetNumTechniques00
static int tolua_PX2_Material_GetNumTechniques00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Material",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Material* self = (const Material*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumTechniques'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumTechniques();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumTechniques'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTechnique of class  Material */
#ifndef TOLUA_DISABLE_tolua_PX2_Material_GetTechnique00
static int tolua_PX2_Material_GetTechnique00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Material",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Material* self = (const Material*)  tolua_tousertype(tolua_S,1,0);
  int techniqueIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTechnique'", NULL);
#endif
  {
   MaterialTechnique* tolua_ret = (MaterialTechnique*)  self->GetTechnique(techniqueIndex);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MaterialTechnique");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTechnique'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTechnique of class  Material */
#ifndef TOLUA_DISABLE_tolua_PX2_Material_GetTechnique01
static int tolua_PX2_Material_GetTechnique01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Material",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Material* self = (const Material*)  tolua_tousertype(tolua_S,1,0);
  const std::string techniqueName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  int index = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTechnique'", NULL);
#endif
  {
   MaterialTechnique* tolua_ret = (MaterialTechnique*)  self->GetTechnique(techniqueName,index);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MaterialTechnique");
   tolua_pushcppstring(tolua_S,(const char*)techniqueName);
   tolua_pushnumber(tolua_S,(lua_Number)index);
  }
 }
 return 3;
tolua_lerror:
 return tolua_PX2_Material_GetTechnique00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumPasses of class  Material */
#ifndef TOLUA_DISABLE_tolua_PX2_Material_GetNumPasses00
static int tolua_PX2_Material_GetNumPasses00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Material",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Material* self = (const Material*)  tolua_tousertype(tolua_S,1,0);
  int techniqueIndex = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumPasses'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumPasses(techniqueIndex);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumPasses'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPass of class  Material */
#ifndef TOLUA_DISABLE_tolua_PX2_Material_GetPass00
static int tolua_PX2_Material_GetPass00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Material",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Material* self = (const Material*)  tolua_tousertype(tolua_S,1,0);
  int techniqueIndex = ((int)  tolua_tonumber(tolua_S,2,0));
  int passIndex = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPass'", NULL);
#endif
  {
   MaterialPass* tolua_ret = (MaterialPass*)  self->GetPass(techniqueIndex,passIndex);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MaterialPass");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPass'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetVertexShader of class  Material */
#ifndef TOLUA_DISABLE_tolua_PX2_Material_GetVertexShader00
static int tolua_PX2_Material_GetVertexShader00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Material",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Material* self = (const Material*)  tolua_tousertype(tolua_S,1,0);
  int techniqueIndex = ((int)  tolua_tonumber(tolua_S,2,0));
  int passIndex = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetVertexShader'", NULL);
#endif
  {
   VertexShader* tolua_ret = (VertexShader*)  self->GetVertexShader(techniqueIndex,passIndex);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"VertexShader");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetVertexShader'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPixelShader of class  Material */
#ifndef TOLUA_DISABLE_tolua_PX2_Material_GetPixelShader00
static int tolua_PX2_Material_GetPixelShader00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Material",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Material* self = (const Material*)  tolua_tousertype(tolua_S,1,0);
  int techniqueIndex = ((int)  tolua_tonumber(tolua_S,2,0));
  int passIndex = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPixelShader'", NULL);
#endif
  {
   PixelShader* tolua_ret = (PixelShader*)  self->GetPixelShader(techniqueIndex,passIndex);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PixelShader");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPixelShader'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAlphaProperty of class  Material */
#ifndef TOLUA_DISABLE_tolua_PX2_Material_GetAlphaProperty00
static int tolua_PX2_Material_GetAlphaProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Material",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Material* self = (const Material*)  tolua_tousertype(tolua_S,1,0);
  int techniqueIndex = ((int)  tolua_tonumber(tolua_S,2,0));
  int passIndex = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAlphaProperty'", NULL);
#endif
  {
   AlphaProperty* tolua_ret = (AlphaProperty*)  self->GetAlphaProperty(techniqueIndex,passIndex);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AlphaProperty");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAlphaProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCullProperty of class  Material */
#ifndef TOLUA_DISABLE_tolua_PX2_Material_GetCullProperty00
static int tolua_PX2_Material_GetCullProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Material",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Material* self = (const Material*)  tolua_tousertype(tolua_S,1,0);
  int techniqueIndex = ((int)  tolua_tonumber(tolua_S,2,0));
  int passIndex = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCullProperty'", NULL);
#endif
  {
   CullProperty* tolua_ret = (CullProperty*)  self->GetCullProperty(techniqueIndex,passIndex);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CullProperty");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCullProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDepthProperty of class  Material */
#ifndef TOLUA_DISABLE_tolua_PX2_Material_GetDepthProperty00
static int tolua_PX2_Material_GetDepthProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Material",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Material* self = (const Material*)  tolua_tousertype(tolua_S,1,0);
  int techniqueIndex = ((int)  tolua_tonumber(tolua_S,2,0));
  int passIndex = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDepthProperty'", NULL);
#endif
  {
   DepthProperty* tolua_ret = (DepthProperty*)  self->GetDepthProperty(techniqueIndex,passIndex);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"DepthProperty");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDepthProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetOffsetProperty of class  Material */
#ifndef TOLUA_DISABLE_tolua_PX2_Material_GetOffsetProperty00
static int tolua_PX2_Material_GetOffsetProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Material",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Material* self = (const Material*)  tolua_tousertype(tolua_S,1,0);
  int techniqueIndex = ((int)  tolua_tonumber(tolua_S,2,0));
  int passIndex = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetOffsetProperty'", NULL);
#endif
  {
   OffsetProperty* tolua_ret = (OffsetProperty*)  self->GetOffsetProperty(techniqueIndex,passIndex);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"OffsetProperty");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetOffsetProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetStencilProperty of class  Material */
#ifndef TOLUA_DISABLE_tolua_PX2_Material_GetStencilProperty00
static int tolua_PX2_Material_GetStencilProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Material",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Material* self = (const Material*)  tolua_tousertype(tolua_S,1,0);
  int techniqueIndex = ((int)  tolua_tonumber(tolua_S,2,0));
  int passIndex = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetStencilProperty'", NULL);
#endif
  {
   StencilProperty* tolua_ret = (StencilProperty*)  self->GetStencilProperty(techniqueIndex,passIndex);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"StencilProperty");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetStencilProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWireProperty of class  Material */
#ifndef TOLUA_DISABLE_tolua_PX2_Material_GetWireProperty00
static int tolua_PX2_Material_GetWireProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Material",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Material* self = (const Material*)  tolua_tousertype(tolua_S,1,0);
  int techniqueIndex = ((int)  tolua_tonumber(tolua_S,2,0));
  int passIndex = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWireProperty'", NULL);
#endif
  {
   WireProperty* tolua_ret = (WireProperty*)  self->GetWireProperty(techniqueIndex,passIndex);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"WireProperty");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWireProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_new00
static int tolua_PX2_MaterialInstance_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"MaterialInstance",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Material",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Material* material = ((const Material*)  tolua_tousertype(tolua_S,2,0));
  int techniqueIndex = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   MaterialInstance* tolua_ret = (MaterialInstance*)  Mtolua_new((MaterialInstance)(material,techniqueIndex));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MaterialInstance");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_new00_local
static int tolua_PX2_MaterialInstance_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"MaterialInstance",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Material",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Material* material = ((const Material*)  tolua_tousertype(tolua_S,2,0));
  int techniqueIndex = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   MaterialInstance* tolua_ret = (MaterialInstance*)  Mtolua_new((MaterialInstance)(material,techniqueIndex));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MaterialInstance");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_new01
static int tolua_PX2_MaterialInstance_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"MaterialInstance",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const std::string mtlFilename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string techName = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
  bool share = ((bool)  tolua_toboolean(tolua_S,4,0));
  {
   MaterialInstance* tolua_ret = (MaterialInstance*)  Mtolua_new((MaterialInstance)(mtlFilename,techName,share));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MaterialInstance");
   tolua_pushcppstring(tolua_S,(const char*)mtlFilename);
   tolua_pushcppstring(tolua_S,(const char*)techName);
  }
 }
 return 3;
tolua_lerror:
 return tolua_PX2_MaterialInstance_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_new01_local
static int tolua_PX2_MaterialInstance_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"MaterialInstance",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const std::string mtlFilename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string techName = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
  bool share = ((bool)  tolua_toboolean(tolua_S,4,0));
  {
   MaterialInstance* tolua_ret = (MaterialInstance*)  Mtolua_new((MaterialInstance)(mtlFilename,techName,share));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MaterialInstance");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
   tolua_pushcppstring(tolua_S,(const char*)mtlFilename);
   tolua_pushcppstring(tolua_S,(const char*)techName);
  }
 }
 return 3;
tolua_lerror:
 return tolua_PX2_MaterialInstance_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_delete00
static int tolua_PX2_MaterialInstance_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MaterialInstance",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MaterialInstance* self = (MaterialInstance*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUseMaterial of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_SetUseMaterial00
static int tolua_PX2_MaterialInstance_SetUseMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MaterialInstance",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MaterialInstance* self = (MaterialInstance*)  tolua_tousertype(tolua_S,1,0);
  const std::string mtlName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string techName = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUseMaterial'", NULL);
#endif
  {
   self->SetUseMaterial(mtlName,techName);
   tolua_pushcppstring(tolua_S,(const char*)mtlName);
   tolua_pushcppstring(tolua_S,(const char*)techName);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUseMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUseMaterialTechnique of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_SetUseMaterialTechnique00
static int tolua_PX2_MaterialInstance_SetUseMaterialTechnique00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MaterialInstance",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MaterialInstance* self = (MaterialInstance*)  tolua_tousertype(tolua_S,1,0);
  const std::string techName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUseMaterialTechnique'", NULL);
#endif
  {
   self->SetUseMaterialTechnique(techName);
   tolua_pushcppstring(tolua_S,(const char*)techName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUseMaterialTechnique'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMaterialFilename of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_GetMaterialFilename00
static int tolua_PX2_MaterialInstance_GetMaterialFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const MaterialInstance",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const MaterialInstance* self = (const MaterialInstance*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMaterialFilename'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetMaterialFilename();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMaterialFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTechniqueName of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_GetTechniqueName00
static int tolua_PX2_MaterialInstance_GetTechniqueName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const MaterialInstance",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const MaterialInstance* self = (const MaterialInstance*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTechniqueName'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetTechniqueName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTechniqueName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMaterial of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_GetMaterial00
static int tolua_PX2_MaterialInstance_GetMaterial00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const MaterialInstance",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const MaterialInstance* self = (const MaterialInstance*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMaterial'", NULL);
#endif
  {
   Material* tolua_ret = (Material*)  self->GetMaterial();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Material");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMaterial'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTechniqueIndex of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_GetTechniqueIndex00
static int tolua_PX2_MaterialInstance_GetTechniqueIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const MaterialInstance",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const MaterialInstance* self = (const MaterialInstance*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTechniqueIndex'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetTechniqueIndex();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTechniqueIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumPasses of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_GetNumPasses00
static int tolua_PX2_MaterialInstance_GetNumPasses00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const MaterialInstance",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const MaterialInstance* self = (const MaterialInstance*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumPasses'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumPasses();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumPasses'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPass of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_GetPass00
static int tolua_PX2_MaterialInstance_GetPass00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const MaterialInstance",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const MaterialInstance* self = (const MaterialInstance*)  tolua_tousertype(tolua_S,1,0);
  int pass = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPass'", NULL);
#endif
  {
   const MaterialPass* tolua_ret = (const MaterialPass*)  self->GetPass(pass);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const MaterialPass");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPass'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetVertexParameters of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_GetVertexParameters00
static int tolua_PX2_MaterialInstance_GetVertexParameters00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const MaterialInstance",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const MaterialInstance* self = (const MaterialInstance*)  tolua_tousertype(tolua_S,1,0);
  int pass = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetVertexParameters'", NULL);
#endif
  {
   ShaderParameters* tolua_ret = (ShaderParameters*)  self->GetVertexParameters(pass);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ShaderParameters");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetVertexParameters'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPixelParameters of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_GetPixelParameters00
static int tolua_PX2_MaterialInstance_GetPixelParameters00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const MaterialInstance",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const MaterialInstance* self = (const MaterialInstance*)  tolua_tousertype(tolua_S,1,0);
  int pass = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPixelParameters'", NULL);
#endif
  {
   ShaderParameters* tolua_ret = (ShaderParameters*)  self->GetPixelParameters(pass);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ShaderParameters");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPixelParameters'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetVertexConstant of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_SetVertexConstant00
static int tolua_PX2_MaterialInstance_SetVertexConstant00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MaterialInstance",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"ShaderFloat",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MaterialInstance* self = (MaterialInstance*)  tolua_tousertype(tolua_S,1,0);
  int pass = ((int)  tolua_tonumber(tolua_S,2,0));
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
  ShaderFloat* sfloat = ((ShaderFloat*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetVertexConstant'", NULL);
#endif
  {
   int tolua_ret = (int)  self->SetVertexConstant(pass,name,sfloat);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetVertexConstant'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPixelConstant of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_SetPixelConstant00
static int tolua_PX2_MaterialInstance_SetPixelConstant00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MaterialInstance",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"ShaderFloat",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MaterialInstance* self = (MaterialInstance*)  tolua_tousertype(tolua_S,1,0);
  int pass = ((int)  tolua_tonumber(tolua_S,2,0));
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
  ShaderFloat* sfloat = ((ShaderFloat*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPixelConstant'", NULL);
#endif
  {
   int tolua_ret = (int)  self->SetPixelConstant(pass,name,sfloat);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPixelConstant'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetVertexTexture of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_SetVertexTexture00
static int tolua_PX2_MaterialInstance_SetVertexTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MaterialInstance",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"Texture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MaterialInstance* self = (MaterialInstance*)  tolua_tousertype(tolua_S,1,0);
  int pass = ((int)  tolua_tonumber(tolua_S,2,0));
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
  Texture* texture = ((Texture*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetVertexTexture'", NULL);
#endif
  {
   int tolua_ret = (int)  self->SetVertexTexture(pass,name,texture);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetVertexTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPixelTexture of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_SetPixelTexture00
static int tolua_PX2_MaterialInstance_SetPixelTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MaterialInstance",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"Texture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MaterialInstance* self = (MaterialInstance*)  tolua_tousertype(tolua_S,1,0);
  int pass = ((int)  tolua_tonumber(tolua_S,2,0));
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
  Texture* texture = ((Texture*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPixelTexture'", NULL);
#endif
  {
   int tolua_ret = (int)  self->SetPixelTexture(pass,name,texture);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPixelTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPixelTexture of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_SetPixelTexture01
static int tolua_PX2_MaterialInstance_SetPixelTexture01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MaterialInstance",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  MaterialInstance* self = (MaterialInstance*)  tolua_tousertype(tolua_S,1,0);
  int pass = ((int)  tolua_tonumber(tolua_S,2,0));
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPixelTexture'", NULL);
#endif
  {
   int tolua_ret = (int)  self->SetPixelTexture(pass,name,filename);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 3;
tolua_lerror:
 return tolua_PX2_MaterialInstance_SetPixelTexture00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsHasPixelSample of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_IsHasPixelSample00
static int tolua_PX2_MaterialInstance_IsHasPixelSample00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MaterialInstance",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MaterialInstance* self = (MaterialInstance*)  tolua_tousertype(tolua_S,1,0);
  int pass = ((int)  tolua_tonumber(tolua_S,2,0));
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsHasPixelSample'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsHasPixelSample(pass,name);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsHasPixelSample'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetVertexConstant of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_GetVertexConstant00
static int tolua_PX2_MaterialInstance_GetVertexConstant00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const MaterialInstance",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const MaterialInstance* self = (const MaterialInstance*)  tolua_tousertype(tolua_S,1,0);
  int pass = ((int)  tolua_tonumber(tolua_S,2,0));
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetVertexConstant'", NULL);
#endif
  {
   ShaderFloat* tolua_ret = (ShaderFloat*)  self->GetVertexConstant(pass,name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ShaderFloat");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetVertexConstant'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPixelConstant of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_GetPixelConstant00
static int tolua_PX2_MaterialInstance_GetPixelConstant00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const MaterialInstance",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const MaterialInstance* self = (const MaterialInstance*)  tolua_tousertype(tolua_S,1,0);
  int pass = ((int)  tolua_tonumber(tolua_S,2,0));
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPixelConstant'", NULL);
#endif
  {
   ShaderFloat* tolua_ret = (ShaderFloat*)  self->GetPixelConstant(pass,name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ShaderFloat");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPixelConstant'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetVertexTexture of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_GetVertexTexture00
static int tolua_PX2_MaterialInstance_GetVertexTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const MaterialInstance",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const MaterialInstance* self = (const MaterialInstance*)  tolua_tousertype(tolua_S,1,0);
  int pass = ((int)  tolua_tonumber(tolua_S,2,0));
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetVertexTexture'", NULL);
#endif
  {
   Texture* tolua_ret = (Texture*)  self->GetVertexTexture(pass,name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Texture");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetVertexTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPixelTexture of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_GetPixelTexture00
static int tolua_PX2_MaterialInstance_GetPixelTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const MaterialInstance",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const MaterialInstance* self = (const MaterialInstance*)  tolua_tousertype(tolua_S,1,0);
  int pass = ((int)  tolua_tonumber(tolua_S,2,0));
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPixelTexture'", NULL);
#endif
  {
   Texture* tolua_ret = (Texture*)  self->GetPixelTexture(pass,name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Texture");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPixelTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetVertexConstant of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_GetVertexConstant01
static int tolua_PX2_MaterialInstance_GetVertexConstant01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const MaterialInstance",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const MaterialInstance* self = (const MaterialInstance*)  tolua_tousertype(tolua_S,1,0);
  int pass = ((int)  tolua_tonumber(tolua_S,2,0));
  int handle = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetVertexConstant'", NULL);
#endif
  {
   ShaderFloat* tolua_ret = (ShaderFloat*)  self->GetVertexConstant(pass,handle);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ShaderFloat");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_MaterialInstance_GetVertexConstant00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPixelConstant of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_GetPixelConstant01
static int tolua_PX2_MaterialInstance_GetPixelConstant01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const MaterialInstance",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const MaterialInstance* self = (const MaterialInstance*)  tolua_tousertype(tolua_S,1,0);
  int pass = ((int)  tolua_tonumber(tolua_S,2,0));
  int handle = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPixelConstant'", NULL);
#endif
  {
   ShaderFloat* tolua_ret = (ShaderFloat*)  self->GetPixelConstant(pass,handle);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ShaderFloat");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_MaterialInstance_GetPixelConstant00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetVertexTexture of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_GetVertexTexture01
static int tolua_PX2_MaterialInstance_GetVertexTexture01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const MaterialInstance",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const MaterialInstance* self = (const MaterialInstance*)  tolua_tousertype(tolua_S,1,0);
  int pass = ((int)  tolua_tonumber(tolua_S,2,0));
  int handle = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetVertexTexture'", NULL);
#endif
  {
   Texture* tolua_ret = (Texture*)  self->GetVertexTexture(pass,handle);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Texture");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_MaterialInstance_GetVertexTexture00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPixelTexture of class  MaterialInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_MaterialInstance_GetPixelTexture01
static int tolua_PX2_MaterialInstance_GetPixelTexture01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const MaterialInstance",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const MaterialInstance* self = (const MaterialInstance*)  tolua_tousertype(tolua_S,1,0);
  int pass = ((int)  tolua_tonumber(tolua_S,2,0));
  int handle = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPixelTexture'", NULL);
#endif
  {
   Texture* tolua_ret = (Texture*)  self->GetPixelTexture(pass,handle);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Texture");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_MaterialInstance_GetPixelTexture00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Movable */
#ifndef TOLUA_DISABLE_tolua_PX2_Movable_delete00
static int tolua_PX2_Movable_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Movable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LocalTransform of class  Movable */
#ifndef TOLUA_DISABLE_tolua_get_Movable_LocalTransform
static int tolua_get_Movable_LocalTransform(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LocalTransform'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->LocalTransform,"Transform");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LocalTransform of class  Movable */
#ifndef TOLUA_DISABLE_tolua_set_Movable_LocalTransform
static int tolua_set_Movable_LocalTransform(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LocalTransform'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Transform",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LocalTransform = *((Transform*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WorldTransform of class  Movable */
#ifndef TOLUA_DISABLE_tolua_get_Movable_WorldTransform
static int tolua_get_Movable_WorldTransform(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WorldTransform'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->WorldTransform,"Transform");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WorldTransform of class  Movable */
#ifndef TOLUA_DISABLE_tolua_set_Movable_WorldTransform
static int tolua_set_Movable_WorldTransform(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WorldTransform'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Transform",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WorldTransform = *((Transform*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WorldTransformIsCurrent of class  Movable */
#ifndef TOLUA_DISABLE_tolua_get_Movable_WorldTransformIsCurrent
static int tolua_get_Movable_WorldTransformIsCurrent(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WorldTransformIsCurrent'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->WorldTransformIsCurrent);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WorldTransformIsCurrent of class  Movable */
#ifndef TOLUA_DISABLE_tolua_set_Movable_WorldTransformIsCurrent
static int tolua_set_Movable_WorldTransformIsCurrent(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WorldTransformIsCurrent'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WorldTransformIsCurrent = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IsSkinCtrlSetWroldTrans of class  Movable */
#ifndef TOLUA_DISABLE_tolua_get_Movable_IsSkinCtrlSetWroldTrans
static int tolua_get_Movable_IsSkinCtrlSetWroldTrans(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IsSkinCtrlSetWroldTrans'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->IsSkinCtrlSetWroldTrans);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IsSkinCtrlSetWroldTrans of class  Movable */
#ifndef TOLUA_DISABLE_tolua_set_Movable_IsSkinCtrlSetWroldTrans
static int tolua_set_Movable_IsSkinCtrlSetWroldTrans(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IsSkinCtrlSetWroldTrans'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IsSkinCtrlSetWroldTrans = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BoundWorldTransform of class  Movable */
#ifndef TOLUA_DISABLE_tolua_get_Movable_BoundWorldTransform
static int tolua_get_Movable_BoundWorldTransform(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BoundWorldTransform'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->BoundWorldTransform,"Transform");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BoundWorldTransform of class  Movable */
#ifndef TOLUA_DISABLE_tolua_set_Movable_BoundWorldTransform
static int tolua_set_Movable_BoundWorldTransform(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BoundWorldTransform'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Transform",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BoundWorldTransform = *((Transform*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WorldBound of class  Movable */
#ifndef TOLUA_DISABLE_tolua_get_Movable_WorldBound
static int tolua_get_Movable_WorldBound(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WorldBound'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->WorldBound,"Bound");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WorldBound of class  Movable */
#ifndef TOLUA_DISABLE_tolua_set_Movable_WorldBound
static int tolua_set_Movable_WorldBound(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WorldBound'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Bound",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WorldBound = *((Bound*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WorldBoundIsCurrent of class  Movable */
#ifndef TOLUA_DISABLE_tolua_get_Movable_WorldBoundIsCurrent
static int tolua_get_Movable_WorldBoundIsCurrent(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WorldBoundIsCurrent'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->WorldBoundIsCurrent);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WorldBoundIsCurrent of class  Movable */
#ifndef TOLUA_DISABLE_tolua_set_Movable_WorldBoundIsCurrent
static int tolua_set_Movable_WorldBoundIsCurrent(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WorldBoundIsCurrent'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WorldBoundIsCurrent = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Culling of class  Movable */
#ifndef TOLUA_DISABLE_tolua_get_Movable_Culling
static int tolua_get_Movable_Culling(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Culling'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Culling);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Culling of class  Movable */
#ifndef TOLUA_DISABLE_tolua_set_Movable_Culling
static int tolua_set_Movable_Culling(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Culling'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Culling = ((Movable::CullingMode) (int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: Show of class  Movable */
#ifndef TOLUA_DISABLE_tolua_PX2_Movable_Show00
static int tolua_PX2_Movable_Show00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Movable",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
  bool show = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Show'", NULL);
#endif
  {
   self->Show(show);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Show'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsShow of class  Movable */
#ifndef TOLUA_DISABLE_tolua_PX2_Movable_IsShow00
static int tolua_PX2_Movable_IsShow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Movable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Movable* self = (const Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsShow'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsShow();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsShow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetColorSelfCtrled of class  Movable */
#ifndef TOLUA_DISABLE_tolua_PX2_Movable_SetColorSelfCtrled00
static int tolua_PX2_Movable_SetColorSelfCtrled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Movable",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
  bool selfCtrled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetColorSelfCtrled'", NULL);
#endif
  {
   self->SetColorSelfCtrled(selfCtrled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetColorSelfCtrled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsColorSelfCtrled of class  Movable */
#ifndef TOLUA_DISABLE_tolua_PX2_Movable_IsColorSelfCtrled00
static int tolua_PX2_Movable_IsColorSelfCtrled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Movable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Movable* self = (const Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsColorSelfCtrled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsColorSelfCtrled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsColorSelfCtrled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetColor of class  Movable */
#ifndef TOLUA_DISABLE_tolua_PX2_Movable_SetColor00
static int tolua_PX2_Movable_SetColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Movable",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
  const Float3* color = ((const Float3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetColor'", NULL);
#endif
  {
   self->SetColor(*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetColor of class  Movable */
#ifndef TOLUA_DISABLE_tolua_PX2_Movable_GetColor00
static int tolua_PX2_Movable_GetColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Movable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Movable* self = (const Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetColor'", NULL);
#endif
  {
   const Float3& tolua_ret = (const Float3&)  self->GetColor();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float3");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAlphaSelfCtrled of class  Movable */
#ifndef TOLUA_DISABLE_tolua_PX2_Movable_SetAlphaSelfCtrled00
static int tolua_PX2_Movable_SetAlphaSelfCtrled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Movable",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
  bool selfCtrled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAlphaSelfCtrled'", NULL);
#endif
  {
   self->SetAlphaSelfCtrled(selfCtrled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAlphaSelfCtrled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsAlphaSelfCtrled of class  Movable */
#ifndef TOLUA_DISABLE_tolua_PX2_Movable_IsAlphaSelfCtrled00
static int tolua_PX2_Movable_IsAlphaSelfCtrled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Movable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Movable* self = (const Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsAlphaSelfCtrled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsAlphaSelfCtrled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsAlphaSelfCtrled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAlpha of class  Movable */
#ifndef TOLUA_DISABLE_tolua_PX2_Movable_SetAlpha00
static int tolua_PX2_Movable_SetAlpha00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Movable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
  float alpha = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAlpha'", NULL);
#endif
  {
   self->SetAlpha(alpha);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAlpha'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAlpha of class  Movable */
#ifndef TOLUA_DISABLE_tolua_PX2_Movable_GetAlpha00
static int tolua_PX2_Movable_GetAlpha00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Movable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Movable* self = (const Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAlpha'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetAlpha();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAlpha'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetBrightnessSelfCtrled of class  Movable */
#ifndef TOLUA_DISABLE_tolua_PX2_Movable_SetBrightnessSelfCtrled00
static int tolua_PX2_Movable_SetBrightnessSelfCtrled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Movable",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
  bool selfCtrled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetBrightnessSelfCtrled'", NULL);
#endif
  {
   self->SetBrightnessSelfCtrled(selfCtrled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetBrightnessSelfCtrled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsBrightnessSelfCtrled of class  Movable */
#ifndef TOLUA_DISABLE_tolua_PX2_Movable_IsBrightnessSelfCtrled00
static int tolua_PX2_Movable_IsBrightnessSelfCtrled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Movable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Movable* self = (const Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsBrightnessSelfCtrled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsBrightnessSelfCtrled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsBrightnessSelfCtrled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetBrightness of class  Movable */
#ifndef TOLUA_DISABLE_tolua_PX2_Movable_SetBrightness00
static int tolua_PX2_Movable_SetBrightness00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Movable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
  float brightness = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetBrightness'", NULL);
#endif
  {
   self->SetBrightness(brightness);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetBrightness'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetBrightness of class  Movable */
#ifndef TOLUA_DISABLE_tolua_PX2_Movable_GetBrightness00
static int tolua_PX2_Movable_GetBrightness00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Movable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Movable* self = (const Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetBrightness'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetBrightness();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetBrightness'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLastColor of class  Movable */
#ifndef TOLUA_DISABLE_tolua_PX2_Movable_GetLastColor00
static int tolua_PX2_Movable_GetLastColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Movable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Movable* self = (const Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLastColor'", NULL);
#endif
  {
   const Float3& tolua_ret = (const Float3&)  self->GetLastColor();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float3");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLastColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLastAlpha of class  Movable */
#ifndef TOLUA_DISABLE_tolua_PX2_Movable_GetLastAlpha00
static int tolua_PX2_Movable_GetLastAlpha00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Movable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Movable* self = (const Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLastAlpha'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetLastAlpha();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLastAlpha'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLastBrightness of class  Movable */
#ifndef TOLUA_DISABLE_tolua_PX2_Movable_GetLastBrightness00
static int tolua_PX2_Movable_GetLastBrightness00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Movable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Movable* self = (const Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLastBrightness'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetLastBrightness();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLastBrightness'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetParent of class  Movable */
#ifndef TOLUA_DISABLE_tolua_PX2_Movable_GetParent00
static int tolua_PX2_Movable_GetParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Movable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetParent'", NULL);
#endif
  {
   Movable* tolua_ret = (Movable*)  self->GetParent();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Movable");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  VertexFormat */
#ifndef TOLUA_DISABLE_tolua_PX2_VertexFormat_delete00
static int tolua_PX2_VertexFormat_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"VertexFormat",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  VertexFormat* self = (VertexFormat*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_delete00
static int tolua_PX2_Renderable_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderable* self = (Renderable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPrimitiveType of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_GetPrimitiveType00
static int tolua_PX2_Renderable_GetPrimitiveType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderable* self = (const Renderable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPrimitiveType'", NULL);
#endif
  {
   Renderable::PrimitiveType tolua_ret = (Renderable::PrimitiveType)  self->GetPrimitiveType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPrimitiveType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMaterialInstance of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_GetMaterialInstance00
static int tolua_PX2_Renderable_GetMaterialInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderable* self = (const Renderable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMaterialInstance'", NULL);
#endif
  {
   MaterialInstance* tolua_ret = (MaterialInstance*)  self->GetMaterialInstance();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MaterialInstance");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMaterialInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Triangles */
#ifndef TOLUA_DISABLE_tolua_PX2_Triangles_delete00
static int tolua_PX2_Triangles_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Triangles",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Triangles* self = (Triangles*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  TriMesh */
#ifndef TOLUA_DISABLE_tolua_PX2_TriMesh_delete00
static int tolua_PX2_TriMesh_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriMesh* self = (TriMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumTriangles of class  TriMesh */
#ifndef TOLUA_DISABLE_tolua_PX2_TriMesh_GetNumTriangles00
static int tolua_PX2_TriMesh_GetNumTriangles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const TriMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const TriMesh* self = (const TriMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumTriangles'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumTriangles();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumTriangles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTriangle of class  TriMesh */
#ifndef TOLUA_DISABLE_tolua_PX2_TriMesh_GetTriangle00
static int tolua_PX2_TriMesh_GetTriangle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const TriMesh",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const TriMesh* self = (const TriMesh*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
  int v0 = ((int)  tolua_tonumber(tolua_S,3,0));
  int v1 = ((int)  tolua_tonumber(tolua_S,4,0));
  int v2 = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTriangle'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->GetTriangle(i,v0,v1,v2);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)v0);
   tolua_pushnumber(tolua_S,(lua_Number)v1);
   tolua_pushnumber(tolua_S,(lua_Number)v2);
  }
 }
 return 4;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTriangle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Node */
#ifndef TOLUA_DISABLE_tolua_PX2_Node_new00
static int tolua_PX2_Node_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Node",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Node* tolua_ret = (Node*)  Mtolua_new((Node)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Node");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Node */
#ifndef TOLUA_DISABLE_tolua_PX2_Node_new00_local
static int tolua_PX2_Node_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Node",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Node* tolua_ret = (Node*)  Mtolua_new((Node)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Node");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Node */
#ifndef TOLUA_DISABLE_tolua_PX2_Node_delete00
static int tolua_PX2_Node_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Node",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Node* self = (Node*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  Node */
#ifndef TOLUA_DISABLE_tolua_PX2_Node_New00
static int tolua_PX2_Node_New00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Node",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Node* tolua_ret = (Node*)  Node::New();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Node");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'New'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  Node */
#ifndef TOLUA_DISABLE_tolua_PX2_Node_New01
static int tolua_PX2_Node_New01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Node",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Node* tolua_ret = (Node*)  Node::New(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Node");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_Node_New00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Play of class  Node */
#ifndef TOLUA_DISABLE_tolua_PX2_Node_Play00
static int tolua_PX2_Node_Play00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Node",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Node* self = (Node*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Play'", NULL);
#endif
  {
   self->Play();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Play'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsPlaying of class  Node */
#ifndef TOLUA_DISABLE_tolua_PX2_Node_IsPlaying00
static int tolua_PX2_Node_IsPlaying00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Node",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Node* self = (const Node*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsPlaying'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsPlaying();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsPlaying'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Stop of class  Node */
#ifndef TOLUA_DISABLE_tolua_PX2_Node_Stop00
static int tolua_PX2_Node_Stop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Node",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Node* self = (Node*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Stop'", NULL);
#endif
  {
   self->Stop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Stop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Reset of class  Node */
#ifndef TOLUA_DISABLE_tolua_PX2_Node_Reset00
static int tolua_PX2_Node_Reset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Node",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Node* self = (Node*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Reset'", NULL);
#endif
  {
   self->Reset();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Reset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumChildren of class  Node */
#ifndef TOLUA_DISABLE_tolua_PX2_Node_GetNumChildren00
static int tolua_PX2_Node_GetNumChildren00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Node",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Node* self = (const Node*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumChildren'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumChildren();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumChildren'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumValidChildren of class  Node */
#ifndef TOLUA_DISABLE_tolua_PX2_Node_GetNumValidChildren00
static int tolua_PX2_Node_GetNumValidChildren00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Node",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Node* self = (const Node*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumValidChildren'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumValidChildren();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumValidChildren'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AttachChild of class  Node */
#ifndef TOLUA_DISABLE_tolua_PX2_Node_AttachChild00
static int tolua_PX2_Node_AttachChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Node",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Movable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Node* self = (Node*)  tolua_tousertype(tolua_S,1,0);
  Movable* child = ((Movable*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AttachChild'", NULL);
#endif
  {
   int tolua_ret = (int)  self->AttachChild(child);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AttachChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: InsertChild of class  Node */
#ifndef TOLUA_DISABLE_tolua_PX2_Node_InsertChild00
static int tolua_PX2_Node_InsertChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Node",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Movable",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Movable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Node* self = (Node*)  tolua_tousertype(tolua_S,1,0);
  Movable* before = ((Movable*)  tolua_tousertype(tolua_S,2,0));
  Movable* child = ((Movable*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'InsertChild'", NULL);
#endif
  {
   self->InsertChild(before,child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'InsertChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DetachChild of class  Node */
#ifndef TOLUA_DISABLE_tolua_PX2_Node_DetachChild00
static int tolua_PX2_Node_DetachChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Node",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Movable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Node* self = (Node*)  tolua_tousertype(tolua_S,1,0);
  Movable* child = ((Movable*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DetachChild'", NULL);
#endif
  {
   int tolua_ret = (int)  self->DetachChild(child);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DetachChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DetachChildByName of class  Node */
#ifndef TOLUA_DISABLE_tolua_PX2_Node_DetachChildByName00
static int tolua_PX2_Node_DetachChildByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Node",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Node* self = (Node*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DetachChildByName'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->DetachChildByName(name);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DetachChildByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DetachAllChildren of class  Node */
#ifndef TOLUA_DISABLE_tolua_PX2_Node_DetachAllChildren00
static int tolua_PX2_Node_DetachAllChildren00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Node",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Node* self = (Node*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DetachAllChildren'", NULL);
#endif
  {
   self->DetachAllChildren();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DetachAllChildren'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Enable of class  Node */
#ifndef TOLUA_DISABLE_tolua_PX2_Node_Enable00
static int tolua_PX2_Node_Enable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Node",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Node* self = (Node*)  tolua_tousertype(tolua_S,1,0);
  bool enable = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Enable'", NULL);
#endif
  {
   self->Enable(enable);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Enable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCastShadow of class  Node */
#ifndef TOLUA_DISABLE_tolua_PX2_Node_SetCastShadow00
static int tolua_PX2_Node_SetCastShadow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Node",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Node* self = (Node*)  tolua_tousertype(tolua_S,1,0);
  bool castShadow = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCastShadow'", NULL);
#endif
  {
   self->SetCastShadow(castShadow);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCastShadow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetReceiveShadow of class  Node */
#ifndef TOLUA_DISABLE_tolua_PX2_Node_SetReceiveShadow00
static int tolua_PX2_Node_SetReceiveShadow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Node",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Node* self = (Node*)  tolua_tousertype(tolua_S,1,0);
  bool reciveShadow = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetReceiveShadow'", NULL);
#endif
  {
   self->SetReceiveShadow(reciveShadow);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetReceiveShadow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDoPickPriority of class  Node */
#ifndef TOLUA_DISABLE_tolua_PX2_Node_SetDoPickPriority00
static int tolua_PX2_Node_SetDoPickPriority00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Node",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Node* self = (Node*)  tolua_tousertype(tolua_S,1,0);
  bool doPickPriority = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDoPickPriority'", NULL);
#endif
  {
   self->SetDoPickPriority(doPickPriority);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDoPickPriority'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsDoPickPriority of class  Node */
#ifndef TOLUA_DISABLE_tolua_PX2_Node_IsDoPickPriority00
static int tolua_PX2_Node_IsDoPickPriority00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Node",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Node* self = (const Node*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsDoPickPriority'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsDoPickPriority();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsDoPickPriority'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnNotPicked of class  Node */
#ifndef TOLUA_DISABLE_tolua_PX2_Node_OnNotPicked00
static int tolua_PX2_Node_OnNotPicked00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Node",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Node* self = (Node*)  tolua_tousertype(tolua_S,1,0);
  int pickInfo = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnNotPicked'", NULL);
#endif
  {
   self->OnNotPicked(pickInfo);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnNotPicked'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetNeedCalUpdateChild of class  Node */
#ifndef TOLUA_DISABLE_tolua_PX2_Node_SetNeedCalUpdateChild00
static int tolua_PX2_Node_SetNeedCalUpdateChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Node",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Node* self = (Node*)  tolua_tousertype(tolua_S,1,0);
  bool needCal = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetNeedCalUpdateChild'", NULL);
#endif
  {
   self->SetNeedCalUpdateChild(needCal);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetNeedCalUpdateChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsNeedCalUpdateChild of class  Node */
#ifndef TOLUA_DISABLE_tolua_PX2_Node_IsNeedCalUpdateChild00
static int tolua_PX2_Node_IsNeedCalUpdateChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Node",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Node* self = (const Node*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsNeedCalUpdateChild'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsNeedCalUpdateChild();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsNeedCalUpdateChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAnchorID of class  Node */
#ifndef TOLUA_DISABLE_tolua_PX2_Node_SetAnchorID00
static int tolua_PX2_Node_SetAnchorID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Node",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Node* self = (Node*)  tolua_tousertype(tolua_S,1,0);
  int anchorID = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAnchorID'", NULL);
#endif
  {
   self->SetAnchorID(anchorID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAnchorID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorID of class  Node */
#ifndef TOLUA_DISABLE_tolua_PX2_Node_GetAnchorID00
static int tolua_PX2_Node_GetAnchorID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Node",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Node* self = (const Node*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorID'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetAnchorID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_new00
static int tolua_PX2_SizeNode_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SizeNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SizeNode* tolua_ret = (SizeNode*)  Mtolua_new((SizeNode)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SizeNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_new00_local
static int tolua_PX2_SizeNode_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SizeNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SizeNode* tolua_ret = (SizeNode*)  Mtolua_new((SizeNode)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SizeNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_delete00
static int tolua_PX2_SizeNode_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SizeNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SizeNode* self = (SizeNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSize of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_SetSize00
static int tolua_PX2_SizeNode_SetSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SizeNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SizeNode* self = (SizeNode*)  tolua_tousertype(tolua_S,1,0);
  float width = ((float)  tolua_tonumber(tolua_S,2,0));
  float height = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSize'", NULL);
#endif
  {
   self->SetSize(width,height);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSize of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_SetSize01
static int tolua_PX2_SizeNode_SetSize01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SizeNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Sizef",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SizeNode* self = (SizeNode*)  tolua_tousertype(tolua_S,1,0);
  const Sizef* size = ((const Sizef*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSize'", NULL);
#endif
  {
   self->SetSize(*size);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_SizeNode_SetSize00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSize of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_GetSize00
static int tolua_PX2_SizeNode_GetSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SizeNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SizeNode* self = (const SizeNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSize'", NULL);
#endif
  {
   const Sizef& tolua_ret = (const Sizef&)  self->GetSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Sizef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetWidth of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_SetWidth00
static int tolua_PX2_SizeNode_SetWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SizeNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SizeNode* self = (SizeNode*)  tolua_tousertype(tolua_S,1,0);
  float width = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetWidth'", NULL);
#endif
  {
   self->SetWidth(width);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWidth of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_GetWidth00
static int tolua_PX2_SizeNode_GetWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SizeNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SizeNode* self = (const SizeNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWidth'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetWidth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetHeight of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_SetHeight00
static int tolua_PX2_SizeNode_SetHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SizeNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SizeNode* self = (SizeNode*)  tolua_tousertype(tolua_S,1,0);
  float height = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetHeight'", NULL);
#endif
  {
   self->SetHeight(height);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetHeight of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_GetHeight00
static int tolua_PX2_SizeNode_GetHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SizeNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SizeNode* self = (const SizeNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetHeight'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPivot of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_SetPivot00
static int tolua_PX2_SizeNode_SetPivot00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SizeNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SizeNode* self = (SizeNode*)  tolua_tousertype(tolua_S,1,0);
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPivot'", NULL);
#endif
  {
   self->SetPivot(x,y);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPivot'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPivot of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_SetPivot01
static int tolua_PX2_SizeNode_SetPivot01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SizeNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SizeNode* self = (SizeNode*)  tolua_tousertype(tolua_S,1,0);
  const Float2* pvoit = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPivot'", NULL);
#endif
  {
   self->SetPivot(*pvoit);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_SizeNode_SetPivot00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPivot of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_GetPivot00
static int tolua_PX2_SizeNode_GetPivot00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SizeNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SizeNode* self = (const SizeNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPivot'", NULL);
#endif
  {
   const Float2& tolua_ret = (const Float2&)  self->GetPivot();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPivot'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: EnableAnchorLayout of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_EnableAnchorLayout00
static int tolua_PX2_SizeNode_EnableAnchorLayout00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SizeNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SizeNode* self = (SizeNode*)  tolua_tousertype(tolua_S,1,0);
  bool enable = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'EnableAnchorLayout'", NULL);
#endif
  {
   self->EnableAnchorLayout(enable);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'EnableAnchorLayout'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsAnchorLayoutEnable of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_IsAnchorLayoutEnable00
static int tolua_PX2_SizeNode_IsAnchorLayoutEnable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SizeNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SizeNode* self = (const SizeNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsAnchorLayoutEnable'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsAnchorLayoutEnable();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsAnchorLayoutEnable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAnchorHor of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_SetAnchorHor00
static int tolua_PX2_SizeNode_SetAnchorHor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SizeNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SizeNode* self = (SizeNode*)  tolua_tousertype(tolua_S,1,0);
  float anchorX = ((float)  tolua_tonumber(tolua_S,2,0));
  float anchorY = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAnchorHor'", NULL);
#endif
  {
   self->SetAnchorHor(anchorX,anchorY);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAnchorHor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAnchorHor of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_SetAnchorHor01
static int tolua_PX2_SizeNode_SetAnchorHor01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SizeNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SizeNode* self = (SizeNode*)  tolua_tousertype(tolua_S,1,0);
  const Float2* anchor = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAnchorHor'", NULL);
#endif
  {
   self->SetAnchorHor(*anchor);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_SizeNode_SetAnchorHor00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorHor of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_GetAnchorHor00
static int tolua_PX2_SizeNode_GetAnchorHor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SizeNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SizeNode* self = (const SizeNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorHor'", NULL);
#endif
  {
   const Float2& tolua_ret = (const Float2&)  self->GetAnchorHor();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorHor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAnchorParamHor of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_SetAnchorParamHor00
static int tolua_PX2_SizeNode_SetAnchorParamHor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SizeNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SizeNode* self = (SizeNode*)  tolua_tousertype(tolua_S,1,0);
  float param0 = ((float)  tolua_tonumber(tolua_S,2,0));
  float param1 = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAnchorParamHor'", NULL);
#endif
  {
   self->SetAnchorParamHor(param0,param1);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAnchorParamHor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAnchorParamHor of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_SetAnchorParamHor01
static int tolua_PX2_SizeNode_SetAnchorParamHor01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SizeNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SizeNode* self = (SizeNode*)  tolua_tousertype(tolua_S,1,0);
  const Float2* param = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAnchorParamHor'", NULL);
#endif
  {
   self->SetAnchorParamHor(*param);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_SizeNode_SetAnchorParamHor00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorParamHor of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_GetAnchorParamHor00
static int tolua_PX2_SizeNode_GetAnchorParamHor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SizeNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SizeNode* self = (const SizeNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorParamHor'", NULL);
#endif
  {
   const Float2& tolua_ret = (const Float2&)  self->GetAnchorParamHor();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorParamHor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAnchorVer of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_SetAnchorVer00
static int tolua_PX2_SizeNode_SetAnchorVer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SizeNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SizeNode* self = (SizeNode*)  tolua_tousertype(tolua_S,1,0);
  float anchorX = ((float)  tolua_tonumber(tolua_S,2,0));
  float anchorY = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAnchorVer'", NULL);
#endif
  {
   self->SetAnchorVer(anchorX,anchorY);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAnchorVer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAnchorVer of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_SetAnchorVer01
static int tolua_PX2_SizeNode_SetAnchorVer01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SizeNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SizeNode* self = (SizeNode*)  tolua_tousertype(tolua_S,1,0);
  const Float2* anchor = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAnchorVer'", NULL);
#endif
  {
   self->SetAnchorVer(*anchor);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_SizeNode_SetAnchorVer00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorVer of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_GetAnchorVer00
static int tolua_PX2_SizeNode_GetAnchorVer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SizeNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SizeNode* self = (const SizeNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorVer'", NULL);
#endif
  {
   const Float2& tolua_ret = (const Float2&)  self->GetAnchorVer();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorVer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAnchorParamVer of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_SetAnchorParamVer00
static int tolua_PX2_SizeNode_SetAnchorParamVer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SizeNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SizeNode* self = (SizeNode*)  tolua_tousertype(tolua_S,1,0);
  float param0 = ((float)  tolua_tonumber(tolua_S,2,0));
  float param1 = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAnchorParamVer'", NULL);
#endif
  {
   self->SetAnchorParamVer(param0,param1);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAnchorParamVer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAnchorParamVer of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_SetAnchorParamVer01
static int tolua_PX2_SizeNode_SetAnchorParamVer01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SizeNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  SizeNode* self = (SizeNode*)  tolua_tousertype(tolua_S,1,0);
  const Float2* param = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAnchorParamVer'", NULL);
#endif
  {
   self->SetAnchorParamVer(*param);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_SizeNode_SetAnchorParamVer00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorParamVer of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_GetAnchorParamVer00
static int tolua_PX2_SizeNode_GetAnchorParamVer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SizeNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SizeNode* self = (const SizeNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorParamVer'", NULL);
#endif
  {
   const Float2& tolua_ret = (const Float2&)  self->GetAnchorParamVer();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorParamVer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetWidget of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_SetWidget00
static int tolua_PX2_SizeNode_SetWidget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SizeNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SizeNode* self = (SizeNode*)  tolua_tousertype(tolua_S,1,0);
  bool isWidget = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetWidget'", NULL);
#endif
  {
   self->SetWidget(isWidget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetWidget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsWidget of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_IsWidget00
static int tolua_PX2_SizeNode_IsWidget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SizeNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SizeNode* self = (const SizeNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsWidget'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsWidget();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsWidget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSelfPickSizeExtend of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_SetSelfPickSizeExtend00
static int tolua_PX2_SizeNode_SetSelfPickSizeExtend00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SizeNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SizeNode* self = (SizeNode*)  tolua_tousertype(tolua_S,1,0);
  const Float2* extend = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSelfPickSizeExtend'", NULL);
#endif
  {
   self->SetSelfPickSizeExtend(*extend);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSelfPickSizeExtend'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSelfPickSizeExtend of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_GetSelfPickSizeExtend00
static int tolua_PX2_SizeNode_GetSelfPickSizeExtend00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SizeNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SizeNode* self = (const SizeNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSelfPickSizeExtend'", NULL);
#endif
  {
   const Float2& tolua_ret = (const Float2&)  self->GetSelfPickSizeExtend();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSelfPickSizeExtend'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetChildPickOnlyInSizeRange of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_SetChildPickOnlyInSizeRange00
static int tolua_PX2_SizeNode_SetChildPickOnlyInSizeRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SizeNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SizeNode* self = (SizeNode*)  tolua_tousertype(tolua_S,1,0);
  bool onlyInRange = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetChildPickOnlyInSizeRange'", NULL);
#endif
  {
   self->SetChildPickOnlyInSizeRange(onlyInRange);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetChildPickOnlyInSizeRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsChildPickOnlyInSizeRange of class  SizeNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SizeNode_IsChildPickOnlyInSizeRange00
static int tolua_PX2_SizeNode_IsChildPickOnlyInSizeRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SizeNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SizeNode* self = (const SizeNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsChildPickOnlyInSizeRange'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsChildPickOnlyInSizeRange();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsChildPickOnlyInSizeRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  SwitchNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SwitchNode_new00
static int tolua_PX2_SwitchNode_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SwitchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SwitchNode* tolua_ret = (SwitchNode*)  Mtolua_new((SwitchNode)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SwitchNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  SwitchNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SwitchNode_new00_local
static int tolua_PX2_SwitchNode_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SwitchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SwitchNode* tolua_ret = (SwitchNode*)  Mtolua_new((SwitchNode)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SwitchNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  SwitchNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SwitchNode_delete00
static int tolua_PX2_SwitchNode_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SwitchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SwitchNode* self = (SwitchNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Create of class  SwitchNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SwitchNode_Create00
static int tolua_PX2_SwitchNode_Create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SwitchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SwitchNode* tolua_ret = (SwitchNode*)  SwitchNode::Create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SwitchNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetActiveChild of class  SwitchNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SwitchNode_SetActiveChild00
static int tolua_PX2_SwitchNode_SetActiveChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SwitchNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SwitchNode* self = (SwitchNode*)  tolua_tousertype(tolua_S,1,0);
  int activeChild = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetActiveChild'", NULL);
#endif
  {
   self->SetActiveChild(activeChild);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetActiveChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetActiveChild of class  SwitchNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SwitchNode_GetActiveChild00
static int tolua_PX2_SwitchNode_GetActiveChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SwitchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SwitchNode* self = (const SwitchNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetActiveChild'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetActiveChild();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetActiveChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DisableAllChildren of class  SwitchNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SwitchNode_DisableAllChildren00
static int tolua_PX2_SwitchNode_DisableAllChildren00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SwitchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SwitchNode* self = (SwitchNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DisableAllChildren'", NULL);
#endif
  {
   self->DisableAllChildren();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DisableAllChildren'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_new00
static int tolua_PX2_Camera_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Camera",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  bool isPerspective = ((bool)  tolua_toboolean(tolua_S,2,0));
  {
   Camera* tolua_ret = (Camera*)  Mtolua_new((Camera)(isPerspective));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Camera");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_new00_local
static int tolua_PX2_Camera_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Camera",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  bool isPerspective = ((bool)  tolua_toboolean(tolua_S,2,0));
  {
   Camera* tolua_ret = (Camera*)  Mtolua_new((Camera)(isPerspective));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Camera");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_delete00
static int tolua_PX2_Camera_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Camera* self = (Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCameraNode of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_SetCameraNode00
static int tolua_PX2_Camera_SetCameraNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Camera",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CameraNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Camera* self = (Camera*)  tolua_tousertype(tolua_S,1,0);
  CameraNode* camNode = ((CameraNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCameraNode'", NULL);
#endif
  {
   self->SetCameraNode(camNode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCameraNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCameraNode of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetCameraNode00
static int tolua_PX2_Camera_GetCameraNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Camera* self = (Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCameraNode'", NULL);
#endif
  {
   CameraNode* tolua_ret = (CameraNode*)  self->GetCameraNode();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CameraNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCameraNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFrame of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_SetFrame00
static int tolua_PX2_Camera_SetFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Camera",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const AVector",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const AVector",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Camera* self = (Camera*)  tolua_tousertype(tolua_S,1,0);
  const APoint* position = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
  const AVector* dVector = ((const AVector*)  tolua_tousertype(tolua_S,3,0));
  const AVector* uVector = ((const AVector*)  tolua_tousertype(tolua_S,4,0));
  const AVector* rVector = ((const AVector*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFrame'", NULL);
#endif
  {
   self->SetFrame(*position,*dVector,*uVector,*rVector);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPosition of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_SetPosition00
static int tolua_PX2_Camera_SetPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Camera",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Camera* self = (Camera*)  tolua_tousertype(tolua_S,1,0);
  const APoint* position = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPosition'", NULL);
#endif
  {
   self->SetPosition(*position);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAxes of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_SetAxes00
static int tolua_PX2_Camera_SetAxes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Camera",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const AVector",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Camera* self = (Camera*)  tolua_tousertype(tolua_S,1,0);
  const AVector* dVector = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
  const AVector* uVector = ((const AVector*)  tolua_tousertype(tolua_S,3,0));
  const AVector* rVector = ((const AVector*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAxes'", NULL);
#endif
  {
   self->SetAxes(*dVector,*uVector,*rVector);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAxes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPosition of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetPosition00
static int tolua_PX2_Camera_GetPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPosition'", NULL);
#endif
  {
   APoint tolua_ret = (APoint)  self->GetPosition();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((APoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(APoint));
     tolua_pushusertype(tolua_S,tolua_obj,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDVector of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetDVector00
static int tolua_PX2_Camera_GetDVector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDVector'", NULL);
#endif
  {
   AVector tolua_ret = (AVector)  self->GetDVector();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((AVector)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(AVector));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDVector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUVector of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetUVector00
static int tolua_PX2_Camera_GetUVector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUVector'", NULL);
#endif
  {
   AVector tolua_ret = (AVector)  self->GetUVector();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((AVector)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(AVector));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUVector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRVector of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetRVector00
static int tolua_PX2_Camera_GetRVector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRVector'", NULL);
#endif
  {
   AVector tolua_ret = (AVector)  self->GetRVector();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((AVector)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(AVector));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRVector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetViewMatrix of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetViewMatrix00
static int tolua_PX2_Camera_GetViewMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetViewMatrix'", NULL);
#endif
  {
   const HMatrix& tolua_ret = (const HMatrix&)  self->GetViewMatrix();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const HMatrix");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetViewMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPerspective of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_SetPerspective00
static int tolua_PX2_Camera_SetPerspective00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Camera",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Camera* self = (Camera*)  tolua_tousertype(tolua_S,1,0);
  bool per = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPerspective'", NULL);
#endif
  {
   self->SetPerspective(per);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPerspective'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsPerspective of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_IsPerspective00
static int tolua_PX2_Camera_IsPerspective00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsPerspective'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsPerspective();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsPerspective'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFrustum of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_SetFrustum00
static int tolua_PX2_Camera_SetFrustum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Camera",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Camera* self = (Camera*)  tolua_tousertype(tolua_S,1,0);
  float dMin = ((float)  tolua_tonumber(tolua_S,2,0));
  float dMax = ((float)  tolua_tonumber(tolua_S,3,0));
  float uMin = ((float)  tolua_tonumber(tolua_S,4,0));
  float uMax = ((float)  tolua_tonumber(tolua_S,5,0));
  float rMin = ((float)  tolua_tonumber(tolua_S,6,0));
  float rMax = ((float)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFrustum'", NULL);
#endif
  {
   self->SetFrustum(dMin,dMax,uMin,uMax,rMin,rMax);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFrustum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFrustum of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_SetFrustum01
static int tolua_PX2_Camera_SetFrustum01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Camera",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Camera* self = (Camera*)  tolua_tousertype(tolua_S,1,0);
  float upFovDegrees = ((float)  tolua_tonumber(tolua_S,2,0));
  float aspectRatio = ((float)  tolua_tonumber(tolua_S,3,0));
  float dMin = ((float)  tolua_tonumber(tolua_S,4,0));
  float dMax = ((float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFrustum'", NULL);
#endif
  {
   self->SetFrustum(upFovDegrees,aspectRatio,dMin,dMax);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Camera_SetFrustum00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFrustum of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetFrustum00
static int tolua_PX2_Camera_GetFrustum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
  float dMin = ((float)  tolua_tonumber(tolua_S,2,0));
  float dMax = ((float)  tolua_tonumber(tolua_S,3,0));
  float uMin = ((float)  tolua_tonumber(tolua_S,4,0));
  float uMax = ((float)  tolua_tonumber(tolua_S,5,0));
  float rMin = ((float)  tolua_tonumber(tolua_S,6,0));
  float rMax = ((float)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFrustum'", NULL);
#endif
  {
   self->GetFrustum(dMin,dMax,uMin,uMax,rMin,rMax);
   tolua_pushnumber(tolua_S,(lua_Number)dMin);
   tolua_pushnumber(tolua_S,(lua_Number)dMax);
   tolua_pushnumber(tolua_S,(lua_Number)uMin);
   tolua_pushnumber(tolua_S,(lua_Number)uMax);
   tolua_pushnumber(tolua_S,(lua_Number)rMin);
   tolua_pushnumber(tolua_S,(lua_Number)rMax);
  }
 }
 return 6;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFrustum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFrustum of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetFrustum01
static int tolua_PX2_Camera_GetFrustum01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
  float upFovDegrees = ((float)  tolua_tonumber(tolua_S,2,0));
  float aspectRatio = ((float)  tolua_tonumber(tolua_S,3,0));
  float dMin = ((float)  tolua_tonumber(tolua_S,4,0));
  float dMax = ((float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFrustum'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->GetFrustum(upFovDegrees,aspectRatio,dMin,dMax);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)upFovDegrees);
   tolua_pushnumber(tolua_S,(lua_Number)aspectRatio);
   tolua_pushnumber(tolua_S,(lua_Number)dMin);
   tolua_pushnumber(tolua_S,(lua_Number)dMax);
  }
 }
 return 5;
tolua_lerror:
 return tolua_PX2_Camera_GetFrustum00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDMin of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetDMin00
static int tolua_PX2_Camera_GetDMin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDMin'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetDMin();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDMin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDMax of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetDMax00
static int tolua_PX2_Camera_GetDMax00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDMax'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetDMax();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDMax'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUMin of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetUMin00
static int tolua_PX2_Camera_GetUMin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUMin'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetUMin();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUMin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUMax of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetUMax00
static int tolua_PX2_Camera_GetUMax00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUMax'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetUMax();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUMax'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRMin of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetRMin00
static int tolua_PX2_Camera_GetRMin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRMin'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetRMin();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRMin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRMax of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetRMax00
static int tolua_PX2_Camera_GetRMax00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRMax'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetRMax();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRMax'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDepthType of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetDepthType00
static int tolua_PX2_Camera_GetDepthType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDepthType'", NULL);
#endif
  {
   Camera::DepthType tolua_ret = (Camera::DepthType)  self->GetDepthType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDepthType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProjectionMatrix of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetProjectionMatrix00
static int tolua_PX2_Camera_GetProjectionMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProjectionMatrix'", NULL);
#endif
  {
   const HMatrix& tolua_ret = (const HMatrix&)  self->GetProjectionMatrix();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const HMatrix");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProjectionMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProjectionViewMatrix of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetProjectionViewMatrix00
static int tolua_PX2_Camera_GetProjectionViewMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProjectionViewMatrix'", NULL);
#endif
  {
   const HMatrix& tolua_ret = (const HMatrix&)  self->GetProjectionViewMatrix();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const HMatrix");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProjectionViewMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPreViewMatrix of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_SetPreViewMatrix00
static int tolua_PX2_Camera_SetPreViewMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Camera",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const HMatrix",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Camera* self = (Camera*)  tolua_tousertype(tolua_S,1,0);
  const HMatrix* preViewMatrix = ((const HMatrix*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPreViewMatrix'", NULL);
#endif
  {
   self->SetPreViewMatrix(*preViewMatrix);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPreViewMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPreViewMatrix of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetPreViewMatrix00
static int tolua_PX2_Camera_GetPreViewMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPreViewMatrix'", NULL);
#endif
  {
   const HMatrix& tolua_ret = (const HMatrix&)  self->GetPreViewMatrix();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const HMatrix");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPreViewMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: PreViewIsIdentity of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_PreViewIsIdentity00
static int tolua_PX2_Camera_PreViewIsIdentity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'PreViewIsIdentity'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->PreViewIsIdentity();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'PreViewIsIdentity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPostProjectionMatrix of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_SetPostProjectionMatrix00
static int tolua_PX2_Camera_SetPostProjectionMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Camera",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const HMatrix",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Camera* self = (Camera*)  tolua_tousertype(tolua_S,1,0);
  const HMatrix* postProjMatrix = ((const HMatrix*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPostProjectionMatrix'", NULL);
#endif
  {
   self->SetPostProjectionMatrix(*postProjMatrix);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPostProjectionMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPostProjectionMatrix of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetPostProjectionMatrix00
static int tolua_PX2_Camera_GetPostProjectionMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPostProjectionMatrix'", NULL);
#endif
  {
   const HMatrix& tolua_ret = (const HMatrix&)  self->GetPostProjectionMatrix();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const HMatrix");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPostProjectionMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: PostProjectionIsIdentity of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_PostProjectionIsIdentity00
static int tolua_PX2_Camera_PostProjectionIsIdentity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'PostProjectionIsIdentity'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->PostProjectionIsIdentity();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'PostProjectionIsIdentity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetClearColor of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_SetClearColor00
static int tolua_PX2_Camera_SetClearColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Camera",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float4",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Camera* self = (Camera*)  tolua_tousertype(tolua_S,1,0);
  const Float4* color = ((const Float4*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetClearColor'", NULL);
#endif
  {
   self->SetClearColor(*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetClearColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetClearColor of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetClearColor00
static int tolua_PX2_Camera_GetClearColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetClearColor'", NULL);
#endif
  {
   const Float4& tolua_ret = (const Float4&)  self->GetClearColor();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float4");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetClearColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetClearDepth of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_SetClearDepth00
static int tolua_PX2_Camera_SetClearDepth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Camera",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Camera* self = (Camera*)  tolua_tousertype(tolua_S,1,0);
  float depth = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetClearDepth'", NULL);
#endif
  {
   self->SetClearDepth(depth);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetClearDepth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetClearDepth of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetClearDepth00
static int tolua_PX2_Camera_GetClearDepth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetClearDepth'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetClearDepth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetClearDepth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetClearStencil of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_SetClearStencil00
static int tolua_PX2_Camera_SetClearStencil00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Camera",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Camera* self = (Camera*)  tolua_tousertype(tolua_S,1,0);
  unsigned int stencil = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetClearStencil'", NULL);
#endif
  {
   self->SetClearStencil(stencil);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetClearStencil'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetClearStencil of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetClearStencil00
static int tolua_PX2_Camera_GetClearStencil00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetClearStencil'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->GetClearStencil();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetClearStencil'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetClearFlag of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_SetClearFlag00
static int tolua_PX2_Camera_SetClearFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Camera",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Camera* self = (Camera*)  tolua_tousertype(tolua_S,1,0);
  bool color = ((bool)  tolua_toboolean(tolua_S,2,0));
  bool depth = ((bool)  tolua_toboolean(tolua_S,3,0));
  bool stencil = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetClearFlag'", NULL);
#endif
  {
   self->SetClearFlag(color,depth,stencil);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetClearFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetClearFlag of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetClearFlag00
static int tolua_PX2_Camera_GetClearFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Camera",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Camera* self = (Camera*)  tolua_tousertype(tolua_S,1,0);
  bool color = ((bool)  tolua_toboolean(tolua_S,2,0));
  bool depth = ((bool)  tolua_toboolean(tolua_S,3,0));
  bool stencil = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetClearFlag'", NULL);
#endif
  {
   self->GetClearFlag(color,depth,stencil);
   tolua_pushboolean(tolua_S,(bool)color);
   tolua_pushboolean(tolua_S,(bool)depth);
   tolua_pushboolean(tolua_S,(bool)stencil);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetClearFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CameraNode */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraNode_new00
static int tolua_PX2_CameraNode_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CameraNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Camera",1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Camera* camera = ((Camera*)  tolua_tousertype(tolua_S,2,0));
  {
   CameraNode* tolua_ret = (CameraNode*)  Mtolua_new((CameraNode)(camera));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CameraNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CameraNode */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraNode_new00_local
static int tolua_PX2_CameraNode_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CameraNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Camera",1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Camera* camera = ((Camera*)  tolua_tousertype(tolua_S,2,0));
  {
   CameraNode* tolua_ret = (CameraNode*)  Mtolua_new((CameraNode)(camera));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CameraNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CameraNode */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraNode_delete00
static int tolua_PX2_CameraNode_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CameraNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CameraNode* self = (CameraNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCamera of class  CameraNode */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraNode_SetCamera00
static int tolua_PX2_CameraNode_SetCamera00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CameraNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Camera",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CameraNode* self = (CameraNode*)  tolua_tousertype(tolua_S,1,0);
  Camera* camera = ((Camera*)  tolua_tousertype(tolua_S,2,0));
  bool initFromCamera = ((bool)  tolua_toboolean(tolua_S,3,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCamera'", NULL);
#endif
  {
   self->SetCamera(camera,initFromCamera);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCamera'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCamera of class  CameraNode */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraNode_GetCamera00
static int tolua_PX2_CameraNode_GetCamera00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CameraNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CameraNode* self = (CameraNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCamera'", NULL);
#endif
  {
   Camera* tolua_ret = (Camera*)  self->GetCamera();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Camera");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCamera'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: EnableUpdate of class  CameraNode */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraNode_EnableUpdate00
static int tolua_PX2_CameraNode_EnableUpdate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CameraNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CameraNode* self = (CameraNode*)  tolua_tousertype(tolua_S,1,0);
  bool enable = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'EnableUpdate'", NULL);
#endif
  {
   self->EnableUpdate(enable);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'EnableUpdate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsEnableUpdate of class  CameraNode */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraNode_IsEnableUpdate00
static int tolua_PX2_CameraNode_IsEnableUpdate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CameraNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CameraNode* self = (CameraNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsEnableUpdate'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsEnableUpdate();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsEnableUpdate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LookAt of class  CameraNode */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraNode_LookAt00
static int tolua_PX2_CameraNode_LookAt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CameraNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CameraNode* self = (CameraNode*)  tolua_tousertype(tolua_S,1,0);
  const APoint* pos = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LookAt'", NULL);
#endif
  {
   self->LookAt(*pos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LookAt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LookAt of class  CameraNode */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraNode_LookAt01
static int tolua_PX2_CameraNode_LookAt01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CameraNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CameraNode* self = (CameraNode*)  tolua_tousertype(tolua_S,1,0);
  const APoint* pos = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
  const AVector* up = ((const AVector*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LookAt'", NULL);
#endif
  {
   self->LookAt(*pos,*up);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_CameraNode_LookAt00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: LookAt of class  CameraNode */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraNode_LookAt02
static int tolua_PX2_CameraNode_LookAt02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CameraNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Movable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CameraNode* self = (CameraNode*)  tolua_tousertype(tolua_S,1,0);
  const Movable* mov = ((const Movable*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LookAt'", NULL);
#endif
  {
   self->LookAt(mov);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_CameraNode_LookAt01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: LookAt of class  CameraNode */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraNode_LookAt03
static int tolua_PX2_CameraNode_LookAt03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CameraNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Movable",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CameraNode* self = (CameraNode*)  tolua_tousertype(tolua_S,1,0);
  const Movable* mov = ((const Movable*)  tolua_tousertype(tolua_S,2,0));
  const AVector* up = ((const AVector*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LookAt'", NULL);
#endif
  {
   self->LookAt(mov,*up);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_CameraNode_LookAt02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWidth of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetWidth00
static int tolua_PX2_Renderer_GetWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWidth'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetWidth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetHeight of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetHeight00
static int tolua_PX2_Renderer_GetHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetHeight'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumMultisamples of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetNumMultisamples00
static int tolua_PX2_Renderer_GetNumMultisamples00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumMultisamples'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumMultisamples();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumMultisamples'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Canvas */
#ifndef TOLUA_DISABLE_tolua_PX2_Canvas_new00
static int tolua_PX2_Canvas_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Canvas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Canvas* tolua_ret = (Canvas*)  Mtolua_new((Canvas)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Canvas");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Canvas */
#ifndef TOLUA_DISABLE_tolua_PX2_Canvas_new00_local
static int tolua_PX2_Canvas_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Canvas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Canvas* tolua_ret = (Canvas*)  Mtolua_new((Canvas)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Canvas");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Canvas */
#ifndef TOLUA_DISABLE_tolua_PX2_Canvas_delete00
static int tolua_PX2_Canvas_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Canvas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Canvas* self = (Canvas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  Canvas */
#ifndef TOLUA_DISABLE_tolua_PX2_Canvas_New00
static int tolua_PX2_Canvas_New00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Canvas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Canvas* tolua_ret = (Canvas*)  Canvas::New();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Canvas");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'New'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  Canvas */
#ifndef TOLUA_DISABLE_tolua_PX2_Canvas_New01
static int tolua_PX2_Canvas_New01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Canvas",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Canvas* tolua_ret = (Canvas*)  Canvas::New(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Canvas");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_Canvas_New00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateUICameraNode of class  Canvas */
#ifndef TOLUA_DISABLE_tolua_PX2_Canvas_CreateUICameraNode00
static int tolua_PX2_Canvas_CreateUICameraNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Canvas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Canvas* self = (Canvas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateUICameraNode'", NULL);
#endif
  {
   self->CreateUICameraNode();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateUICameraNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUICameraNode of class  Canvas */
#ifndef TOLUA_DISABLE_tolua_PX2_Canvas_GetUICameraNode00
static int tolua_PX2_Canvas_GetUICameraNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Canvas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Canvas* self = (Canvas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUICameraNode'", NULL);
#endif
  {
   CameraNode* tolua_ret = (CameraNode*)  self->GetUICameraNode();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CameraNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUICameraNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetClearColor of class  Canvas */
#ifndef TOLUA_DISABLE_tolua_PX2_Canvas_SetClearColor00
static int tolua_PX2_Canvas_SetClearColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Canvas",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float4",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Canvas* self = (Canvas*)  tolua_tousertype(tolua_S,1,0);
  const Float4* color = ((const Float4*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetClearColor'", NULL);
#endif
  {
   self->SetClearColor(*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetClearColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetClearColor of class  Canvas */
#ifndef TOLUA_DISABLE_tolua_PX2_Canvas_GetClearColor00
static int tolua_PX2_Canvas_GetClearColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Canvas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Canvas* self = (const Canvas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetClearColor'", NULL);
#endif
  {
   const Float4& tolua_ret = (const Float4&)  self->GetClearColor();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float4");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetClearColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetClearDepth of class  Canvas */
#ifndef TOLUA_DISABLE_tolua_PX2_Canvas_SetClearDepth00
static int tolua_PX2_Canvas_SetClearDepth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Canvas",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Canvas* self = (Canvas*)  tolua_tousertype(tolua_S,1,0);
  float depth = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetClearDepth'", NULL);
#endif
  {
   self->SetClearDepth(depth);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetClearDepth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetClearDepth of class  Canvas */
#ifndef TOLUA_DISABLE_tolua_PX2_Canvas_GetClearDepth00
static int tolua_PX2_Canvas_GetClearDepth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Canvas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Canvas* self = (const Canvas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetClearDepth'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetClearDepth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetClearDepth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetClearStencil of class  Canvas */
#ifndef TOLUA_DISABLE_tolua_PX2_Canvas_SetClearStencil00
static int tolua_PX2_Canvas_SetClearStencil00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Canvas",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Canvas* self = (Canvas*)  tolua_tousertype(tolua_S,1,0);
  unsigned int stencil = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetClearStencil'", NULL);
#endif
  {
   self->SetClearStencil(stencil);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetClearStencil'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetClearStencil of class  Canvas */
#ifndef TOLUA_DISABLE_tolua_PX2_Canvas_GetClearStencil00
static int tolua_PX2_Canvas_GetClearStencil00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Canvas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Canvas* self = (const Canvas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetClearStencil'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->GetClearStencil();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetClearStencil'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetClearFlag of class  Canvas */
#ifndef TOLUA_DISABLE_tolua_PX2_Canvas_SetClearFlag00
static int tolua_PX2_Canvas_SetClearFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Canvas",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Canvas* self = (Canvas*)  tolua_tousertype(tolua_S,1,0);
  bool color = ((bool)  tolua_toboolean(tolua_S,2,0));
  bool depth = ((bool)  tolua_toboolean(tolua_S,3,0));
  bool stencil = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetClearFlag'", NULL);
#endif
  {
   self->SetClearFlag(color,depth,stencil);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetClearFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetClearFlag of class  Canvas */
#ifndef TOLUA_DISABLE_tolua_PX2_Canvas_GetClearFlag00
static int tolua_PX2_Canvas_GetClearFlag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Canvas",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Canvas* self = (Canvas*)  tolua_tousertype(tolua_S,1,0);
  bool color = ((bool)  tolua_toboolean(tolua_S,2,0));
  bool depth = ((bool)  tolua_toboolean(tolua_S,3,0));
  bool stencil = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetClearFlag'", NULL);
#endif
  {
   self->GetClearFlag(color,depth,stencil);
   tolua_pushboolean(tolua_S,(bool)color);
   tolua_pushboolean(tolua_S,(bool)depth);
   tolua_pushboolean(tolua_S,(bool)stencil);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetClearFlag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetOverWireframe of class  Canvas */
#ifndef TOLUA_DISABLE_tolua_PX2_Canvas_SetOverWireframe00
static int tolua_PX2_Canvas_SetOverWireframe00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Canvas",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Canvas* self = (Canvas*)  tolua_tousertype(tolua_S,1,0);
  bool wireframe = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetOverWireframe'", NULL);
#endif
  {
   self->SetOverWireframe(wireframe);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetOverWireframe'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsOverWireframe of class  Canvas */
#ifndef TOLUA_DISABLE_tolua_PX2_Canvas_IsOverWireframe00
static int tolua_PX2_Canvas_IsOverWireframe00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Canvas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Canvas* self = (const Canvas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsOverWireframe'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsOverWireframe();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsOverWireframe'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_PX2_TexPackElement_new00
static int tolua_PX2_TexPackElement_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TexPackElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TexPackElement* tolua_ret = (TexPackElement*)  Mtolua_new((TexPackElement)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TexPackElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_PX2_TexPackElement_new00_local
static int tolua_PX2_TexPackElement_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TexPackElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TexPackElement* tolua_ret = (TexPackElement*)  Mtolua_new((TexPackElement)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TexPackElement");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_PX2_TexPackElement_delete00
static int tolua_PX2_TexPackElement_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TexPackElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TexPackElement* self = (TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsValid of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_PX2_TexPackElement_IsValid00
static int tolua_PX2_TexPackElement_IsValid00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const TexPackElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const TexPackElement* self = (const TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsValid'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsValid();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsValid'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: X of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_get_TexPackElement_X
static int tolua_get_TexPackElement_X(lua_State* tolua_S)
{
  TexPackElement* self = (TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'X'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->X);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: X of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_set_TexPackElement_X
static int tolua_set_TexPackElement_X(lua_State* tolua_S)
{
  TexPackElement* self = (TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'X'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->X = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Y of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_get_TexPackElement_Y
static int tolua_get_TexPackElement_Y(lua_State* tolua_S)
{
  TexPackElement* self = (TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Y'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Y);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Y of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_set_TexPackElement_Y
static int tolua_set_TexPackElement_Y(lua_State* tolua_S)
{
  TexPackElement* self = (TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Y'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Y = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: W of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_get_TexPackElement_W
static int tolua_get_TexPackElement_W(lua_State* tolua_S)
{
  TexPackElement* self = (TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'W'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->W);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: W of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_set_TexPackElement_W
static int tolua_set_TexPackElement_W(lua_State* tolua_S)
{
  TexPackElement* self = (TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'W'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->W = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: H of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_get_TexPackElement_H
static int tolua_get_TexPackElement_H(lua_State* tolua_S)
{
  TexPackElement* self = (TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'H'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->H);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: H of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_set_TexPackElement_H
static int tolua_set_TexPackElement_H(lua_State* tolua_S)
{
  TexPackElement* self = (TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'H'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->H = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: OX of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_get_TexPackElement_OX
static int tolua_get_TexPackElement_OX(lua_State* tolua_S)
{
  TexPackElement* self = (TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'OX'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->OX);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: OX of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_set_TexPackElement_OX
static int tolua_set_TexPackElement_OX(lua_State* tolua_S)
{
  TexPackElement* self = (TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'OX'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->OX = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: OY of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_get_TexPackElement_OY
static int tolua_get_TexPackElement_OY(lua_State* tolua_S)
{
  TexPackElement* self = (TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'OY'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->OY);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: OY of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_set_TexPackElement_OY
static int tolua_set_TexPackElement_OY(lua_State* tolua_S)
{
  TexPackElement* self = (TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'OY'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->OY = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: OW of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_get_TexPackElement_OW
static int tolua_get_TexPackElement_OW(lua_State* tolua_S)
{
  TexPackElement* self = (TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'OW'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->OW);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: OW of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_set_TexPackElement_OW
static int tolua_set_TexPackElement_OW(lua_State* tolua_S)
{
  TexPackElement* self = (TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'OW'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->OW = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: OH of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_get_TexPackElement_OH
static int tolua_get_TexPackElement_OH(lua_State* tolua_S)
{
  TexPackElement* self = (TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'OH'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->OH);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: OH of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_set_TexPackElement_OH
static int tolua_set_TexPackElement_OH(lua_State* tolua_S)
{
  TexPackElement* self = (TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'OH'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->OH = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Rolated of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_get_TexPackElement_Rolated
static int tolua_get_TexPackElement_Rolated(lua_State* tolua_S)
{
  TexPackElement* self = (TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Rolated'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->Rolated);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Rolated of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_set_TexPackElement_Rolated
static int tolua_set_TexPackElement_Rolated(lua_State* tolua_S)
{
  TexPackElement* self = (TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Rolated'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Rolated = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TexWidth of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_get_TexPackElement_TexWidth
static int tolua_get_TexPackElement_TexWidth(lua_State* tolua_S)
{
  TexPackElement* self = (TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TexWidth'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->TexWidth);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TexWidth of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_set_TexPackElement_TexWidth
static int tolua_set_TexPackElement_TexWidth(lua_State* tolua_S)
{
  TexPackElement* self = (TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TexWidth'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TexWidth = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TexHeight of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_get_TexPackElement_TexHeight
static int tolua_get_TexPackElement_TexHeight(lua_State* tolua_S)
{
  TexPackElement* self = (TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TexHeight'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->TexHeight);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TexHeight of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_set_TexPackElement_TexHeight
static int tolua_set_TexPackElement_TexHeight(lua_State* tolua_S)
{
  TexPackElement* self = (TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TexHeight'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TexHeight = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ElementName of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_get_TexPackElement_ElementName
static int tolua_get_TexPackElement_ElementName(lua_State* tolua_S)
{
  TexPackElement* self = (TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ElementName'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->ElementName);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ElementName of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_set_TexPackElement_ElementName
static int tolua_set_TexPackElement_ElementName(lua_State* tolua_S)
{
  TexPackElement* self = (TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ElementName'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ElementName = ((std::string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ImagePathFull of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_get_TexPackElement_ImagePathFull
static int tolua_get_TexPackElement_ImagePathFull(lua_State* tolua_S)
{
  TexPackElement* self = (TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ImagePathFull'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->ImagePathFull);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ImagePathFull of class  TexPackElement */
#ifndef TOLUA_DISABLE_tolua_set_TexPackElement_ImagePathFull
static int tolua_set_TexPackElement_ImagePathFull(lua_State* tolua_S)
{
  TexPackElement* self = (TexPackElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ImagePathFull'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ImagePathFull = ((std::string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  TexPack */
#ifndef TOLUA_DISABLE_tolua_PX2_TexPack_new00
static int tolua_PX2_TexPack_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TexPack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TexPack* tolua_ret = (TexPack*)  Mtolua_new((TexPack)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TexPack");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  TexPack */
#ifndef TOLUA_DISABLE_tolua_PX2_TexPack_new00_local
static int tolua_PX2_TexPack_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TexPack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TexPack* tolua_ret = (TexPack*)  Mtolua_new((TexPack)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TexPack");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  TexPack */
#ifndef TOLUA_DISABLE_tolua_PX2_TexPack_delete00
static int tolua_PX2_TexPack_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TexPack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TexPack* self = (TexPack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsValid of class  TexPack */
#ifndef TOLUA_DISABLE_tolua_PX2_TexPack_IsValid00
static int tolua_PX2_TexPack_IsValid00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const TexPack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const TexPack* self = (const TexPack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsValid'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsValid();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsValid'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ImageFullPath of class  TexPack */
#ifndef TOLUA_DISABLE_tolua_get_TexPack_ImageFullPath
static int tolua_get_TexPack_ImageFullPath(lua_State* tolua_S)
{
  TexPack* self = (TexPack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ImageFullPath'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->ImageFullPath);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ImageFullPath of class  TexPack */
#ifndef TOLUA_DISABLE_tolua_set_TexPack_ImageFullPath
static int tolua_set_TexPack_ImageFullPath(lua_State* tolua_S)
{
  TexPack* self = (TexPack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ImageFullPath'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ImageFullPath = ((std::string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ImagePath of class  TexPack */
#ifndef TOLUA_DISABLE_tolua_get_TexPack_ImagePath
static int tolua_get_TexPack_ImagePath(lua_State* tolua_S)
{
  TexPack* self = (TexPack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ImagePath'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->ImagePath);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ImagePath of class  TexPack */
#ifndef TOLUA_DISABLE_tolua_set_TexPack_ImagePath
static int tolua_set_TexPack_ImagePath(lua_State* tolua_S)
{
  TexPack* self = (TexPack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ImagePath'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ImagePath = ((std::string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Width of class  TexPack */
#ifndef TOLUA_DISABLE_tolua_get_TexPack_Width
static int tolua_get_TexPack_Width(lua_State* tolua_S)
{
  TexPack* self = (TexPack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Width'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Width);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Width of class  TexPack */
#ifndef TOLUA_DISABLE_tolua_set_TexPack_Width
static int tolua_set_TexPack_Width(lua_State* tolua_S)
{
  TexPack* self = (TexPack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Width'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Width = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Height of class  TexPack */
#ifndef TOLUA_DISABLE_tolua_get_TexPack_Height
static int tolua_get_TexPack_Height(lua_State* tolua_S)
{
  TexPack* self = (TexPack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Height'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Height);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Height of class  TexPack */
#ifndef TOLUA_DISABLE_tolua_set_TexPack_Height
static int tolua_set_TexPack_Height(lua_State* tolua_S)
{
  TexPack* self = (TexPack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Height'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Height = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IsHasUpdate of class  TexPack */
#ifndef TOLUA_DISABLE_tolua_get_TexPack_IsHasUpdate
static int tolua_get_TexPack_IsHasUpdate(lua_State* tolua_S)
{
  TexPack* self = (TexPack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IsHasUpdate'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->IsHasUpdate);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IsHasUpdate of class  TexPack */
#ifndef TOLUA_DISABLE_tolua_set_TexPack_IsHasUpdate
static int tolua_set_TexPack_IsHasUpdate(lua_State* tolua_S)
{
  TexPack* self = (TexPack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IsHasUpdate'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IsHasUpdate = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnimType of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_GetAnimType00
static int tolua_PX2_Animation_GetAnimType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Animation* self = (const Animation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnimType'", NULL);
#endif
  {
   Animation::AnimType tolua_ret = (Animation::AnimType)  self->GetAnimType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnimType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFilename of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_SetFilename00
static int tolua_PX2_Animation_SetFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation* self = (Animation*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFilename'", NULL);
#endif
  {
   self->SetFilename(filename);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFilename of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_GetFilename00
static int tolua_PX2_Animation_GetFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Animation* self = (const Animation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFilename'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetFilename();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetNormalTime of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_SetNormalTime00
static int tolua_PX2_Animation_SetNormalTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation* self = (Animation*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetNormalTime'", NULL);
#endif
  {
   self->SetNormalTime(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetNormalTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNormalTime of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_GetNormalTime00
static int tolua_PX2_Animation_GetNormalTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Animation* self = (const Animation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNormalTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetNormalTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNormalTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTime of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_SetTime00
static int tolua_PX2_Animation_SetTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation* self = (Animation*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTime'", NULL);
#endif
  {
   self->SetTime(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTime of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_GetTime00
static int tolua_PX2_Animation_GetTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Animation* self = (const Animation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFrequency of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_SetFrequency00
static int tolua_PX2_Animation_SetFrequency00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation* self = (Animation*)  tolua_tousertype(tolua_S,1,0);
  float frequence = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFrequency'", NULL);
#endif
  {
   self->SetFrequency(frequence);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFrequency'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFrequency of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_GetFrequency00
static int tolua_PX2_Animation_GetFrequency00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Animation* self = (const Animation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFrequency'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetFrequency();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFrequency'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPlayOnce of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_SetPlayOnce00
static int tolua_PX2_Animation_SetPlayOnce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation* self = (Animation*)  tolua_tousertype(tolua_S,1,0);
  bool once = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPlayOnce'", NULL);
#endif
  {
   self->SetPlayOnce(once);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPlayOnce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsPlayOnce of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_IsPlayOnce00
static int tolua_PX2_Animation_IsPlayOnce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Animation* self = (const Animation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsPlayOnce'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsPlayOnce();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsPlayOnce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPlayedKeepPlaying of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_SetPlayedKeepPlaying00
static int tolua_PX2_Animation_SetPlayedKeepPlaying00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation* self = (Animation*)  tolua_tousertype(tolua_S,1,0);
  bool isPlayedKeepPlaying = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPlayedKeepPlaying'", NULL);
#endif
  {
   self->SetPlayedKeepPlaying(isPlayedKeepPlaying);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPlayedKeepPlaying'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsPlayedKeepPlaying of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_IsPlayedKeepPlaying00
static int tolua_PX2_Animation_IsPlayedKeepPlaying00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Animation* self = (const Animation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsPlayedKeepPlaying'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsPlayedKeepPlaying();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsPlayedKeepPlaying'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUseBlend of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_SetUseBlend00
static int tolua_PX2_Animation_SetUseBlend00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation* self = (Animation*)  tolua_tousertype(tolua_S,1,0);
  bool useBlend = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUseBlend'", NULL);
#endif
  {
   self->SetUseBlend(useBlend);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUseBlend'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsUseBlend of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_IsUseBlend00
static int tolua_PX2_Animation_IsUseBlend00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Animation* self = (const Animation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsUseBlend'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsUseBlend();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsUseBlend'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LetCharacterPlay of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_LetCharacterPlay00
static int tolua_PX2_Animation_LetCharacterPlay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation* self = (Animation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LetCharacterPlay'", NULL);
#endif
  {
   self->LetCharacterPlay();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LetCharacterPlay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsPlaying of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_IsPlaying00
static int tolua_PX2_Animation_IsPlaying00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Animation* self = (const Animation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsPlaying'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsPlaying();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsPlaying'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Stop of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_Stop00
static int tolua_PX2_Animation_Stop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation* self = (Animation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Stop'", NULL);
#endif
  {
   self->Stop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Stop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCharacter of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_GetCharacter00
static int tolua_PX2_Animation_GetCharacter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation* self = (Animation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCharacter'", NULL);
#endif
  {
   ModelController* tolua_ret = (ModelController*)  self->GetCharacter();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ModelController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCharacter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  AnimationFrames */
#ifndef TOLUA_DISABLE_tolua_PX2_AnimationFrames_new00
static int tolua_PX2_AnimationFrames_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AnimationFrames",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   AnimationFrames* tolua_ret = (AnimationFrames*)  Mtolua_new((AnimationFrames)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AnimationFrames");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  AnimationFrames */
#ifndef TOLUA_DISABLE_tolua_PX2_AnimationFrames_new00_local
static int tolua_PX2_AnimationFrames_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AnimationFrames",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   AnimationFrames* tolua_ret = (AnimationFrames*)  Mtolua_new((AnimationFrames)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AnimationFrames");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  AnimationFrames */
#ifndef TOLUA_DISABLE_tolua_PX2_AnimationFrames_delete00
static int tolua_PX2_AnimationFrames_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationFrames",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationFrames* self = (AnimationFrames*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  AnimationFrames */
#ifndef TOLUA_DISABLE_tolua_PX2_AnimationFrames_New00
static int tolua_PX2_AnimationFrames_New00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AnimationFrames",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   AnimationFrames* tolua_ret = (AnimationFrames*)  AnimationFrames::New();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AnimationFrames");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'New'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  AnimationFrames */
#ifndef TOLUA_DISABLE_tolua_PX2_AnimationFrames_New01
static int tolua_PX2_AnimationFrames_New01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AnimationFrames",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   AnimationFrames* tolua_ret = (AnimationFrames*)  AnimationFrames::New(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AnimationFrames");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_AnimationFrames_New00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFilename of class  AnimationFrames */
#ifndef TOLUA_DISABLE_tolua_PX2_AnimationFrames_SetFilename00
static int tolua_PX2_AnimationFrames_SetFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationFrames",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationFrames* self = (AnimationFrames*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFilename'", NULL);
#endif
  {
   self->SetFilename(filename);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPlayOnce of class  AnimationFrames */
#ifndef TOLUA_DISABLE_tolua_PX2_AnimationFrames_SetPlayOnce00
static int tolua_PX2_AnimationFrames_SetPlayOnce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationFrames",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationFrames* self = (AnimationFrames*)  tolua_tousertype(tolua_S,1,0);
  bool once = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPlayOnce'", NULL);
#endif
  {
   self->SetPlayOnce(once);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPlayOnce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsPlaying of class  AnimationFrames */
#ifndef TOLUA_DISABLE_tolua_PX2_AnimationFrames_IsPlaying00
static int tolua_PX2_AnimationFrames_IsPlaying00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AnimationFrames",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AnimationFrames* self = (const AnimationFrames*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsPlaying'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsPlaying();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsPlaying'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Stop of class  AnimationFrames */
#ifndef TOLUA_DISABLE_tolua_PX2_AnimationFrames_Stop00
static int tolua_PX2_AnimationFrames_Stop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationFrames",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationFrames* self = (AnimationFrames*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Stop'", NULL);
#endif
  {
   self->Stop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Stop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetWorldRunDir of class  AnimationFrames */
#ifndef TOLUA_DISABLE_tolua_PX2_AnimationFrames_SetWorldRunDir00
static int tolua_PX2_AnimationFrames_SetWorldRunDir00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationFrames",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationFrames* self = (AnimationFrames*)  tolua_tousertype(tolua_S,1,0);
  const AVector* vec = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetWorldRunDir'", NULL);
#endif
  {
   self->SetWorldRunDir(*vec);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetWorldRunDir'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldRunDir of class  AnimationFrames */
#ifndef TOLUA_DISABLE_tolua_PX2_AnimationFrames_GetWorldRunDir00
static int tolua_PX2_AnimationFrames_GetWorldRunDir00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AnimationFrames",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AnimationFrames* self = (const AnimationFrames*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldRunDir'", NULL);
#endif
  {
   const AVector& tolua_ret = (const AVector&)  self->GetWorldRunDir();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const AVector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldRunDir'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Animation3DSkeleton */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation3DSkeleton_new00
static int tolua_PX2_Animation3DSkeleton_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Animation3DSkeleton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Animation3DSkeleton* tolua_ret = (Animation3DSkeleton*)  Mtolua_new((Animation3DSkeleton)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Animation3DSkeleton");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Animation3DSkeleton */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation3DSkeleton_new00_local
static int tolua_PX2_Animation3DSkeleton_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Animation3DSkeleton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Animation3DSkeleton* tolua_ret = (Animation3DSkeleton*)  Mtolua_new((Animation3DSkeleton)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Animation3DSkeleton");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Animation3DSkeleton */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation3DSkeleton_delete00
static int tolua_PX2_Animation3DSkeleton_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation3DSkeleton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation3DSkeleton* self = (Animation3DSkeleton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  Animation3DSkeleton */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation3DSkeleton_New00
static int tolua_PX2_Animation3DSkeleton_New00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Animation3DSkeleton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Animation3DSkeleton* tolua_ret = (Animation3DSkeleton*)  Animation3DSkeleton::New();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Animation3DSkeleton");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'New'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  Animation3DSkeleton */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation3DSkeleton_New01
static int tolua_PX2_Animation3DSkeleton_New01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Animation3DSkeleton",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Animation3DSkeleton* tolua_ret = (Animation3DSkeleton*)  Animation3DSkeleton::New(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Animation3DSkeleton");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_Animation3DSkeleton_New00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFilename of class  Animation3DSkeleton */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation3DSkeleton_SetFilename00
static int tolua_PX2_Animation3DSkeleton_SetFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation3DSkeleton",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation3DSkeleton* self = (Animation3DSkeleton*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFilename'", NULL);
#endif
  {
   self->SetFilename(filename);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFrequency of class  Animation3DSkeleton */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation3DSkeleton_SetFrequency00
static int tolua_PX2_Animation3DSkeleton_SetFrequency00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation3DSkeleton",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation3DSkeleton* self = (Animation3DSkeleton*)  tolua_tousertype(tolua_S,1,0);
  float frequency = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFrequency'", NULL);
#endif
  {
   self->SetFrequency(frequency);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFrequency'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPlayOnce of class  Animation3DSkeleton */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation3DSkeleton_SetPlayOnce00
static int tolua_PX2_Animation3DSkeleton_SetPlayOnce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation3DSkeleton",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation3DSkeleton* self = (Animation3DSkeleton*)  tolua_tousertype(tolua_S,1,0);
  bool once = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPlayOnce'", NULL);
#endif
  {
   self->SetPlayOnce(once);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPlayOnce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMovingScale of class  Animation3DSkeleton */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation3DSkeleton_SetMovingScale00
static int tolua_PX2_Animation3DSkeleton_SetMovingScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation3DSkeleton",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation3DSkeleton* self = (Animation3DSkeleton*)  tolua_tousertype(tolua_S,1,0);
  const APoint* movingScale = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMovingScale'", NULL);
#endif
  {
   self->SetMovingScale(*movingScale);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMovingScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_new00
static int tolua_PX2_ModelController_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ModelController* tolua_ret = (ModelController*)  Mtolua_new((ModelController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ModelController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_new00_local
static int tolua_PX2_ModelController_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ModelController* tolua_ret = (ModelController*)  Mtolua_new((ModelController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ModelController");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_delete00
static int tolua_PX2_ModelController_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ModelController* self = (ModelController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_New00
static int tolua_PX2_ModelController_New00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ModelController* tolua_ret = (ModelController*)  ModelController::New();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ModelController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'New'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_New01
static int tolua_PX2_ModelController_New01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   ModelController* tolua_ret = (ModelController*)  ModelController::New(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ModelController");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_ModelController_New00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMovableFilename of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_SetMovableFilename00
static int tolua_PX2_ModelController_SetMovableFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ModelController* self = (ModelController*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  bool shareVI = ((bool)  tolua_toboolean(tolua_S,3,false));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMovableFilename'", NULL);
#endif
  {
   self->SetMovableFilename(filename,shareVI);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMovableFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMovableFilename of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_GetMovableFilename00
static int tolua_PX2_ModelController_GetMovableFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ModelController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ModelController* self = (const ModelController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMovableFilename'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetMovableFilename();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMovableFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsShareVI of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_IsShareVI00
static int tolua_PX2_ModelController_IsShareVI00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ModelController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ModelController* self = (const ModelController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsShareVI'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsShareVI();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsShareVI'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMovable of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_SetMovable00
static int tolua_PX2_ModelController_SetMovable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Movable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ModelController* self = (ModelController*)  tolua_tousertype(tolua_S,1,0);
  Movable* mov = ((Movable*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMovable'", NULL);
#endif
  {
   self->SetMovable(mov);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMovable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMovable of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_GetMovable00
static int tolua_PX2_ModelController_GetMovable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ModelController* self = (ModelController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMovable'", NULL);
#endif
  {
   Movable* tolua_ret = (Movable*)  self->GetMovable();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Movable");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMovable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetHeading of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_SetHeading00
static int tolua_PX2_ModelController_SetHeading00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ModelController",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ModelController* self = (ModelController*)  tolua_tousertype(tolua_S,1,0);
  const AVector* heading = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetHeading'", NULL);
#endif
  {
   self->SetHeading(*heading);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetHeading'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetHeading of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_GetHeading00
static int tolua_PX2_ModelController_GetHeading00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ModelController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ModelController* self = (const ModelController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetHeading'", NULL);
#endif
  {
   const AVector& tolua_ret = (const AVector&)  self->GetHeading();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const AVector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetHeading'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMovableUseAutoWorldBound of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_SetMovableUseAutoWorldBound00
static int tolua_PX2_ModelController_SetMovableUseAutoWorldBound00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ModelController* self = (ModelController*)  tolua_tousertype(tolua_S,1,0);
  bool isUseAutoWorldBound = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMovableUseAutoWorldBound'", NULL);
#endif
  {
   self->SetMovableUseAutoWorldBound(isUseAutoWorldBound);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMovableUseAutoWorldBound'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsMovableUseAutoWorldBound of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_IsMovableUseAutoWorldBound00
static int tolua_PX2_ModelController_IsMovableUseAutoWorldBound00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ModelController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ModelController* self = (const ModelController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsMovableUseAutoWorldBound'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsMovableUseAutoWorldBound();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsMovableUseAutoWorldBound'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMovableAutoWorldBoundRadius of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_SetMovableAutoWorldBoundRadius00
static int tolua_PX2_ModelController_SetMovableAutoWorldBoundRadius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ModelController* self = (ModelController*)  tolua_tousertype(tolua_S,1,0);
  float radius = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMovableAutoWorldBoundRadius'", NULL);
#endif
  {
   self->SetMovableAutoWorldBoundRadius(radius);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMovableAutoWorldBoundRadius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMovableAutoWorldBoundRadius of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_GetMovableAutoWorldBoundRadius00
static int tolua_PX2_ModelController_GetMovableAutoWorldBoundRadius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ModelController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ModelController* self = (const ModelController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMovableAutoWorldBoundRadius'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetMovableAutoWorldBoundRadius();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMovableAutoWorldBoundRadius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CollectAnchors of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_CollectAnchors00
static int tolua_PX2_ModelController_CollectAnchors00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ModelController* self = (ModelController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CollectAnchors'", NULL);
#endif
  {
   self->CollectAnchors();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CollectAnchors'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorPos of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_GetAnchorPos00
static int tolua_PX2_ModelController_GetAnchorPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ModelController* self = (ModelController*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorPos'", NULL);
#endif
  {
   APoint tolua_ret = (APoint)  self->GetAnchorPos(id);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((APoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(APoint));
     tolua_pushusertype(tolua_S,tolua_obj,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchor of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_GetAnchor00
static int tolua_PX2_ModelController_GetAnchor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ModelController* self = (ModelController*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchor'", NULL);
#endif
  {
   Node* tolua_ret = (Node*)  self->GetAnchor(id);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Node");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAnimType of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_SetAnimType00
static int tolua_PX2_ModelController_SetAnimType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ModelController* self = (ModelController*)  tolua_tousertype(tolua_S,1,0);
  ModelController::AnimType type = ((ModelController::AnimType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAnimType'", NULL);
#endif
  {
   self->SetAnimType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAnimType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnimType of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_GetAnimType00
static int tolua_PX2_ModelController_GetAnimType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ModelController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ModelController* self = (const ModelController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnimType'", NULL);
#endif
  {
   ModelController::AnimType tolua_ret = (ModelController::AnimType)  self->GetAnimType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnimType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddAnim of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_AddAnim00
static int tolua_PX2_ModelController_AddAnim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ModelController* self = (ModelController*)  tolua_tousertype(tolua_S,1,0);
  Animation* anim = ((Animation*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddAnim'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->AddAnim(anim);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddAnim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: HasAnim of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_HasAnim00
static int tolua_PX2_ModelController_HasAnim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ModelController* self = (ModelController*)  tolua_tousertype(tolua_S,1,0);
  Animation* anim = ((Animation*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'HasAnim'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->HasAnim(anim);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'HasAnim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: HasAnim of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_HasAnim01
static int tolua_PX2_ModelController_HasAnim01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  ModelController* self = (ModelController*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'HasAnim'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->HasAnim(name);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_ModelController_HasAnim00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveAnim of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_RemoveAnim00
static int tolua_PX2_ModelController_RemoveAnim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ModelController* self = (ModelController*)  tolua_tousertype(tolua_S,1,0);
  Animation* anim = ((Animation*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveAnim'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->RemoveAnim(anim);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveAnim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveAnim of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_RemoveAnim01
static int tolua_PX2_ModelController_RemoveAnim01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  ModelController* self = (ModelController*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveAnim'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->RemoveAnim(name);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_ModelController_RemoveAnim00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveAllAnims of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_RemoveAllAnims00
static int tolua_PX2_ModelController_RemoveAllAnims00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ModelController* self = (ModelController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveAllAnims'", NULL);
#endif
  {
   self->RemoveAllAnims();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveAllAnims'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumAnims of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_GetNumAnims00
static int tolua_PX2_ModelController_GetNumAnims00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ModelController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ModelController* self = (const ModelController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumAnims'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumAnims();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumAnims'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnimsMap of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_GetAnimsMap00
static int tolua_PX2_ModelController_GetAnimsMap00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ModelController* self = (ModelController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnimsMap'", NULL);
#endif
  {
   std::map<FString,AnimationPtr>& tolua_ret = (std::map<FString,AnimationPtr>&)  self->GetAnimsMap();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"std::map<FString,AnimationPtr>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnimsMap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnimByName of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_GetAnimByName00
static int tolua_PX2_ModelController_GetAnimByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ModelController* self = (ModelController*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnimByName'", NULL);
#endif
  {
   Animation* tolua_ret = (Animation*)  self->GetAnimByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Animation");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnimByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDefaultAnim of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_SetDefaultAnim00
static int tolua_PX2_ModelController_SetDefaultAnim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ModelController* self = (ModelController*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDefaultAnim'", NULL);
#endif
  {
   self->SetDefaultAnim(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDefaultAnim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDefaultAnimName of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_GetDefaultAnimName00
static int tolua_PX2_ModelController_GetDefaultAnimName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ModelController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ModelController* self = (const ModelController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDefaultAnimName'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetDefaultAnimName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDefaultAnimName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDefaultAnim of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_GetDefaultAnim00
static int tolua_PX2_ModelController_GetDefaultAnim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ModelController* self = (ModelController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDefaultAnim'", NULL);
#endif
  {
   Animation* tolua_ret = (Animation*)  self->GetDefaultAnim();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Animation");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDefaultAnim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: PlayAnim of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_PlayAnim00
static int tolua_PX2_ModelController_PlayAnim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ModelController* self = (ModelController*)  tolua_tousertype(tolua_S,1,0);
  Animation* anim = ((Animation*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'PlayAnim'", NULL);
#endif
  {
   self->PlayAnim(anim);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'PlayAnim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: PlayAnimByName of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_PlayAnimByName00
static int tolua_PX2_ModelController_PlayAnimByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ModelController* self = (ModelController*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'PlayAnimByName'", NULL);
#endif
  {
   self->PlayAnimByName(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'PlayAnimByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: StopAnim of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_StopAnim00
static int tolua_PX2_ModelController_StopAnim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ModelController* self = (ModelController*)  tolua_tousertype(tolua_S,1,0);
  Animation* anim = ((Animation*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'StopAnim'", NULL);
#endif
  {
   self->StopAnim(anim);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'StopAnim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: StopCurAnim of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_StopCurAnim00
static int tolua_PX2_ModelController_StopCurAnim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ModelController* self = (ModelController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'StopCurAnim'", NULL);
#endif
  {
   self->StopCurAnim();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'StopCurAnim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: PlayCurAnim of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_PlayCurAnim00
static int tolua_PX2_ModelController_PlayCurAnim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ModelController* self = (ModelController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'PlayCurAnim'", NULL);
#endif
  {
   self->PlayCurAnim();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'PlayCurAnim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCurPlayingAnim of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_GetCurPlayingAnim00
static int tolua_PX2_ModelController_GetCurPlayingAnim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ModelController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ModelController* self = (ModelController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCurPlayingAnim'", NULL);
#endif
  {
   Animation* tolua_ret = (Animation*)  self->GetCurPlayingAnim();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Animation");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCurPlayingAnim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsHasAnimPlaying of class  ModelController */
#ifndef TOLUA_DISABLE_tolua_PX2_ModelController_IsHasAnimPlaying00
static int tolua_PX2_ModelController_IsHasAnimPlaying00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ModelController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ModelController* self = (const ModelController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsHasAnimPlaying'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsHasAnimPlaying();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsHasAnimPlaying'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_new00
static int tolua_PX2_RenderWindow_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RenderWindow* tolua_ret = (RenderWindow*)  Mtolua_new((RenderWindow)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RenderWindow");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_new00_local
static int tolua_PX2_RenderWindow_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RenderWindow* tolua_ret = (RenderWindow*)  Mtolua_new((RenderWindow)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RenderWindow");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_delete00
static int tolua_PX2_RenderWindow_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RenderWindow* self = (RenderWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWindowHandle of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_GetWindowHandle00
static int tolua_PX2_RenderWindow_GetWindowHandle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RenderWindow* self = (RenderWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWindowHandle'", NULL);
#endif
  {
   void* tolua_ret = (void*)  self->GetWindowHandle();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWindowHandle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsMain of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_IsMain00
static int tolua_PX2_RenderWindow_IsMain00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const RenderWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const RenderWindow* self = (const RenderWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsMain'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsMain();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsMain'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTitle of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_SetTitle00
static int tolua_PX2_RenderWindow_SetTitle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RenderWindow* self = (RenderWindow*)  tolua_tousertype(tolua_S,1,0);
  const std::string title = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTitle'", NULL);
#endif
  {
   self->SetTitle(title);
   tolua_pushcppstring(tolua_S,(const char*)title);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTitle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTitle of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_GetTitle00
static int tolua_PX2_RenderWindow_GetTitle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const RenderWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const RenderWindow* self = (const RenderWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTitle'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetTitle();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTitle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFloat of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_SetFloat00
static int tolua_PX2_RenderWindow_SetFloat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RenderWindow* self = (RenderWindow*)  tolua_tousertype(tolua_S,1,0);
  bool fl = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFloat'", NULL);
#endif
  {
   self->SetFloat(fl);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFloat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsFloat of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_IsFloat00
static int tolua_PX2_RenderWindow_IsFloat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const RenderWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const RenderWindow* self = (const RenderWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsFloat'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsFloat();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsFloat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Centre of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_Centre00
static int tolua_PX2_RenderWindow_Centre00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RenderWindow* self = (RenderWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Centre'", NULL);
#endif
  {
   self->Centre();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Centre'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPosition of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_SetPosition00
static int tolua_PX2_RenderWindow_SetPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RenderWindow* self = (RenderWindow*)  tolua_tousertype(tolua_S,1,0);
  const APoint* pos = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPosition'", NULL);
#endif
  {
   self->SetPosition(*pos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPosition of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_GetPosition00
static int tolua_PX2_RenderWindow_GetPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const RenderWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const RenderWindow* self = (const RenderWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPosition'", NULL);
#endif
  {
   const APoint& tolua_ret = (const APoint&)  self->GetPosition();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const APoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetScreenSize of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_SetScreenSize00
static int tolua_PX2_RenderWindow_SetScreenSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Sizef",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RenderWindow* self = (RenderWindow*)  tolua_tousertype(tolua_S,1,0);
  const Sizef* size = ((const Sizef*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetScreenSize'", NULL);
#endif
  {
   self->SetScreenSize(*size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetScreenSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetScreenSize of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_GetScreenSize00
static int tolua_PX2_RenderWindow_GetScreenSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const RenderWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const RenderWindow* self = (const RenderWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetScreenSize'", NULL);
#endif
  {
   const Sizef& tolua_ret = (const Sizef&)  self->GetScreenSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Sizef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetScreenSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: MaxSize of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_MaxSize00
static int tolua_PX2_RenderWindow_MaxSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RenderWindow* self = (RenderWindow*)  tolua_tousertype(tolua_S,1,0);
  bool maxSize = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'MaxSize'", NULL);
#endif
  {
   self->MaxSize(maxSize);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'MaxSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsMaxSize of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_IsMaxSize00
static int tolua_PX2_RenderWindow_IsMaxSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const RenderWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const RenderWindow* self = (const RenderWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsMaxSize'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsMaxSize();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsMaxSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Show of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_Show00
static int tolua_PX2_RenderWindow_Show00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RenderWindow* self = (RenderWindow*)  tolua_tousertype(tolua_S,1,0);
  bool show = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Show'", NULL);
#endif
  {
   self->Show(show);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Show'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsShow of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_IsShow00
static int tolua_PX2_RenderWindow_IsShow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const RenderWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const RenderWindow* self = (const RenderWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsShow'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsShow();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsShow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ShowCursor of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_ShowCursor00
static int tolua_PX2_RenderWindow_ShowCursor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RenderWindow* self = (RenderWindow*)  tolua_tousertype(tolua_S,1,0);
  bool showCursor = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ShowCursor'", NULL);
#endif
  {
   self->ShowCursor(showCursor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ShowCursor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsShowCursor of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_IsShowCursor00
static int tolua_PX2_RenderWindow_IsShowCursor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const RenderWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const RenderWindow* self = (const RenderWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsShowCursor'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsShowCursor();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsShowCursor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CaptureMouse of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_CaptureMouse00
static int tolua_PX2_RenderWindow_CaptureMouse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RenderWindow* self = (RenderWindow*)  tolua_tousertype(tolua_S,1,0);
  bool capture = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CaptureMouse'", NULL);
#endif
  {
   self->CaptureMouse(capture);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CaptureMouse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsCaptureMouse of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_IsCaptureMouse00
static int tolua_PX2_RenderWindow_IsCaptureMouse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const RenderWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const RenderWindow* self = (const RenderWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsCaptureMouse'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsCaptureMouse();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsCaptureMouse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetParentRenderWindow of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_GetParentRenderWindow00
static int tolua_PX2_RenderWindow_GetParentRenderWindow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RenderWindow* self = (RenderWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetParentRenderWindow'", NULL);
#endif
  {
   RenderWindow* tolua_ret = (RenderWindow*)  self->GetParentRenderWindow();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RenderWindow");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetParentRenderWindow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMainCanvas of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_GetMainCanvas00
static int tolua_PX2_RenderWindow_GetMainCanvas00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RenderWindow* self = (RenderWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMainCanvas'", NULL);
#endif
  {
   Canvas* tolua_ret = (Canvas*)  self->GetMainCanvas();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Canvas");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMainCanvas'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEngineCanvas of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_GetEngineCanvas00
static int tolua_PX2_RenderWindow_GetEngineCanvas00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RenderWindow* self = (RenderWindow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEngineCanvas'", NULL);
#endif
  {
   Canvas* tolua_ret = (Canvas*)  self->GetEngineCanvas();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Canvas");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEngineCanvas'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCursorType of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_SetCursorType00
static int tolua_PX2_RenderWindow_SetCursorType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RenderWindow::CursorType ct = ((RenderWindow::CursorType) (int)  tolua_tonumber(tolua_S,2,0));
  {
   RenderWindow::SetCursorType(ct);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCursorType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCursorType of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_GetCursorType00
static int tolua_PX2_RenderWindow_GetCursorType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RenderWindow::CursorType tolua_ret = (RenderWindow::CursorType)  RenderWindow::GetCursorType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCursorType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCursorPos of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_SetCursorPos00
static int tolua_PX2_RenderWindow_SetCursorPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Float2* pos = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
  {
   RenderWindow::SetCursorPos(*pos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCursorPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCursorPos of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_GetCursorPos00
static int tolua_PX2_RenderWindow_GetCursorPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Float2 tolua_ret = (Float2)  RenderWindow::GetCursorPos();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Float2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Float2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Float2));
     tolua_pushusertype(tolua_S,tolua_obj,"Float2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCursorPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDeskScreenSize of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_GetDeskScreenSize00
static int tolua_PX2_RenderWindow_GetDeskScreenSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Sizef tolua_ret = (Sizef)  RenderWindow::GetDeskScreenSize();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Sizef)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Sizef");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Sizef));
     tolua_pushusertype(tolua_S,tolua_obj,"Sizef");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDeskScreenSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetScreenDragType of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_SetScreenDragType00
static int tolua_PX2_RenderWindow_SetScreenDragType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RenderWindow::ScreenDragType type = ((RenderWindow::ScreenDragType) (int)  tolua_tonumber(tolua_S,2,0));
  {
   RenderWindow::SetScreenDragType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetScreenDragType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetScreenDragType of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_GetScreenDragType00
static int tolua_PX2_RenderWindow_GetScreenDragType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RenderWindow::ScreenDragType tolua_ret = (RenderWindow::ScreenDragType)  RenderWindow::GetScreenDragType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetScreenDragType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsScreenDrag of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_IsScreenDrag00
static int tolua_PX2_RenderWindow_IsScreenDrag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   bool tolua_ret = (bool)  RenderWindow::IsScreenDrag();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsScreenDrag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsMouseDown of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_IsMouseDown00
static int tolua_PX2_RenderWindow_IsMouseDown00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int mouseType = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  RenderWindow::IsMouseDown(mouseType);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsMouseDown'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCurCursorPos of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_GetCurCursorPos00
static int tolua_PX2_RenderWindow_GetCurCursorPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Float2 tolua_ret = (Float2)  RenderWindow::GetCurCursorPos();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Float2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Float2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Float2));
     tolua_pushusertype(tolua_S,tolua_obj,"Float2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCurCursorPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLastCursorPos of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_GetLastCursorPos00
static int tolua_PX2_RenderWindow_GetLastCursorPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Float2 tolua_ret = (Float2)  RenderWindow::GetLastCursorPos();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Float2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Float2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Float2));
     tolua_pushusertype(tolua_S,tolua_obj,"Float2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLastCursorPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMoveDelta of class  RenderWindow */
#ifndef TOLUA_DISABLE_tolua_PX2_RenderWindow_GetMoveDelta00
static int tolua_PX2_RenderWindow_GetMoveDelta00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RenderWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Float2 tolua_ret = (Float2)  RenderWindow::GetMoveDelta();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Float2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Float2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Float2));
     tolua_pushusertype(tolua_S,tolua_obj,"Float2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMoveDelta'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetInEditor of class  GraphicsRoot */
#ifndef TOLUA_DISABLE_tolua_PX2_GraphicsRoot_SetInEditor00
static int tolua_PX2_GraphicsRoot_SetInEditor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GraphicsRoot",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GraphicsRoot* self = (GraphicsRoot*)  tolua_tousertype(tolua_S,1,0);
  bool isInEditor = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetInEditor'", NULL);
#endif
  {
   self->SetInEditor(isInEditor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetInEditor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsInEditor of class  GraphicsRoot */
#ifndef TOLUA_DISABLE_tolua_PX2_GraphicsRoot_IsInEditor00
static int tolua_PX2_GraphicsRoot_IsInEditor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const GraphicsRoot",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const GraphicsRoot* self = (const GraphicsRoot*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsInEditor'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsInEditor();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsInEditor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUIShareDraw of class  GraphicsRoot */
#ifndef TOLUA_DISABLE_tolua_PX2_GraphicsRoot_SetUIShareDraw00
static int tolua_PX2_GraphicsRoot_SetUIShareDraw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GraphicsRoot",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GraphicsRoot* self = (GraphicsRoot*)  tolua_tousertype(tolua_S,1,0);
  bool shareDraw = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUIShareDraw'", NULL);
#endif
  {
   self->SetUIShareDraw(shareDraw);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUIShareDraw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsUIShareDraw of class  GraphicsRoot */
#ifndef TOLUA_DISABLE_tolua_PX2_GraphicsRoot_IsUIShareDraw00
static int tolua_PX2_GraphicsRoot_IsUIShareDraw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const GraphicsRoot",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const GraphicsRoot* self = (const GraphicsRoot*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsUIShareDraw'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsUIShareDraw();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsUIShareDraw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddRenderWindow of class  GraphicsRoot */
#ifndef TOLUA_DISABLE_tolua_PX2_GraphicsRoot_AddRenderWindow00
static int tolua_PX2_GraphicsRoot_AddRenderWindow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GraphicsRoot",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"RenderWindow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GraphicsRoot* self = (GraphicsRoot*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  RenderWindow* rw = ((RenderWindow*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddRenderWindow'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->AddRenderWindow(name,rw);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddRenderWindow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsHasRenderWindow of class  GraphicsRoot */
#ifndef TOLUA_DISABLE_tolua_PX2_GraphicsRoot_IsHasRenderWindow00
static int tolua_PX2_GraphicsRoot_IsHasRenderWindow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GraphicsRoot",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GraphicsRoot* self = (GraphicsRoot*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsHasRenderWindow'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsHasRenderWindow(name);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsHasRenderWindow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveRenderWindow of class  GraphicsRoot */
#ifndef TOLUA_DISABLE_tolua_PX2_GraphicsRoot_RemoveRenderWindow00
static int tolua_PX2_GraphicsRoot_RemoveRenderWindow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GraphicsRoot",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GraphicsRoot* self = (GraphicsRoot*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveRenderWindow'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->RemoveRenderWindow(name);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveRenderWindow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRenderWindow of class  GraphicsRoot */
#ifndef TOLUA_DISABLE_tolua_PX2_GraphicsRoot_GetRenderWindow00
static int tolua_PX2_GraphicsRoot_GetRenderWindow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GraphicsRoot",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GraphicsRoot* self = (GraphicsRoot*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRenderWindow'", NULL);
#endif
  {
   RenderWindow* tolua_ret = (RenderWindow*)  self->GetRenderWindow(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RenderWindow");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRenderWindow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMainWindow of class  GraphicsRoot */
#ifndef TOLUA_DISABLE_tolua_PX2_GraphicsRoot_GetMainWindow00
static int tolua_PX2_GraphicsRoot_GetMainWindow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GraphicsRoot",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GraphicsRoot* self = (GraphicsRoot*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMainWindow'", NULL);
#endif
  {
   RenderWindow* tolua_ret = (RenderWindow*)  self->GetMainWindow();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RenderWindow");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMainWindow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPlayType of class  GraphicsRoot */
#ifndef TOLUA_DISABLE_tolua_PX2_GraphicsRoot_GetPlayType00
static int tolua_PX2_GraphicsRoot_GetPlayType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const GraphicsRoot",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const GraphicsRoot* self = (const GraphicsRoot*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPlayType'", NULL);
#endif
  {
   GraphicsRoot::PlayType tolua_ret = (GraphicsRoot::PlayType)  self->GetPlayType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPlayType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetVertexFormat of class  GraphicsRoot */
#ifndef TOLUA_DISABLE_tolua_PX2_GraphicsRoot_GetVertexFormat00
static int tolua_PX2_GraphicsRoot_GetVertexFormat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GraphicsRoot",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GraphicsRoot* self = (GraphicsRoot*)  tolua_tousertype(tolua_S,1,0);
  GraphicsRoot::VertexFormatType type = ((GraphicsRoot::VertexFormatType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetVertexFormat'", NULL);
#endif
  {
   VertexFormat* tolua_ret = (VertexFormat*)  self->GetVertexFormat(type);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"VertexFormat");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetVertexFormat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetXYPlane of class  GraphicsRoot */
#ifndef TOLUA_DISABLE_tolua_PX2_GraphicsRoot_GetXYPlane00
static int tolua_PX2_GraphicsRoot_GetXYPlane00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GraphicsRoot",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GraphicsRoot* self = (GraphicsRoot*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetXYPlane'", NULL);
#endif
  {
   TriMesh* tolua_ret = (TriMesh*)  self->GetXYPlane();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TriMesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetXYPlane'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetXZPlane of class  GraphicsRoot */
#ifndef TOLUA_DISABLE_tolua_PX2_GraphicsRoot_GetXZPlane00
static int tolua_PX2_GraphicsRoot_GetXZPlane00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GraphicsRoot",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GraphicsRoot* self = (GraphicsRoot*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetXZPlane'", NULL);
#endif
  {
   TriMesh* tolua_ret = (TriMesh*)  self->GetXZPlane();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TriMesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetXZPlane'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetYZPlane of class  GraphicsRoot */
#ifndef TOLUA_DISABLE_tolua_PX2_GraphicsRoot_GetYZPlane00
static int tolua_PX2_GraphicsRoot_GetYZPlane00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GraphicsRoot",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GraphicsRoot* self = (GraphicsRoot*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetYZPlane'", NULL);
#endif
  {
   TriMesh* tolua_ret = (TriMesh*)  self->GetYZPlane();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TriMesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetYZPlane'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Clear of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_Clear00
static int tolua_PX2_ResourceManager_Clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Clear'", NULL);
#endif
  {
   self->Clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ClearRes of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_ClearRes00
static int tolua_PX2_ResourceManager_ClearRes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string resPath = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ClearRes'", NULL);
#endif
  {
   self->ClearRes(resPath);
   tolua_pushcppstring(tolua_S,(const char*)resPath);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ClearRes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: BlockLoad of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_BlockLoad00
static int tolua_PX2_ResourceManager_BlockLoad00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'BlockLoad'", NULL);
#endif
  {
   Object* tolua_ret = (Object*)  self->BlockLoad(filename);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Object");
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'BlockLoad'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: BlockLoadCopy of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_BlockLoadCopy00
static int tolua_PX2_ResourceManager_BlockLoadCopy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'BlockLoadCopy'", NULL);
#endif
  {
   Object* tolua_ret = (Object*)  self->BlockLoadCopy(filename);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Object");
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'BlockLoadCopy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: BlockLoadShareCopy of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_BlockLoadShareCopy00
static int tolua_PX2_ResourceManager_BlockLoadShareCopy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  bool vb = ((bool)  tolua_toboolean(tolua_S,3,0));
  bool ib = ((bool)  tolua_toboolean(tolua_S,4,0));
  bool mi = ((bool)  tolua_toboolean(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'BlockLoadShareCopy'", NULL);
#endif
  {
   Object* tolua_ret = (Object*)  self->BlockLoadShareCopy(filename,vb,ib,mi);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Object");
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'BlockLoadShareCopy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LoadBuffer of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_LoadBuffer00
static int tolua_PX2_ResourceManager_LoadBuffer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  std::string buf = ((std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LoadBuffer'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->LoadBuffer(filename,buf);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)filename);
   tolua_pushcppstring(tolua_S,(const char*)buf);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LoadBuffer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ShareCopyVB_IB of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_ShareCopyVB_IB00
static int tolua_PX2_ResourceManager_ShareCopyVB_IB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  Object* objFrom = ((Object*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ShareCopyVB_IB'", NULL);
#endif
  {
   Object* tolua_ret = (Object*)  self->ShareCopyVB_IB(objFrom);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Object");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ShareCopyVB_IB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ShareCopyVB_IB_MI of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_ShareCopyVB_IB_MI00
static int tolua_PX2_ResourceManager_ShareCopyVB_IB_MI00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  Object* objFrom = ((Object*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ShareCopyVB_IB_MI'", NULL);
#endif
  {
   Object* tolua_ret = (Object*)  self->ShareCopyVB_IB_MI(objFrom);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Object");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ShareCopyVB_IB_MI'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ShareCopyMI of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_ShareCopyMI00
static int tolua_PX2_ResourceManager_ShareCopyMI00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  Object* objFrom = ((Object*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ShareCopyMI'", NULL);
#endif
  {
   Object* tolua_ret = (Object*)  self->ShareCopyMI(objFrom);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Object");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ShareCopyMI'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ShareCopy of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_ShareCopy00
static int tolua_PX2_ResourceManager_ShareCopy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Object",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  Object* objFrom = ((Object*)  tolua_tousertype(tolua_S,2,0));
  bool vb = ((bool)  tolua_toboolean(tolua_S,3,0));
  bool ib = ((bool)  tolua_toboolean(tolua_S,4,0));
  bool mi = ((bool)  tolua_toboolean(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ShareCopy'", NULL);
#endif
  {
   Object* tolua_ret = (Object*)  self->ShareCopy(objFrom,vb,ib,mi);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Object");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ShareCopy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Dump of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_Dump00
static int tolua_PX2_ResourceManager_Dump00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Dump'", NULL);
#endif
  {
   self->Dump(filename);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Dump'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: BeginDumpDiff of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_BeginDumpDiff00
static int tolua_PX2_ResourceManager_BeginDumpDiff00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'BeginDumpDiff'", NULL);
#endif
  {
   self->BeginDumpDiff();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'BeginDumpDiff'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: EndDumpDiff of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_EndDumpDiff00
static int tolua_PX2_ResourceManager_EndDumpDiff00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'EndDumpDiff'", NULL);
#endif
  {
   self->EndDumpDiff(filename);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'EndDumpDiff'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUseGarbageCollect of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_SetUseGarbageCollect00
static int tolua_PX2_ResourceManager_SetUseGarbageCollect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  bool use = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUseGarbageCollect'", NULL);
#endif
  {
   self->SetUseGarbageCollect(use);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUseGarbageCollect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsUseGarbageCollect of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_IsUseGarbageCollect00
static int tolua_PX2_ResourceManager_IsUseGarbageCollect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ResourceManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ResourceManager* self = (const ResourceManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsUseGarbageCollect'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsUseGarbageCollect();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsUseGarbageCollect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetGarbageCollectTime of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_SetGarbageCollectTime00
static int tolua_PX2_ResourceManager_SetGarbageCollectTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  float seconds = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetGarbageCollectTime'", NULL);
#endif
  {
   self->SetGarbageCollectTime(seconds);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetGarbageCollectTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetGarbageCollectTime of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_GetGarbageCollectTime00
static int tolua_PX2_ResourceManager_GetGarbageCollectTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ResourceManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ResourceManager* self = (const ResourceManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetGarbageCollectTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetGarbageCollectTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetGarbageCollectTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateFloder of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_CreateFloder00
static int tolua_PX2_ResourceManager_CreateFloder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string parentPath = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string path = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateFloder'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->CreateFloder(parentPath,path);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)parentPath);
   tolua_pushcppstring(tolua_S,(const char*)path);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateFloder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsFileFloderExist of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_IsFileFloderExist00
static int tolua_PX2_ResourceManager_IsFileFloderExist00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string path = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsFileFloderExist'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsFileFloderExist(path);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)path);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsFileFloderExist'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsTexPack of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_IsTexPack00
static int tolua_PX2_ResourceManager_IsTexPack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string texPackPath = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsTexPack'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsTexPack(texPackPath);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)texPackPath);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsTexPack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddTexPack of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_AddTexPack00
static int tolua_PX2_ResourceManager_AddTexPack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string texPackPath = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddTexPack'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->AddTexPack(texPackPath);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)texPackPath);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddTexPack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTexPack of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_GetTexPack00
static int tolua_PX2_ResourceManager_GetTexPack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string texPackPath = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTexPack'", NULL);
#endif
  {
   const TexPack& tolua_ret = (const TexPack&)  self->GetTexPack(texPackPath);
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const TexPack");
   tolua_pushcppstring(tolua_S,(const char*)texPackPath);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTexPack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTexPackElement of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_GetTexPackElement00
static int tolua_PX2_ResourceManager_GetTexPackElement00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string texPackPath = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string eleName = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTexPackElement'", NULL);
#endif
  {
   const TexPackElement& tolua_ret = (const TexPackElement&)  self->GetTexPackElement(texPackPath,eleName);
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const TexPackElement");
   tolua_pushcppstring(tolua_S,(const char*)texPackPath);
   tolua_pushcppstring(tolua_S,(const char*)eleName);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTexPackElement'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWriteablePath of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_GetWriteablePath00
static int tolua_PX2_ResourceManager_GetWriteablePath00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   std::string tolua_ret = (std::string)  ResourceManager::GetWriteablePath();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWriteablePath'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetResourcePath of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_GetResourcePath00
static int tolua_PX2_ResourceManager_GetResourcePath00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   std::string tolua_ret = (std::string)  ResourceManager::GetResourcePath();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetResourcePath'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SaveTex2DPNG of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_SaveTex2DPNG00
static int tolua_PX2_ResourceManager_SaveTex2DPNG00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Texture2D",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  Texture2D* tex2d = ((Texture2D*)  tolua_tousertype(tolua_S,2,0));
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SaveTex2DPNG'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->SaveTex2DPNG(tex2d,filename);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SaveTex2DPNG'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  LanguagePackage */
#ifndef TOLUA_DISABLE_tolua_PX2_LanguagePackage_new00
static int tolua_PX2_LanguagePackage_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LanguagePackage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   LanguagePackage* tolua_ret = (LanguagePackage*)  Mtolua_new((LanguagePackage)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LanguagePackage");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  LanguagePackage */
#ifndef TOLUA_DISABLE_tolua_PX2_LanguagePackage_new00_local
static int tolua_PX2_LanguagePackage_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LanguagePackage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   LanguagePackage* tolua_ret = (LanguagePackage*)  Mtolua_new((LanguagePackage)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LanguagePackage");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  LanguagePackage */
#ifndef TOLUA_DISABLE_tolua_PX2_LanguagePackage_delete00
static int tolua_PX2_LanguagePackage_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LanguagePackage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LanguagePackage* self = (LanguagePackage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Load of class  LanguagePackage */
#ifndef TOLUA_DISABLE_tolua_PX2_LanguagePackage_Load00
static int tolua_PX2_LanguagePackage_Load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LanguagePackage",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LanguagePackage* self = (LanguagePackage*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Load'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->Load(filename);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Add of class  LanguagePackage */
#ifndef TOLUA_DISABLE_tolua_PX2_LanguagePackage_Add00
static int tolua_PX2_LanguagePackage_Add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LanguagePackage",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LanguagePackage* self = (LanguagePackage*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Add'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->Add(filename);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddItem of class  LanguagePackage */
#ifndef TOLUA_DISABLE_tolua_PX2_LanguagePackage_AddItem00
static int tolua_PX2_LanguagePackage_AddItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LanguagePackage",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LanguagePackage* self = (LanguagePackage*)  tolua_tousertype(tolua_S,1,0);
  const std::string key = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string langauge0 = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
  const std::string langauge1 = ((const std::string)  tolua_tocppstring(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddItem'", NULL);
#endif
  {
   self->AddItem(key,langauge0,langauge1);
   tolua_pushcppstring(tolua_S,(const char*)key);
   tolua_pushcppstring(tolua_S,(const char*)langauge0);
   tolua_pushcppstring(tolua_S,(const char*)langauge1);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddItem1 of class  LanguagePackage */
#ifndef TOLUA_DISABLE_tolua_PX2_LanguagePackage_AddItem100
static int tolua_PX2_LanguagePackage_AddItem100(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LanguagePackage",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LanguagePackage* self = (LanguagePackage*)  tolua_tousertype(tolua_S,1,0);
  const std::string key = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string langauge0 = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddItem1'", NULL);
#endif
  {
   self->AddItem1(key,langauge0);
   tolua_pushcppstring(tolua_S,(const char*)key);
   tolua_pushcppstring(tolua_S,(const char*)langauge0);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddItem1'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLanguage of class  LanguagePackage */
#ifndef TOLUA_DISABLE_tolua_PX2_LanguagePackage_SetLanguage00
static int tolua_PX2_LanguagePackage_SetLanguage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LanguagePackage",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LanguagePackage* self = (LanguagePackage*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLanguage'", NULL);
#endif
  {
   self->SetLanguage(index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLanguage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: HasValue of class  LanguagePackage */
#ifndef TOLUA_DISABLE_tolua_PX2_LanguagePackage_HasValue00
static int tolua_PX2_LanguagePackage_HasValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const LanguagePackage",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const LanguagePackage* self = (const LanguagePackage*)  tolua_tousertype(tolua_S,1,0);
  const std::string key = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'HasValue'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->HasValue(key);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)key);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'HasValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetValue of class  LanguagePackage */
#ifndef TOLUA_DISABLE_tolua_PX2_LanguagePackage_GetValue00
static int tolua_PX2_LanguagePackage_GetValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LanguagePackage",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LanguagePackage* self = (LanguagePackage*)  tolua_tousertype(tolua_S,1,0);
  const std::string key = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetValue'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetValue(key);
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)key);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetValue of class  LanguagePackage */
#ifndef TOLUA_DISABLE_tolua_PX2_LanguagePackage_GetValue01
static int tolua_PX2_LanguagePackage_GetValue01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LanguagePackage",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  LanguagePackage* self = (LanguagePackage*)  tolua_tousertype(tolua_S,1,0);
  const std::string key = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  int index = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetValue'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetValue(key,index);
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)key);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_LanguagePackage_GetValue00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: V of class  LanguagePackage */
#ifndef TOLUA_DISABLE_tolua_PX2_LanguagePackage_V00
static int tolua_PX2_LanguagePackage_V00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LanguagePackage",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LanguagePackage* self = (LanguagePackage*)  tolua_tousertype(tolua_S,1,0);
  const std::string key = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'V'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->V(key);
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)key);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'V'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: V of class  LanguagePackage */
#ifndef TOLUA_DISABLE_tolua_PX2_LanguagePackage_V01
static int tolua_PX2_LanguagePackage_V01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LanguagePackage",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  LanguagePackage* self = (LanguagePackage*)  tolua_tousertype(tolua_S,1,0);
  const std::string key = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  int index = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'V'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->V(key,index);
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)key);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_LanguagePackage_V00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Clear of class  LanguagePackage */
#ifndef TOLUA_DISABLE_tolua_PX2_LanguagePackage_Clear00
static int tolua_PX2_LanguagePackage_Clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LanguagePackage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LanguagePackage* self = (LanguagePackage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Clear'", NULL);
#endif
  {
   self->Clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  LanguageManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LanguageManager_new00
static int tolua_PX2_LanguageManager_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LanguageManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   LanguageManager* tolua_ret = (LanguageManager*)  Mtolua_new((LanguageManager)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LanguageManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  LanguageManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LanguageManager_new00_local
static int tolua_PX2_LanguageManager_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LanguageManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   LanguageManager* tolua_ret = (LanguageManager*)  Mtolua_new((LanguageManager)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LanguageManager");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  LanguageManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LanguageManager_delete00
static int tolua_PX2_LanguageManager_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LanguageManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LanguageManager* self = (LanguageManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPackageEditor of class  LanguageManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LanguageManager_GetPackageEditor00
static int tolua_PX2_LanguageManager_GetPackageEditor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LanguageManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LanguageManager* self = (LanguageManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPackageEditor'", NULL);
#endif
  {
   LanguagePackage* tolua_ret = (LanguagePackage*)  self->GetPackageEditor();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LanguagePackage");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPackageEditor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPackageApp of class  LanguageManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LanguageManager_GetPackageApp00
static int tolua_PX2_LanguageManager_GetPackageApp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LanguageManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LanguageManager* self = (LanguageManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPackageApp'", NULL);
#endif
  {
   LanguagePackage* tolua_ret = (LanguagePackage*)  self->GetPackageApp();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LanguagePackage");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPackageApp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPackageApp1 of class  LanguageManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LanguageManager_GetPackageApp100
static int tolua_PX2_LanguageManager_GetPackageApp100(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LanguageManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LanguageManager* self = (LanguageManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPackageApp1'", NULL);
#endif
  {
   LanguagePackage* tolua_ret = (LanguagePackage*)  self->GetPackageApp1();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LanguagePackage");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPackageApp1'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ScriptContext */
#ifndef TOLUA_DISABLE_tolua_PX2_ScriptContext_delete00
static int tolua_PX2_ScriptContext_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScriptContext",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScriptContext* self = (ScriptContext*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CallString of class  ScriptContext */
#ifndef TOLUA_DISABLE_tolua_PX2_ScriptContext_CallString00
static int tolua_PX2_ScriptContext_CallString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScriptContext",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScriptContext* self = (ScriptContext*)  tolua_tousertype(tolua_S,1,0);
  const std::string str = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CallString'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->CallString(str);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)str);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CallString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CallFile of class  ScriptContext */
#ifndef TOLUA_DISABLE_tolua_PX2_ScriptContext_CallFile00
static int tolua_PX2_ScriptContext_CallFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScriptContext",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScriptContext* self = (ScriptContext*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CallFile'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->CallFile(filename);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CallFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  LuaContext */
#ifndef TOLUA_DISABLE_tolua_PX2_LuaContext_delete00
static int tolua_PX2_LuaContext_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaContext",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaContext* self = (LuaContext*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetContext of class  ScriptManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ScriptManager_GetContext00
static int tolua_PX2_ScriptManager_GetContext00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScriptManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScriptManager* self = (ScriptManager*)  tolua_tousertype(tolua_S,1,0);
  ScriptContext::ContextType type = ((ScriptContext::ContextType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetContext'", NULL);
#endif
  {
   ScriptContext* tolua_ret = (ScriptContext*)  self->GetContext(type);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ScriptContext");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetContext'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  ScriptController */
#ifndef TOLUA_DISABLE_tolua_PX2_ScriptController_new00
static int tolua_PX2_ScriptController_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ScriptController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ScriptController* tolua_ret = (ScriptController*)  Mtolua_new((ScriptController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ScriptController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  ScriptController */
#ifndef TOLUA_DISABLE_tolua_PX2_ScriptController_new00_local
static int tolua_PX2_ScriptController_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ScriptController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ScriptController* tolua_ret = (ScriptController*)  Mtolua_new((ScriptController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ScriptController");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ScriptController */
#ifndef TOLUA_DISABLE_tolua_PX2_ScriptController_delete00
static int tolua_PX2_ScriptController_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScriptController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScriptController* self = (ScriptController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  LuaScriptController */
#ifndef TOLUA_DISABLE_tolua_PX2_LuaScriptController_new00
static int tolua_PX2_LuaScriptController_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LuaScriptController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   LuaScriptController* tolua_ret = (LuaScriptController*)  Mtolua_new((LuaScriptController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LuaScriptController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  LuaScriptController */
#ifndef TOLUA_DISABLE_tolua_PX2_LuaScriptController_new00_local
static int tolua_PX2_LuaScriptController_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LuaScriptController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   LuaScriptController* tolua_ret = (LuaScriptController*)  Mtolua_new((LuaScriptController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LuaScriptController");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  LuaScriptController */
#ifndef TOLUA_DISABLE_tolua_PX2_LuaScriptController_delete00
static int tolua_PX2_LuaScriptController_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaScriptController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaScriptController* self = (LuaScriptController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SelfP of class  LuaScriptController */
#ifndef TOLUA_DISABLE_tolua_PX2_LuaScriptController_SelfP00
static int tolua_PX2_LuaScriptController_SelfP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const LuaScriptController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const LuaScriptController* self = (const LuaScriptController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SelfP'", NULL);
#endif
  {
   int tolua_ret = (int)  self->SelfP();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SelfP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetVal of class  LuaScriptController */
#ifndef TOLUA_DISABLE_tolua_PX2_LuaScriptController_SetVal00
static int tolua_PX2_LuaScriptController_SetVal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaScriptController",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaScriptController* self = (LuaScriptController*)  tolua_tousertype(tolua_S,1,0);
  const std::string key = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  int val = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetVal'", NULL);
#endif
  {
   self->SetVal(key,val);
   tolua_pushcppstring(tolua_S,(const char*)key);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetVal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetVal of class  LuaScriptController */
#ifndef TOLUA_DISABLE_tolua_PX2_LuaScriptController_SetVal01
static int tolua_PX2_LuaScriptController_SetVal01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaScriptController",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  LuaScriptController* self = (LuaScriptController*)  tolua_tousertype(tolua_S,1,0);
  const std::string key = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  bool val = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetVal'", NULL);
#endif
  {
   self->SetVal(key,val);
   tolua_pushcppstring(tolua_S,(const char*)key);
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_LuaScriptController_SetVal00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetVal of class  LuaScriptController */
#ifndef TOLUA_DISABLE_tolua_PX2_LuaScriptController_SetVal02
static int tolua_PX2_LuaScriptController_SetVal02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaScriptController",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  LuaScriptController* self = (LuaScriptController*)  tolua_tousertype(tolua_S,1,0);
  const std::string key = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  float val = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetVal'", NULL);
#endif
  {
   self->SetVal(key,val);
   tolua_pushcppstring(tolua_S,(const char*)key);
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_LuaScriptController_SetVal01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetVal of class  LuaScriptController */
#ifndef TOLUA_DISABLE_tolua_PX2_LuaScriptController_SetVal03
static int tolua_PX2_LuaScriptController_SetVal03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaScriptController",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  LuaScriptController* self = (LuaScriptController*)  tolua_tousertype(tolua_S,1,0);
  const std::string key = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string val = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetVal'", NULL);
#endif
  {
   self->SetVal(key,val);
   tolua_pushcppstring(tolua_S,(const char*)key);
   tolua_pushcppstring(tolua_S,(const char*)val);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_LuaScriptController_SetVal02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Selection */
#ifndef TOLUA_DISABLE_tolua_PX2_Selection_new00
static int tolua_PX2_Selection_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Selection",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Selection* tolua_ret = (Selection*)  Mtolua_new((Selection)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Selection");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Selection */
#ifndef TOLUA_DISABLE_tolua_PX2_Selection_new00_local
static int tolua_PX2_Selection_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Selection",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Selection* tolua_ret = (Selection*)  Mtolua_new((Selection)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Selection");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Selection */
#ifndef TOLUA_DISABLE_tolua_PX2_Selection_delete00
static int tolua_PX2_Selection_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Selection",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Selection* self = (Selection*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddObject of class  Selection */
#ifndef TOLUA_DISABLE_tolua_PX2_Selection_AddObject00
static int tolua_PX2_Selection_AddObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Selection",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Selection* self = (Selection*)  tolua_tousertype(tolua_S,1,0);
  Object* obj = ((Object*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddObject'", NULL);
#endif
  {
   self->AddObject(obj);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveObject of class  Selection */
#ifndef TOLUA_DISABLE_tolua_PX2_Selection_RemoveObject00
static int tolua_PX2_Selection_RemoveObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Selection",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Selection* self = (Selection*)  tolua_tousertype(tolua_S,1,0);
  Object* obj = ((Object*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveObject'", NULL);
#endif
  {
   self->RemoveObject(obj);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetObjectAt of class  Selection */
#ifndef TOLUA_DISABLE_tolua_PX2_Selection_GetObjectAt00
static int tolua_PX2_Selection_GetObjectAt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Selection",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Selection* self = (Selection*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetObjectAt'", NULL);
#endif
  {
   Object* tolua_ret = (Object*)  self->GetObjectAt(i);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Object");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetObjectAt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumObjects of class  Selection */
#ifndef TOLUA_DISABLE_tolua_PX2_Selection_GetNumObjects00
static int tolua_PX2_Selection_GetNumObjects00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Selection",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Selection* self = (Selection*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumObjects'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumObjects();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumObjects'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsObjectIn of class  Selection */
#ifndef TOLUA_DISABLE_tolua_PX2_Selection_IsObjectIn00
static int tolua_PX2_Selection_IsObjectIn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Selection",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Selection* self = (Selection*)  tolua_tousertype(tolua_S,1,0);
  Object* obj = ((Object*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsObjectIn'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsObjectIn(obj);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsObjectIn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Clear of class  Selection */
#ifndef TOLUA_DISABLE_tolua_PX2_Selection_Clear00
static int tolua_PX2_Selection_Clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Selection",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Selection* self = (Selection*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Clear'", NULL);
#endif
  {
   self->Clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFirstObject of class  Selection */
#ifndef TOLUA_DISABLE_tolua_PX2_Selection_GetFirstObject00
static int tolua_PX2_Selection_GetFirstObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Selection",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Selection* self = (const Selection*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFirstObject'", NULL);
#endif
  {
   Object* tolua_ret = (Object*)  self->GetFirstObject();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Object");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFirstObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Translate of class  Selection */
#ifndef TOLUA_DISABLE_tolua_PX2_Selection_Translate00
static int tolua_PX2_Selection_Translate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Selection",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Selection* self = (Selection*)  tolua_tousertype(tolua_S,1,0);
  AVector vec = *((AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Translate'", NULL);
#endif
  {
   self->Translate(vec);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Translate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: TranslateTo of class  Selection */
#ifndef TOLUA_DISABLE_tolua_PX2_Selection_TranslateTo00
static int tolua_PX2_Selection_TranslateTo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Selection",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Selection* self = (Selection*)  tolua_tousertype(tolua_S,1,0);
  APoint pos = *((APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'TranslateTo'", NULL);
#endif
  {
   self->TranslateTo(pos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'TranslateTo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddRolate of class  Selection */
#ifndef TOLUA_DISABLE_tolua_PX2_Selection_AddRolate00
static int tolua_PX2_Selection_AddRolate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Selection",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Selection* self = (Selection*)  tolua_tousertype(tolua_S,1,0);
  AVector vec = *((AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddRolate'", NULL);
#endif
  {
   self->AddRolate(vec);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddRolate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddScale of class  Selection */
#ifndef TOLUA_DISABLE_tolua_PX2_Selection_AddScale00
static int tolua_PX2_Selection_AddScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Selection",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Selection* self = (Selection*)  tolua_tousertype(tolua_S,1,0);
  AVector vec = *((AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddScale'", NULL);
#endif
  {
   self->AddScale(vec);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCenter of class  Selection */
#ifndef TOLUA_DISABLE_tolua_PX2_Selection_GetCenter00
static int tolua_PX2_Selection_GetCenter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Selection",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Selection* self = (const Selection*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCenter'", NULL);
#endif
  {
   const APoint& tolua_ret = (const APoint&)  self->GetCenter();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const APoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCenter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRadius of class  Selection */
#ifndef TOLUA_DISABLE_tolua_PX2_Selection_GetRadius00
static int tolua_PX2_Selection_GetRadius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Selection",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Selection* self = (const Selection*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRadius'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetRadius();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRadius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Clear of class  SelectionManager */
#ifndef TOLUA_DISABLE_tolua_PX2_SelectionManager_Clear00
static int tolua_PX2_SelectionManager_Clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SelectionManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SelectionManager* self = (SelectionManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Clear'", NULL);
#endif
  {
   self->Clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateAddSelection of class  SelectionManager */
#ifndef TOLUA_DISABLE_tolua_PX2_SelectionManager_CreateAddSelection00
static int tolua_PX2_SelectionManager_CreateAddSelection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SelectionManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SelectionManager* self = (SelectionManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateAddSelection'", NULL);
#endif
  {
   Selection* tolua_ret = (Selection*)  self->CreateAddSelection(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Selection");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateAddSelection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DestorySelecton of class  SelectionManager */
#ifndef TOLUA_DISABLE_tolua_PX2_SelectionManager_DestorySelecton00
static int tolua_PX2_SelectionManager_DestorySelecton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SelectionManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SelectionManager* self = (SelectionManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DestorySelecton'", NULL);
#endif
  {
   self->DestorySelecton(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DestorySelecton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSelecton of class  SelectionManager */
#ifndef TOLUA_DISABLE_tolua_PX2_SelectionManager_GetSelecton00
static int tolua_PX2_SelectionManager_GetSelecton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SelectionManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SelectionManager* self = (SelectionManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSelecton'", NULL);
#endif
  {
   Selection* tolua_ret = (Selection*)  self->GetSelecton(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Selection");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSelecton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  GPIO */
#ifndef TOLUA_DISABLE_tolua_PX2_GPIO_new00
static int tolua_PX2_GPIO_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GPIO",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   GPIO* tolua_ret = (GPIO*)  Mtolua_new((GPIO)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GPIO");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  GPIO */
#ifndef TOLUA_DISABLE_tolua_PX2_GPIO_new00_local
static int tolua_PX2_GPIO_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GPIO",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   GPIO* tolua_ret = (GPIO*)  Mtolua_new((GPIO)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GPIO");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  GPIO */
#ifndef TOLUA_DISABLE_tolua_PX2_GPIO_delete00
static int tolua_PX2_GPIO_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GPIO",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GPIO* self = (GPIO*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Export of class  GPIO */
#ifndef TOLUA_DISABLE_tolua_PX2_GPIO_Export00
static int tolua_PX2_GPIO_Export00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GPIO",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int gpio = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  GPIO::Export(gpio);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Export'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Unexport of class  GPIO */
#ifndef TOLUA_DISABLE_tolua_PX2_GPIO_Unexport00
static int tolua_PX2_GPIO_Unexport00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GPIO",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int gpio = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  GPIO::Unexport(gpio);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Unexport'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDriection of class  GPIO */
#ifndef TOLUA_DISABLE_tolua_PX2_GPIO_SetDriection00
static int tolua_PX2_GPIO_SetDriection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GPIO",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int gpio = ((int)  tolua_tonumber(tolua_S,2,0));
  const std::string dir = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  GPIO::SetDriection(gpio,dir);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)dir);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDriection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetValue of class  GPIO */
#ifndef TOLUA_DISABLE_tolua_PX2_GPIO_SetValue00
static int tolua_PX2_GPIO_SetValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GPIO",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int gpio = ((int)  tolua_tonumber(tolua_S,2,0));
  int val = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  GPIO::SetValue(gpio,val);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetValue of class  GPIO */
#ifndef TOLUA_DISABLE_tolua_PX2_GPIO_GetValue00
static int tolua_PX2_GPIO_GetValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GPIO",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int gpio = ((int)  tolua_tonumber(tolua_S,2,0));
  int val = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  GPIO::GetValue(gpio,val);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)val);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsAvailable of class  Bluetooth */
#ifndef TOLUA_DISABLE_tolua_PX2_Bluetooth_IsAvailable00
static int tolua_PX2_Bluetooth_IsAvailable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Bluetooth",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Bluetooth* self = (const Bluetooth*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsAvailable'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsAvailable();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsAvailable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsConnected of class  Bluetooth */
#ifndef TOLUA_DISABLE_tolua_PX2_Bluetooth_IsConnected00
static int tolua_PX2_Bluetooth_IsConnected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Bluetooth",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Bluetooth* self = (const Bluetooth*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsConnected'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsConnected();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsConnected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPairedDevices of class  Bluetooth */
#ifndef TOLUA_DISABLE_tolua_PX2_Bluetooth_GetPairedDevices00
static int tolua_PX2_Bluetooth_GetPairedDevices00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Bluetooth",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Bluetooth* self = (Bluetooth*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPairedDevices'", NULL);
#endif
  {
   std::vector<std::string> tolua_ret = (std::vector<std::string>)  self->GetPairedDevices();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<std::string>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<std::string>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<std::string>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<std::string>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPairedDevices'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DisConnect of class  Bluetooth */
#ifndef TOLUA_DISABLE_tolua_PX2_Bluetooth_DisConnect00
static int tolua_PX2_Bluetooth_DisConnect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Bluetooth",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Bluetooth* self = (Bluetooth*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DisConnect'", NULL);
#endif
  {
   self->DisConnect();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DisConnect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Connect of class  Bluetooth */
#ifndef TOLUA_DISABLE_tolua_PX2_Bluetooth_Connect00
static int tolua_PX2_Bluetooth_Connect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Bluetooth",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Bluetooth* self = (Bluetooth*)  tolua_tousertype(tolua_S,1,0);
  const std::string addr = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Connect'", NULL);
#endif
  {
   self->Connect(addr);
   tolua_pushcppstring(tolua_S,(const char*)addr);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Connect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Send of class  Bluetooth */
#ifndef TOLUA_DISABLE_tolua_PX2_Bluetooth_Send00
static int tolua_PX2_Bluetooth_Send00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Bluetooth",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Bluetooth* self = (Bluetooth*)  tolua_tousertype(tolua_S,1,0);
  const std::string str = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  bool isAppendCRLF = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Send'", NULL);
#endif
  {
   self->Send(str,isAppendCRLF);
   tolua_pushcppstring(tolua_S,(const char*)str);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Send'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DoDiscovery of class  Bluetooth */
#ifndef TOLUA_DISABLE_tolua_PX2_Bluetooth_DoDiscovery00
static int tolua_PX2_Bluetooth_DoDiscovery00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Bluetooth",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Bluetooth* self = (Bluetooth*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DoDiscovery'", NULL);
#endif
  {
   self->DoDiscovery();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DoDiscovery'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CancelDiscovery of class  Bluetooth */
#ifndef TOLUA_DISABLE_tolua_PX2_Bluetooth_CancelDiscovery00
static int tolua_PX2_Bluetooth_CancelDiscovery00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Bluetooth",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Bluetooth* self = (Bluetooth*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CancelDiscovery'", NULL);
#endif
  {
   self->CancelDiscovery();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CancelDiscovery'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_delete00
static int tolua_PX2_Effectable_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEffectableController of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetEffectableController00
static int tolua_PX2_Effectable_GetEffectableController00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEffectableController'", NULL);
#endif
  {
   EffectableController* tolua_ret = (EffectableController*)  self->GetEffectableController();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"EffectableController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEffectableController'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFixedBound of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetFixedBound00
static int tolua_PX2_Effectable_SetFixedBound00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  bool fixed = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFixedBound'", NULL);
#endif
  {
   self->SetFixedBound(fixed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFixedBound'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsFixedBound of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_IsFixedBound00
static int tolua_PX2_Effectable_IsFixedBound00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsFixedBound'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsFixedBound();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsFixedBound'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFixedBoundCenter of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetFixedBoundCenter00
static int tolua_PX2_Effectable_SetFixedBoundCenter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  const APoint* center = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFixedBoundCenter'", NULL);
#endif
  {
   self->SetFixedBoundCenter(*center);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFixedBoundCenter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFixedBoundCenter of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetFixedBoundCenter00
static int tolua_PX2_Effectable_GetFixedBoundCenter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFixedBoundCenter'", NULL);
#endif
  {
   APoint tolua_ret = (APoint)  self->GetFixedBoundCenter();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((APoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(APoint));
     tolua_pushusertype(tolua_S,tolua_obj,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFixedBoundCenter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFixedBoundRadius of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetFixedBoundRadius00
static int tolua_PX2_Effectable_SetFixedBoundRadius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  float radius = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFixedBoundRadius'", NULL);
#endif
  {
   self->SetFixedBoundRadius(radius);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFixedBoundRadius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFixedBoundRadius of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetFixedBoundRadius00
static int tolua_PX2_Effectable_GetFixedBoundRadius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFixedBoundRadius'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetFixedBoundRadius();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFixedBoundRadius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLocal of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetLocal00
static int tolua_PX2_Effectable_SetLocal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  bool l = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLocal'", NULL);
#endif
  {
   self->SetLocal(l);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLocal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsLocal of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_IsLocal00
static int tolua_PX2_Effectable_IsLocal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsLocal'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsLocal();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsLocal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEmitSizeX of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetEmitSizeX00
static int tolua_PX2_Effectable_SetEmitSizeX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  float val = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEmitSizeX'", NULL);
#endif
  {
   self->SetEmitSizeX(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEmitSizeX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEmitSizeX of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetEmitSizeX00
static int tolua_PX2_Effectable_GetEmitSizeX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEmitSizeX'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetEmitSizeX();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEmitSizeX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEmitSizeY of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetEmitSizeY00
static int tolua_PX2_Effectable_SetEmitSizeY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  float val = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEmitSizeY'", NULL);
#endif
  {
   self->SetEmitSizeY(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEmitSizeY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEmitSizeY of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetEmitSizeY00
static int tolua_PX2_Effectable_GetEmitSizeY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEmitSizeY'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetEmitSizeY();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEmitSizeY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEmitSizeZ of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetEmitSizeZ00
static int tolua_PX2_Effectable_SetEmitSizeZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  float val = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEmitSizeZ'", NULL);
#endif
  {
   self->SetEmitSizeZ(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEmitSizeZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEmitSizeZ of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetEmitSizeZ00
static int tolua_PX2_Effectable_GetEmitSizeZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEmitSizeZ'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetEmitSizeZ();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEmitSizeZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEmitSizeXYZ of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetEmitSizeXYZ00
static int tolua_PX2_Effectable_SetEmitSizeXYZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  float val = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEmitSizeXYZ'", NULL);
#endif
  {
   self->SetEmitSizeXYZ(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEmitSizeXYZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEmitColor of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetEmitColor00
static int tolua_PX2_Effectable_SetEmitColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  const Float3* color = ((const Float3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEmitColor'", NULL);
#endif
  {
   self->SetEmitColor(*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEmitColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEmitColor of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetEmitColor00
static int tolua_PX2_Effectable_GetEmitColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEmitColor'", NULL);
#endif
  {
   const Float3& tolua_ret = (const Float3&)  self->GetEmitColor();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float3");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEmitColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEmitAlpha of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetEmitAlpha00
static int tolua_PX2_Effectable_SetEmitAlpha00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  float alpha = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEmitAlpha'", NULL);
#endif
  {
   self->SetEmitAlpha(alpha);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEmitAlpha'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEmitAlpha of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetEmitAlpha00
static int tolua_PX2_Effectable_GetEmitAlpha00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEmitAlpha'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetEmitAlpha();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEmitAlpha'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEmitLife of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetEmitLife00
static int tolua_PX2_Effectable_SetEmitLife00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  float life = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEmitLife'", NULL);
#endif
  {
   self->SetEmitLife(life);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEmitLife'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEmitLife of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetEmitLife00
static int tolua_PX2_Effectable_GetEmitLife00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEmitLife'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetEmitLife();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEmitLife'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFaceType of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetFaceType00
static int tolua_PX2_Effectable_SetFaceType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  Effectable::FaceType type = ((Effectable::FaceType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFaceType'", NULL);
#endif
  {
   self->SetFaceType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFaceType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFaceType of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetFaceType00
static int tolua_PX2_Effectable_GetFaceType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFaceType'", NULL);
#endif
  {
   Effectable::FaceType tolua_ret = (Effectable::FaceType)  self->GetFaceType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFaceType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMaterialType of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetMaterialType00
static int tolua_PX2_Effectable_SetMaterialType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  Effectable::MaterialType type = ((Effectable::MaterialType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMaterialType'", NULL);
#endif
  {
   self->SetMaterialType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMaterialType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMaterialType of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetMaterialType00
static int tolua_PX2_Effectable_GetMaterialType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMaterialType'", NULL);
#endif
  {
   Effectable::MaterialType tolua_ret = (Effectable::MaterialType)  self->GetMaterialType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMaterialType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetBackCull of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetBackCull00
static int tolua_PX2_Effectable_SetBackCull00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  bool isBackCull = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetBackCull'", NULL);
#endif
  {
   self->SetBackCull(isBackCull);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetBackCull'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsBackCull of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_IsBackCull00
static int tolua_PX2_Effectable_IsBackCull00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsBackCull'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsBackCull();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsBackCull'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetBlendMode of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetBlendMode00
static int tolua_PX2_Effectable_SetBlendMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  Effectable::BlendMode mode = ((Effectable::BlendMode) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetBlendMode'", NULL);
#endif
  {
   self->SetBlendMode(mode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetBlendMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetBlendMode of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetBlendMode00
static int tolua_PX2_Effectable_GetBlendMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetBlendMode'", NULL);
#endif
  {
   Effectable::BlendMode tolua_ret = (Effectable::BlendMode)  self->GetBlendMode();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetBlendMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTexMode of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetTexMode00
static int tolua_PX2_Effectable_SetTexMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  Effectable::TexMode mode = ((Effectable::TexMode) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTexMode'", NULL);
#endif
  {
   self->SetTexMode(mode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTexMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTexMode of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetTexMode00
static int tolua_PX2_Effectable_GetTexMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTexMode'", NULL);
#endif
  {
   Effectable::TexMode tolua_ret = (Effectable::TexMode)  self->GetTexMode();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTexMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTex of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetTex00
static int tolua_PX2_Effectable_SetTex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTex'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->SetTex(filename);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTex of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetTex00
static int tolua_PX2_Effectable_GetTex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTex'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetTex();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTexPack_Ele of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetTexPack_Ele00
static int tolua_PX2_Effectable_SetTexPack_Ele00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  const std::string packFileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string eleName = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTexPack_Ele'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->SetTexPack_Ele(packFileName,eleName);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)packFileName);
   tolua_pushcppstring(tolua_S,(const char*)eleName);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTexPack_Ele'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTexPack_Ele of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetTexPack_Ele00
static int tolua_PX2_Effectable_GetTexPack_Ele00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
  std::string packFileName = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  std::string eleName = ((std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTexPack_Ele'", NULL);
#endif
  {
   self->GetTexPack_Ele(packFileName,eleName);
   tolua_pushcppstring(tolua_S,(const char*)packFileName);
   tolua_pushcppstring(tolua_S,(const char*)eleName);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTexPack_Ele'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTexAnim of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetTexAnim00
static int tolua_PX2_Effectable_SetTexAnim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTexAnim'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->SetTexAnim(filename);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTexAnim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTexAnim of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetTexAnim00
static int tolua_PX2_Effectable_GetTexAnim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTexAnim'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetTexAnim();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTexAnim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTexAnim_Repeat of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetTexAnim_Repeat00
static int tolua_PX2_Effectable_SetTexAnim_Repeat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  const Float2* repeat = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTexAnim_Repeat'", NULL);
#endif
  {
   self->SetTexAnim_Repeat(*repeat);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTexAnim_Repeat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTexAnim_Repeat of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetTexAnim_Repeat00
static int tolua_PX2_Effectable_GetTexAnim_Repeat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTexAnim_Repeat'", NULL);
#endif
  {
   const Float2& tolua_ret = (const Float2&)  self->GetTexAnim_Repeat();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTexAnim_Repeat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddTexsAnim_Frame of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_AddTexsAnim_Frame00
static int tolua_PX2_Effectable_AddTexsAnim_Frame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddTexsAnim_Frame'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->AddTexsAnim_Frame(filename);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddTexsAnim_Frame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTexPackAnim of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetTexPackAnim00
static int tolua_PX2_Effectable_SetTexPackAnim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  const std::string texPackFilename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTexPackAnim'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->SetTexPackAnim(texPackFilename);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)texPackFilename);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTexPackAnim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTexPackAnim of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetTexPackAnim00
static int tolua_PX2_Effectable_GetTexPackAnim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTexPackAnim'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetTexPackAnim();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTexPackAnim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddTexPackAnim_Frame of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_AddTexPackAnim_Frame00
static int tolua_PX2_Effectable_AddTexPackAnim_Frame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  const std::string texPackFilename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string eleName = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddTexPackAnim_Frame'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->AddTexPackAnim_Frame(texPackFilename,eleName);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)texPackFilename);
   tolua_pushcppstring(tolua_S,(const char*)eleName);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddTexPackAnim_Frame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumTexAnimTexPackAnimFrames of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetNumTexAnimTexPackAnimFrames00
static int tolua_PX2_Effectable_GetNumTexAnimTexPackAnimFrames00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumTexAnimTexPackAnimFrames'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumTexAnimTexPackAnimFrames();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumTexAnimTexPackAnimFrames'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ClearTexAnimTexPackAnimFrames of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_ClearTexAnimTexPackAnimFrames00
static int tolua_PX2_Effectable_ClearTexAnimTexPackAnimFrames00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ClearTexAnimTexPackAnimFrames'", NULL);
#endif
  {
   self->ClearTexAnimTexPackAnimFrames();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ClearTexAnimTexPackAnimFrames'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAnimInterval of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetAnimInterval00
static int tolua_PX2_Effectable_SetAnimInterval00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  float seconds = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAnimInterval'", NULL);
#endif
  {
   self->SetAnimInterval(seconds);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAnimInterval'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnimInterval of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetAnimInterval00
static int tolua_PX2_Effectable_GetAnimInterval00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnimInterval'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetAnimInterval();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnimInterval'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAnimStartDoRandom of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetAnimStartDoRandom00
static int tolua_PX2_Effectable_SetAnimStartDoRandom00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  bool doRandom = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAnimStartDoRandom'", NULL);
#endif
  {
   self->SetAnimStartDoRandom(doRandom);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAnimStartDoRandom'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsAnimStartDoRandom of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_IsAnimStartDoRandom00
static int tolua_PX2_Effectable_IsAnimStartDoRandom00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsAnimStartDoRandom'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsAnimStartDoRandom();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsAnimStartDoRandom'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUserNumAnimFrames of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetUserNumAnimFrames00
static int tolua_PX2_Effectable_SetUserNumAnimFrames00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  int userNumAnimFrames = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUserNumAnimFrames'", NULL);
#endif
  {
   self->SetUserNumAnimFrames(userNumAnimFrames);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUserNumAnimFrames'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUserNumAnimFrames of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetUserNumAnimFrames00
static int tolua_PX2_Effectable_GetUserNumAnimFrames00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUserNumAnimFrames'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetUserNumAnimFrames();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUserNumAnimFrames'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumAnimFrames of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetNumAnimFrames00
static int tolua_PX2_Effectable_GetNumAnimFrames00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumAnimFrames'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumAnimFrames();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumAnimFrames'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAnimFramesPlayOnce of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetAnimFramesPlayOnce00
static int tolua_PX2_Effectable_SetAnimFramesPlayOnce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  bool playOnce = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAnimFramesPlayOnce'", NULL);
#endif
  {
   self->SetAnimFramesPlayOnce(playOnce);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAnimFramesPlayOnce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsAnimFramesPlayOnce of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_IsAnimFramesPlayOnce00
static int tolua_PX2_Effectable_IsAnimFramesPlayOnce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsAnimFramesPlayOnce'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsAnimFramesPlayOnce();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsAnimFramesPlayOnce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMaskTex of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetMaskTex00
static int tolua_PX2_Effectable_SetMaskTex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMaskTex'", NULL);
#endif
  {
   self->SetMaskTex(filename);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMaskTex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMaskTex of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetMaskTex00
static int tolua_PX2_Effectable_GetMaskTex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMaskTex'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetMaskTex();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMaskTex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEmitUV0_Offset of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetEmitUV0_Offset00
static int tolua_PX2_Effectable_SetEmitUV0_Offset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  const Float2* offset = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEmitUV0_Offset'", NULL);
#endif
  {
   self->SetEmitUV0_Offset(*offset);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEmitUV0_Offset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEmitUV0_Offset of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetEmitUV0_Offset00
static int tolua_PX2_Effectable_GetEmitUV0_Offset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEmitUV0_Offset'", NULL);
#endif
  {
   const Float2& tolua_ret = (const Float2&)  self->GetEmitUV0_Offset();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEmitUV0_Offset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEmitUV0_Speed of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetEmitUV0_Speed00
static int tolua_PX2_Effectable_SetEmitUV0_Speed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  const Float2* speed = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEmitUV0_Speed'", NULL);
#endif
  {
   self->SetEmitUV0_Speed(*speed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEmitUV0_Speed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEmitUV0_Speed of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetEmitUV0_Speed00
static int tolua_PX2_Effectable_GetEmitUV0_Speed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEmitUV0_Speed'", NULL);
#endif
  {
   const Float2& tolua_ret = (const Float2&)  self->GetEmitUV0_Speed();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEmitUV0_Speed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEmitUV0_Repeat of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetEmitUV0_Repeat00
static int tolua_PX2_Effectable_SetEmitUV0_Repeat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  const Float2* repeat = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEmitUV0_Repeat'", NULL);
#endif
  {
   self->SetEmitUV0_Repeat(*repeat);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEmitUV0_Repeat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEmitUV0_Repeat of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetEmitUV0_Repeat00
static int tolua_PX2_Effectable_GetEmitUV0_Repeat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEmitUV0_Repeat'", NULL);
#endif
  {
   const Float2& tolua_ret = (const Float2&)  self->GetEmitUV0_Repeat();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEmitUV0_Repeat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUV1_Offset of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetUV1_Offset00
static int tolua_PX2_Effectable_SetUV1_Offset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  const Float2* offset = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUV1_Offset'", NULL);
#endif
  {
   self->SetUV1_Offset(*offset);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUV1_Offset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUV1_Offset of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetUV1_Offset00
static int tolua_PX2_Effectable_GetUV1_Offset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUV1_Offset'", NULL);
#endif
  {
   const Float2& tolua_ret = (const Float2&)  self->GetUV1_Offset();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUV1_Offset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUV1_Repeat of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetUV1_Repeat00
static int tolua_PX2_Effectable_SetUV1_Repeat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  const Float2* repeat = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUV1_Repeat'", NULL);
#endif
  {
   self->SetUV1_Repeat(*repeat);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUV1_Repeat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUV1_Repeat of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetUV1_Repeat00
static int tolua_PX2_Effectable_GetUV1_Repeat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUV1_Repeat'", NULL);
#endif
  {
   const Float2& tolua_ret = (const Float2&)  self->GetUV1_Repeat();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUV1_Repeat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUV1_Speed of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetUV1_Speed00
static int tolua_PX2_Effectable_SetUV1_Speed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  const Float2* speed = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUV1_Speed'", NULL);
#endif
  {
   self->SetUV1_Speed(*speed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUV1_Speed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUV1_Speed of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetUV1_Speed00
static int tolua_PX2_Effectable_GetUV1_Speed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUV1_Speed'", NULL);
#endif
  {
   const Float2& tolua_ret = (const Float2&)  self->GetUV1_Speed();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUV1_Speed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCoordinateType0 of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetCoordinateType000
static int tolua_PX2_Effectable_SetCoordinateType000(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  Effectable::CoordinateType type = ((Effectable::CoordinateType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCoordinateType0'", NULL);
#endif
  {
   self->SetCoordinateType0(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCoordinateType0'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCoordinateType0 of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetCoordinateType000
static int tolua_PX2_Effectable_GetCoordinateType000(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCoordinateType0'", NULL);
#endif
  {
   Effectable::CoordinateType tolua_ret = (Effectable::CoordinateType)  self->GetCoordinateType0();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCoordinateType0'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCoordinateType1 of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_SetCoordinateType100
static int tolua_PX2_Effectable_SetCoordinateType100(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Effectable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Effectable* self = (Effectable*)  tolua_tousertype(tolua_S,1,0);
  Effectable::CoordinateType type = ((Effectable::CoordinateType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCoordinateType1'", NULL);
#endif
  {
   self->SetCoordinateType1(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCoordinateType1'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCoordinateType1 of class  Effectable */
#ifndef TOLUA_DISABLE_tolua_PX2_Effectable_GetCoordinateType100
static int tolua_PX2_Effectable_GetCoordinateType100(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Effectable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Effectable* self = (const Effectable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCoordinateType1'", NULL);
#endif
  {
   Effectable::CoordinateType tolua_ret = (Effectable::CoordinateType)  self->GetCoordinateType1();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCoordinateType1'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_new00
static int tolua_PX2_BeamEmitter_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"BeamEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   BeamEmitter* tolua_ret = (BeamEmitter*)  Mtolua_new((BeamEmitter)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BeamEmitter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_new00_local
static int tolua_PX2_BeamEmitter_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"BeamEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   BeamEmitter* tolua_ret = (BeamEmitter*)  Mtolua_new((BeamEmitter)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BeamEmitter");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_delete00
static int tolua_PX2_BeamEmitter_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamEmitter* self = (BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetNumMaxBeams of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_SetNumMaxBeams00
static int tolua_PX2_BeamEmitter_SetNumMaxBeams00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamEmitter* self = (BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
  int num = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetNumMaxBeams'", NULL);
#endif
  {
   self->SetNumMaxBeams(num);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetNumMaxBeams'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumMaxBeams of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_GetNumMaxBeams00
static int tolua_PX2_BeamEmitter_GetNumMaxBeams00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const BeamEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const BeamEmitter* self = (const BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumMaxBeams'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumMaxBeams();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumMaxBeams'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEmitRate of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_SetEmitRate00
static int tolua_PX2_BeamEmitter_SetEmitRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamEmitter* self = (BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
  float rate = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEmitRate'", NULL);
#endif
  {
   self->SetEmitRate(rate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEmitRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEmitRate of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_GetEmitRate00
static int tolua_PX2_BeamEmitter_GetEmitRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const BeamEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const BeamEmitter* self = (const BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEmitRate'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetEmitRate();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEmitRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEmitStartPos of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_SetEmitStartPos00
static int tolua_PX2_BeamEmitter_SetEmitStartPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamEmitter",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamEmitter* self = (BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
  const APoint* startPos = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEmitStartPos'", NULL);
#endif
  {
   self->SetEmitStartPos(*startPos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEmitStartPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEmitStartPos of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_GetEmitStartPos00
static int tolua_PX2_BeamEmitter_GetEmitStartPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const BeamEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const BeamEmitter* self = (const BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEmitStartPos'", NULL);
#endif
  {
   const APoint& tolua_ret = (const APoint&)  self->GetEmitStartPos();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const APoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEmitStartPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEmitEndPos of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_SetEmitEndPos00
static int tolua_PX2_BeamEmitter_SetEmitEndPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamEmitter",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamEmitter* self = (BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
  const APoint* endPos = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEmitEndPos'", NULL);
#endif
  {
   self->SetEmitEndPos(*endPos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEmitEndPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEmitEndPos of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_GetEmitEndPos00
static int tolua_PX2_BeamEmitter_GetEmitEndPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const BeamEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const BeamEmitter* self = (const BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEmitEndPos'", NULL);
#endif
  {
   const APoint& tolua_ret = (const APoint&)  self->GetEmitEndPos();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const APoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEmitEndPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetStartPosUseLocal of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_SetStartPosUseLocal00
static int tolua_PX2_BeamEmitter_SetStartPosUseLocal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamEmitter",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamEmitter* self = (BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
  bool startUseLocal = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetStartPosUseLocal'", NULL);
#endif
  {
   self->SetStartPosUseLocal(startUseLocal);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetStartPosUseLocal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsStartPosUseLocal of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_IsStartPosUseLocal00
static int tolua_PX2_BeamEmitter_IsStartPosUseLocal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const BeamEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const BeamEmitter* self = (const BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsStartPosUseLocal'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsStartPosUseLocal();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsStartPosUseLocal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSimpleLineWave of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_SetSimpleLineWave00
static int tolua_PX2_BeamEmitter_SetSimpleLineWave00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamEmitter",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamEmitter* self = (BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
  bool simpleLineWave = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSimpleLineWave'", NULL);
#endif
  {
   self->SetSimpleLineWave(simpleLineWave);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSimpleLineWave'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsSimpleLineWave of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_IsSimpleLineWave00
static int tolua_PX2_BeamEmitter_IsSimpleLineWave00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const BeamEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const BeamEmitter* self = (const BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsSimpleLineWave'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsSimpleLineWave();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsSimpleLineWave'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSimpleLineDoAlphaDisAfterStopSpeed of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_SetSimpleLineDoAlphaDisAfterStopSpeed00
static int tolua_PX2_BeamEmitter_SetSimpleLineDoAlphaDisAfterStopSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamEmitter* self = (BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
  float speed = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSimpleLineDoAlphaDisAfterStopSpeed'", NULL);
#endif
  {
   self->SetSimpleLineDoAlphaDisAfterStopSpeed(speed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSimpleLineDoAlphaDisAfterStopSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSimpleLineDoAlphaDisAfterStopSpeed of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_GetSimpleLineDoAlphaDisAfterStopSpeed00
static int tolua_PX2_BeamEmitter_GetSimpleLineDoAlphaDisAfterStopSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const BeamEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const BeamEmitter* self = (const BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSimpleLineDoAlphaDisAfterStopSpeed'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetSimpleLineDoAlphaDisAfterStopSpeed();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSimpleLineDoAlphaDisAfterStopSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetWaveTypeUp of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_SetWaveTypeUp00
static int tolua_PX2_BeamEmitter_SetWaveTypeUp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamEmitter* self = (BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
  BeamEmitter::WaveType type = ((BeamEmitter::WaveType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetWaveTypeUp'", NULL);
#endif
  {
   self->SetWaveTypeUp(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetWaveTypeUp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWaveTypeUp of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_GetWaveTypeUp00
static int tolua_PX2_BeamEmitter_GetWaveTypeUp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const BeamEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const BeamEmitter* self = (const BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWaveTypeUp'", NULL);
#endif
  {
   BeamEmitter::WaveType tolua_ret = (BeamEmitter::WaveType)  self->GetWaveTypeUp();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWaveTypeUp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetWaveTypeExtend of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_SetWaveTypeExtend00
static int tolua_PX2_BeamEmitter_SetWaveTypeExtend00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamEmitter* self = (BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
  BeamEmitter::WaveType type = ((BeamEmitter::WaveType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetWaveTypeExtend'", NULL);
#endif
  {
   self->SetWaveTypeExtend(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetWaveTypeExtend'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWaveTypeExtend of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_GetWaveTypeExtend00
static int tolua_PX2_BeamEmitter_GetWaveTypeExtend00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const BeamEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const BeamEmitter* self = (const BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWaveTypeExtend'", NULL);
#endif
  {
   BeamEmitter::WaveType tolua_ret = (BeamEmitter::WaveType)  self->GetWaveTypeExtend();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWaveTypeExtend'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetNumLowFrequency of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_SetNumLowFrequency00
static int tolua_PX2_BeamEmitter_SetNumLowFrequency00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamEmitter* self = (BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
  int numLow = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetNumLowFrequency'", NULL);
#endif
  {
   self->SetNumLowFrequency(numLow);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetNumLowFrequency'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumLowFrequency of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_GetNumLowFrequency00
static int tolua_PX2_BeamEmitter_GetNumLowFrequency00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const BeamEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const BeamEmitter* self = (const BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumLowFrequency'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumLowFrequency();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumLowFrequency'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetNumHighFrequency of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_SetNumHighFrequency00
static int tolua_PX2_BeamEmitter_SetNumHighFrequency00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamEmitter* self = (BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
  int numHigh = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetNumHighFrequency'", NULL);
#endif
  {
   self->SetNumHighFrequency(numHigh);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetNumHighFrequency'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumHighFrequency of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_GetNumHighFrequency00
static int tolua_PX2_BeamEmitter_GetNumHighFrequency00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const BeamEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const BeamEmitter* self = (const BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumHighFrequency'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumHighFrequency();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumHighFrequency'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLowFrequencyRangeUp of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_SetLowFrequencyRangeUp00
static int tolua_PX2_BeamEmitter_SetLowFrequencyRangeUp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamEmitter",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamEmitter* self = (BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
  const Float2* range = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLowFrequencyRangeUp'", NULL);
#endif
  {
   self->SetLowFrequencyRangeUp(*range);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLowFrequencyRangeUp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLowFrequencyRangeExtend of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_SetLowFrequencyRangeExtend00
static int tolua_PX2_BeamEmitter_SetLowFrequencyRangeExtend00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamEmitter",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamEmitter* self = (BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
  const Float2* range = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLowFrequencyRangeExtend'", NULL);
#endif
  {
   self->SetLowFrequencyRangeExtend(*range);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLowFrequencyRangeExtend'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLowFrequencyRangeUp of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_GetLowFrequencyRangeUp00
static int tolua_PX2_BeamEmitter_GetLowFrequencyRangeUp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const BeamEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const BeamEmitter* self = (const BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLowFrequencyRangeUp'", NULL);
#endif
  {
   const Float2& tolua_ret = (const Float2&)  self->GetLowFrequencyRangeUp();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLowFrequencyRangeUp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLowFrequencyRangeExtend of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_GetLowFrequencyRangeExtend00
static int tolua_PX2_BeamEmitter_GetLowFrequencyRangeExtend00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const BeamEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const BeamEmitter* self = (const BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLowFrequencyRangeExtend'", NULL);
#endif
  {
   const Float2& tolua_ret = (const Float2&)  self->GetLowFrequencyRangeExtend();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLowFrequencyRangeExtend'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetHighFrequencyRangeUp of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_SetHighFrequencyRangeUp00
static int tolua_PX2_BeamEmitter_SetHighFrequencyRangeUp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamEmitter",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamEmitter* self = (BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
  const Float2* range = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetHighFrequencyRangeUp'", NULL);
#endif
  {
   self->SetHighFrequencyRangeUp(*range);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetHighFrequencyRangeUp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetHighFrequencyRangeExtend of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_SetHighFrequencyRangeExtend00
static int tolua_PX2_BeamEmitter_SetHighFrequencyRangeExtend00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamEmitter",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamEmitter* self = (BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
  const Float2* range = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetHighFrequencyRangeExtend'", NULL);
#endif
  {
   self->SetHighFrequencyRangeExtend(*range);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetHighFrequencyRangeExtend'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetHighFrequencyRangeUp of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_GetHighFrequencyRangeUp00
static int tolua_PX2_BeamEmitter_GetHighFrequencyRangeUp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const BeamEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const BeamEmitter* self = (const BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetHighFrequencyRangeUp'", NULL);
#endif
  {
   const Float2& tolua_ret = (const Float2&)  self->GetHighFrequencyRangeUp();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetHighFrequencyRangeUp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetHighFrequencyRangeExtend of class  BeamEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_BeamEmitter_GetHighFrequencyRangeExtend00
static int tolua_PX2_BeamEmitter_GetHighFrequencyRangeExtend00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const BeamEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const BeamEmitter* self = (const BeamEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetHighFrequencyRangeExtend'", NULL);
#endif
  {
   const Float2& tolua_ret = (const Float2&)  self->GetHighFrequencyRangeExtend();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetHighFrequencyRangeExtend'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Billboard */
#ifndef TOLUA_DISABLE_tolua_PX2_Billboard_new00
static int tolua_PX2_Billboard_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Billboard",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Billboard* tolua_ret = (Billboard*)  Mtolua_new((Billboard)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Billboard");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Billboard */
#ifndef TOLUA_DISABLE_tolua_PX2_Billboard_new00_local
static int tolua_PX2_Billboard_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Billboard",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Billboard* tolua_ret = (Billboard*)  Mtolua_new((Billboard)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Billboard");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Billboard */
#ifndef TOLUA_DISABLE_tolua_PX2_Billboard_delete00
static int tolua_PX2_Billboard_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Billboard",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Billboard* self = (Billboard*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDynamic of class  Billboard */
#ifndef TOLUA_DISABLE_tolua_PX2_Billboard_SetDynamic00
static int tolua_PX2_Billboard_SetDynamic00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Billboard",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Billboard* self = (Billboard*)  tolua_tousertype(tolua_S,1,0);
  bool isDynamic = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDynamic'", NULL);
#endif
  {
   self->SetDynamic(isDynamic);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDynamic'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsDynamic of class  Billboard */
#ifndef TOLUA_DISABLE_tolua_PX2_Billboard_IsDynamic00
static int tolua_PX2_Billboard_IsDynamic00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Billboard",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Billboard* self = (const Billboard*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsDynamic'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsDynamic();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsDynamic'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPivot of class  Billboard */
#ifndef TOLUA_DISABLE_tolua_PX2_Billboard_SetPivot00
static int tolua_PX2_Billboard_SetPivot00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Billboard",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Billboard* self = (Billboard*)  tolua_tousertype(tolua_S,1,0);
  float anchX = ((float)  tolua_tonumber(tolua_S,2,0));
  float anchZ = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPivot'", NULL);
#endif
  {
   self->SetPivot(anchX,anchZ);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPivot'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPivot of class  Billboard */
#ifndef TOLUA_DISABLE_tolua_PX2_Billboard_SetPivot01
static int tolua_PX2_Billboard_SetPivot01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Billboard",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Billboard* self = (Billboard*)  tolua_tousertype(tolua_S,1,0);
  const Float2* anchor = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPivot'", NULL);
#endif
  {
   self->SetPivot(*anchor);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Billboard_SetPivot00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPivot of class  Billboard */
#ifndef TOLUA_DISABLE_tolua_PX2_Billboard_GetPivot00
static int tolua_PX2_Billboard_GetPivot00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Billboard",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Billboard* self = (const Billboard*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPivot'", NULL);
#endif
  {
   const Float2& tolua_ret = (const Float2&)  self->GetPivot();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPivot'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUseTexAsSize of class  Billboard */
#ifndef TOLUA_DISABLE_tolua_PX2_Billboard_SetUseTexAsSize00
static int tolua_PX2_Billboard_SetUseTexAsSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Billboard",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Billboard* self = (Billboard*)  tolua_tousertype(tolua_S,1,0);
  bool use = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUseTexAsSize'", NULL);
#endif
  {
   self->SetUseTexAsSize(use);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUseTexAsSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsUseTexAsSize of class  Billboard */
#ifndef TOLUA_DISABLE_tolua_PX2_Billboard_IsUseTexAsSize00
static int tolua_PX2_Billboard_IsUseTexAsSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Billboard",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Billboard* self = (const Billboard*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsUseTexAsSize'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsUseTexAsSize();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsUseTexAsSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUseTrim of class  Billboard */
#ifndef TOLUA_DISABLE_tolua_PX2_Billboard_SetUseTrim00
static int tolua_PX2_Billboard_SetUseTrim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Billboard",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Billboard* self = (Billboard*)  tolua_tousertype(tolua_S,1,0);
  bool useTrim = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUseTrim'", NULL);
#endif
  {
   self->SetUseTrim(useTrim);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUseTrim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsUseTrim of class  Billboard */
#ifndef TOLUA_DISABLE_tolua_PX2_Billboard_IsUseTrim00
static int tolua_PX2_Billboard_IsUseTrim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Billboard",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Billboard* self = (const Billboard*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsUseTrim'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsUseTrim();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsUseTrim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDoAlphaDisAfterStop of class  Billboard */
#ifndef TOLUA_DISABLE_tolua_PX2_Billboard_SetDoAlphaDisAfterStop00
static int tolua_PX2_Billboard_SetDoAlphaDisAfterStop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Billboard",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Billboard* self = (Billboard*)  tolua_tousertype(tolua_S,1,0);
  bool doAlphaDis = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDoAlphaDisAfterStop'", NULL);
#endif
  {
   self->SetDoAlphaDisAfterStop(doAlphaDis);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDoAlphaDisAfterStop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsDoAlphaDisAfterStop of class  Billboard */
#ifndef TOLUA_DISABLE_tolua_PX2_Billboard_IsDoAlphaDisAfterStop00
static int tolua_PX2_Billboard_IsDoAlphaDisAfterStop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Billboard",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Billboard* self = (const Billboard*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsDoAlphaDisAfterStop'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsDoAlphaDisAfterStop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsDoAlphaDisAfterStop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDoAlphaDisAfterStopSpeed of class  Billboard */
#ifndef TOLUA_DISABLE_tolua_PX2_Billboard_SetDoAlphaDisAfterStopSpeed00
static int tolua_PX2_Billboard_SetDoAlphaDisAfterStopSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Billboard",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Billboard* self = (Billboard*)  tolua_tousertype(tolua_S,1,0);
  float speed = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDoAlphaDisAfterStopSpeed'", NULL);
#endif
  {
   self->SetDoAlphaDisAfterStopSpeed(speed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDoAlphaDisAfterStopSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDoAlphaDisAfterStopSpeed of class  Billboard */
#ifndef TOLUA_DISABLE_tolua_PX2_Billboard_GetDoAlphaDisAfterStopSpeed00
static int tolua_PX2_Billboard_GetDoAlphaDisAfterStopSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Billboard",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Billboard* self = (const Billboard*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDoAlphaDisAfterStopSpeed'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetDoAlphaDisAfterStopSpeed();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDoAlphaDisAfterStopSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSizeImmediate of class  Billboard */
#ifndef TOLUA_DISABLE_tolua_PX2_Billboard_SetSizeImmediate00
static int tolua_PX2_Billboard_SetSizeImmediate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Billboard",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Billboard* self = (Billboard*)  tolua_tousertype(tolua_S,1,0);
  float sizeX = ((float)  tolua_tonumber(tolua_S,2,0));
  float sizeY = ((float)  tolua_tonumber(tolua_S,3,0));
  float sizeZ = ((float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSizeImmediate'", NULL);
#endif
  {
   self->SetSizeImmediate(sizeX,sizeY,sizeZ);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSizeImmediate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CameraShake */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraShake_new00
static int tolua_PX2_CameraShake_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CameraShake",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CameraShake* tolua_ret = (CameraShake*)  Mtolua_new((CameraShake)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CameraShake");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CameraShake */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraShake_new00_local
static int tolua_PX2_CameraShake_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CameraShake",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CameraShake* tolua_ret = (CameraShake*)  Mtolua_new((CameraShake)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CameraShake");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CameraShake */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraShake_delete00
static int tolua_PX2_CameraShake_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CameraShake",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CameraShake* self = (CameraShake*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Play of class  CameraShake */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraShake_Play00
static int tolua_PX2_CameraShake_Play00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CameraShake",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CameraShake* self = (CameraShake*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Play'", NULL);
#endif
  {
   self->Play();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Play'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Stop of class  CameraShake */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraShake_Stop00
static int tolua_PX2_CameraShake_Stop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CameraShake",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CameraShake* self = (CameraShake*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Stop'", NULL);
#endif
  {
   self->Stop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Stop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUseX of class  CameraShake */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraShake_SetUseX00
static int tolua_PX2_CameraShake_SetUseX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CameraShake",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CameraShake* self = (CameraShake*)  tolua_tousertype(tolua_S,1,0);
  bool use = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUseX'", NULL);
#endif
  {
   self->SetUseX(use);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUseX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsUseX of class  CameraShake */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraShake_IsUseX00
static int tolua_PX2_CameraShake_IsUseX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const CameraShake",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const CameraShake* self = (const CameraShake*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsUseX'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsUseX();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsUseX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUseY of class  CameraShake */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraShake_SetUseY00
static int tolua_PX2_CameraShake_SetUseY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CameraShake",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CameraShake* self = (CameraShake*)  tolua_tousertype(tolua_S,1,0);
  bool use = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUseY'", NULL);
#endif
  {
   self->SetUseY(use);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUseY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsUseY of class  CameraShake */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraShake_IsUseY00
static int tolua_PX2_CameraShake_IsUseY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const CameraShake",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const CameraShake* self = (const CameraShake*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsUseY'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsUseY();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsUseY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUseZ of class  CameraShake */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraShake_SetUseZ00
static int tolua_PX2_CameraShake_SetUseZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CameraShake",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CameraShake* self = (CameraShake*)  tolua_tousertype(tolua_S,1,0);
  bool use = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUseZ'", NULL);
#endif
  {
   self->SetUseZ(use);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUseZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsUseZ of class  CameraShake */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraShake_IsUseZ00
static int tolua_PX2_CameraShake_IsUseZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const CameraShake",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const CameraShake* self = (const CameraShake*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsUseZ'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsUseZ();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsUseZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMaxDistance of class  CameraShake */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraShake_SetMaxDistance00
static int tolua_PX2_CameraShake_SetMaxDistance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CameraShake",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CameraShake* self = (CameraShake*)  tolua_tousertype(tolua_S,1,0);
  float dist = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMaxDistance'", NULL);
#endif
  {
   self->SetMaxDistance(dist);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMaxDistance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMaxDistance of class  CameraShake */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraShake_GetMaxDistance00
static int tolua_PX2_CameraShake_GetMaxDistance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const CameraShake",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const CameraShake* self = (const CameraShake*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMaxDistance'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetMaxDistance();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMaxDistance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEmitStrength of class  CameraShake */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraShake_SetEmitStrength00
static int tolua_PX2_CameraShake_SetEmitStrength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CameraShake",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CameraShake* self = (CameraShake*)  tolua_tousertype(tolua_S,1,0);
  float strength = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEmitStrength'", NULL);
#endif
  {
   self->SetEmitStrength(strength);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEmitStrength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEmitStrength of class  CameraShake */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraShake_GetEmitStrength00
static int tolua_PX2_CameraShake_GetEmitStrength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const CameraShake",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const CameraShake* self = (const CameraShake*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEmitStrength'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetEmitStrength();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEmitStrength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetShakeChannel of class  CameraShake */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraShake_GetShakeChannel00
static int tolua_PX2_CameraShake_GetShakeChannel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const CameraShake",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const CameraShake* self = (const CameraShake*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetShakeChannel'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetShakeChannel();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetShakeChannel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  EffectModel */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModel_new00
static int tolua_PX2_EffectModel_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"EffectModel",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   EffectModel* tolua_ret = (EffectModel*)  Mtolua_new((EffectModel)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"EffectModel");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  EffectModel */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModel_new00_local
static int tolua_PX2_EffectModel_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"EffectModel",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   EffectModel* tolua_ret = (EffectModel*)  Mtolua_new((EffectModel)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"EffectModel");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  EffectModel */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModel_delete00
static int tolua_PX2_EffectModel_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectModel",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectModel* self = (EffectModel*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Reset of class  EffectModel */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModel_Reset00
static int tolua_PX2_EffectModel_Reset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectModel",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectModel* self = (EffectModel*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Reset'", NULL);
#endif
  {
   self->Reset();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Reset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetModelType of class  EffectModel */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModel_SetModelType00
static int tolua_PX2_EffectModel_SetModelType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectModel",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectModel* self = (EffectModel*)  tolua_tousertype(tolua_S,1,0);
  EffectModel::ModelType modelType = ((EffectModel::ModelType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetModelType'", NULL);
#endif
  {
   self->SetModelType(modelType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetModelType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetModelType of class  EffectModel */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModel_GetModelType00
static int tolua_PX2_EffectModel_GetModelType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const EffectModel",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const EffectModel* self = (const EffectModel*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetModelType'", NULL);
#endif
  {
   EffectModel::ModelType tolua_ret = (EffectModel::ModelType)  self->GetModelType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetModelType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetRadiusSample of class  EffectModel */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModel_SetRadiusSample00
static int tolua_PX2_EffectModel_SetRadiusSample00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectModel",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectModel* self = (EffectModel*)  tolua_tousertype(tolua_S,1,0);
  int radiusSample = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetRadiusSample'", NULL);
#endif
  {
   self->SetRadiusSample(radiusSample);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetRadiusSample'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRadiusSample of class  EffectModel */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModel_GetRadiusSample00
static int tolua_PX2_EffectModel_GetRadiusSample00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const EffectModel",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const EffectModel* self = (const EffectModel*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRadiusSample'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetRadiusSample();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRadiusSample'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetZSample of class  EffectModel */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModel_SetZSample00
static int tolua_PX2_EffectModel_SetZSample00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectModel",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectModel* self = (EffectModel*)  tolua_tousertype(tolua_S,1,0);
  int zSample = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetZSample'", NULL);
#endif
  {
   self->SetZSample(zSample);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetZSample'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetZSample of class  EffectModel */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModel_GetZSample00
static int tolua_PX2_EffectModel_GetZSample00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const EffectModel",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const EffectModel* self = (const EffectModel*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetZSample'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetZSample();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetZSample'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetHeightAlphaType of class  EffectModel */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModel_SetHeightAlphaType00
static int tolua_PX2_EffectModel_SetHeightAlphaType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectModel",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectModel* self = (EffectModel*)  tolua_tousertype(tolua_S,1,0);
  EffectModel::HeightAlphaType type = ((EffectModel::HeightAlphaType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetHeightAlphaType'", NULL);
#endif
  {
   self->SetHeightAlphaType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetHeightAlphaType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetHeightAlphaType of class  EffectModel */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModel_GetHeightAlphaType00
static int tolua_PX2_EffectModel_GetHeightAlphaType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const EffectModel",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const EffectModel* self = (const EffectModel*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetHeightAlphaType'", NULL);
#endif
  {
   EffectModel::HeightAlphaType tolua_ret = (EffectModel::HeightAlphaType)  self->GetHeightAlphaType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetHeightAlphaType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetModelFilename of class  EffectModel */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModel_SetModelFilename00
static int tolua_PX2_EffectModel_SetModelFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectModel",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectModel* self = (EffectModel*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetModelFilename'", NULL);
#endif
  {
   self->SetModelFilename(filename);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetModelFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetModelFilename of class  EffectModel */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModel_GetModelFilename00
static int tolua_PX2_EffectModel_GetModelFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const EffectModel",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const EffectModel* self = (const EffectModel*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetModelFilename'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetModelFilename();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetModelFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  EffectModelNode */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModelNode_new00
static int tolua_PX2_EffectModelNode_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"EffectModelNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   EffectModelNode* tolua_ret = (EffectModelNode*)  Mtolua_new((EffectModelNode)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"EffectModelNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  EffectModelNode */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModelNode_new00_local
static int tolua_PX2_EffectModelNode_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"EffectModelNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   EffectModelNode* tolua_ret = (EffectModelNode*)  Mtolua_new((EffectModelNode)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"EffectModelNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  EffectModelNode */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModelNode_delete00
static int tolua_PX2_EffectModelNode_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectModelNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectModelNode* self = (EffectModelNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetModelFilename of class  EffectModelNode */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModelNode_SetModelFilename00
static int tolua_PX2_EffectModelNode_SetModelFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectModelNode",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectModelNode* self = (EffectModelNode*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetModelFilename'", NULL);
#endif
  {
   self->SetModelFilename(filename);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetModelFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetModelFilename of class  EffectModelNode */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModelNode_GetModelFilename00
static int tolua_PX2_EffectModelNode_GetModelFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const EffectModelNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const EffectModelNode* self = (const EffectModelNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetModelFilename'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetModelFilename();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetModelFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUVSpeed of class  EffectModelNode */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModelNode_SetUVSpeed00
static int tolua_PX2_EffectModelNode_SetUVSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectModelNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectModelNode* self = (EffectModelNode*)  tolua_tousertype(tolua_S,1,0);
  const Float2* uv = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUVSpeed'", NULL);
#endif
  {
   self->SetUVSpeed(*uv);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUVSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUVSpeed of class  EffectModelNode */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModelNode_GetUVSpeed00
static int tolua_PX2_EffectModelNode_GetUVSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const EffectModelNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const EffectModelNode* self = (const EffectModelNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUVSpeed'", NULL);
#endif
  {
   const Float2& tolua_ret = (const Float2&)  self->GetUVSpeed();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUVSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTextureFilename of class  EffectModelNode */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModelNode_SetTextureFilename00
static int tolua_PX2_EffectModelNode_SetTextureFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectModelNode",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectModelNode* self = (EffectModelNode*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTextureFilename'", NULL);
#endif
  {
   self->SetTextureFilename(filename);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTextureFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTextureFilename of class  EffectModelNode */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModelNode_GetTextureFilename00
static int tolua_PX2_EffectModelNode_GetTextureFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const EffectModelNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const EffectModelNode* self = (const EffectModelNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTextureFilename'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetTextureFilename();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTextureFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Reset of class  EffectModelNode */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModelNode_Reset00
static int tolua_PX2_EffectModelNode_Reset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectModelNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectModelNode* self = (EffectModelNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Reset'", NULL);
#endif
  {
   self->Reset();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Reset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_new00
static int tolua_PX2_ParticleEmitter_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ParticleEmitter* tolua_ret = (ParticleEmitter*)  Mtolua_new((ParticleEmitter)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ParticleEmitter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_new00_local
static int tolua_PX2_ParticleEmitter_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ParticleEmitter* tolua_ret = (ParticleEmitter*)  Mtolua_new((ParticleEmitter)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ParticleEmitter");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_delete00
static int tolua_PX2_ParticleEmitter_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMaxNumParticles of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetMaxNumParticles00
static int tolua_PX2_ParticleEmitter_SetMaxNumParticles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  int num = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMaxNumParticles'", NULL);
#endif
  {
   self->SetMaxNumParticles(num);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMaxNumParticles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMaxNumParticles of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetMaxNumParticles00
static int tolua_PX2_ParticleEmitter_GetMaxNumParticles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMaxNumParticles'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetMaxNumParticles();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMaxNumParticles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetBlast of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetBlast00
static int tolua_PX2_ParticleEmitter_SetBlast00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  bool blast = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetBlast'", NULL);
#endif
  {
   self->SetBlast(blast);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetBlast'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsBlast of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_IsBlast00
static int tolua_PX2_ParticleEmitter_IsBlast00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsBlast'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsBlast();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsBlast'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDrawType of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetDrawType00
static int tolua_PX2_ParticleEmitter_SetDrawType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  ParticleEmitter::DrawType type = ((ParticleEmitter::DrawType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDrawType'", NULL);
#endif
  {
   self->SetDrawType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDrawType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDrawType of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetDrawType00
static int tolua_PX2_ParticleEmitter_GetDrawType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDrawType'", NULL);
#endif
  {
   ParticleEmitter::DrawType tolua_ret = (ParticleEmitter::DrawType)  self->GetDrawType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDrawType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetModelFilename of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetModelFilename00
static int tolua_PX2_ParticleEmitter_SetModelFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetModelFilename'", NULL);
#endif
  {
   self->SetModelFilename(filename);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetModelFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetModelFilename of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetModelFilename00
static int tolua_PX2_ParticleEmitter_GetModelFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetModelFilename'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetModelFilename();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetModelFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPivot of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetPivot00
static int tolua_PX2_ParticleEmitter_SetPivot00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  const Float2* point = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPivot'", NULL);
#endif
  {
   self->SetPivot(*point);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPivot'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPivot of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetPivot00
static int tolua_PX2_ParticleEmitter_GetPivot00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPivot'", NULL);
#endif
  {
   const Float2& tolua_ret = (const Float2&)  self->GetPivot();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPivot'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEmitRate of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetEmitRate00
static int tolua_PX2_ParticleEmitter_SetEmitRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  float rate = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEmitRate'", NULL);
#endif
  {
   self->SetEmitRate(rate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEmitRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEmitRate of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetEmitRate00
static int tolua_PX2_ParticleEmitter_GetEmitRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEmitRate'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetEmitRate();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEmitRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEmitDirDynamic of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetEmitDirDynamic00
static int tolua_PX2_ParticleEmitter_SetEmitDirDynamic00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  bool dyn = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEmitDirDynamic'", NULL);
#endif
  {
   self->SetEmitDirDynamic(dyn);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEmitDirDynamic'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsEmitDirDynamic of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_IsEmitDirDynamic00
static int tolua_PX2_ParticleEmitter_IsEmitDirDynamic00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsEmitDirDynamic'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsEmitDirDynamic();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsEmitDirDynamic'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEmitDir of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetEmitDir00
static int tolua_PX2_ParticleEmitter_SetEmitDir00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  const AVector* dir = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEmitDir'", NULL);
#endif
  {
   self->SetEmitDir(*dir);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEmitDir'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEmitDir of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetEmitDir00
static int tolua_PX2_ParticleEmitter_GetEmitDir00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEmitDir'", NULL);
#endif
  {
   AVector& tolua_ret = (AVector&)  self->GetEmitDir();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"AVector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEmitDir'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEmitDirLocal of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetEmitDirLocal00
static int tolua_PX2_ParticleEmitter_SetEmitDirLocal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  bool isLocal = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEmitDirLocal'", NULL);
#endif
  {
   self->SetEmitDirLocal(isLocal);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEmitDirLocal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsEmitDirLocal of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_IsEmitDirLocal00
static int tolua_PX2_ParticleEmitter_IsEmitDirLocal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsEmitDirLocal'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsEmitDirLocal();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsEmitDirLocal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEmitDirType of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetEmitDirType00
static int tolua_PX2_ParticleEmitter_SetEmitDirType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  ParticleEmitter::EmitDirType type = ((ParticleEmitter::EmitDirType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEmitDirType'", NULL);
#endif
  {
   self->SetEmitDirType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEmitDirType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEmitDirType of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetEmitDirType00
static int tolua_PX2_ParticleEmitter_GetEmitDirType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEmitDirType'", NULL);
#endif
  {
   ParticleEmitter::EmitDirType tolua_ret = (ParticleEmitter::EmitDirType)  self->GetEmitDirType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEmitDirType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEmitSpeed of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetEmitSpeed00
static int tolua_PX2_ParticleEmitter_SetEmitSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  float speed = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEmitSpeed'", NULL);
#endif
  {
   self->SetEmitSpeed(speed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEmitSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEmitSpeed of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetEmitSpeed00
static int tolua_PX2_ParticleEmitter_GetEmitSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEmitSpeed'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetEmitSpeed();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEmitSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEmitAccelerateDir of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetEmitAccelerateDir00
static int tolua_PX2_ParticleEmitter_SetEmitAccelerateDir00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  const AVector* dir = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEmitAccelerateDir'", NULL);
#endif
  {
   self->SetEmitAccelerateDir(*dir);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEmitAccelerateDir'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEmitAccelerateDir of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetEmitAccelerateDir00
static int tolua_PX2_ParticleEmitter_GetEmitAccelerateDir00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEmitAccelerateDir'", NULL);
#endif
  {
   const AVector& tolua_ret = (const AVector&)  self->GetEmitAccelerateDir();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const AVector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEmitAccelerateDir'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEmitAccelerate of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetEmitAccelerate00
static int tolua_PX2_ParticleEmitter_SetEmitAccelerate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  float val = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEmitAccelerate'", NULL);
#endif
  {
   self->SetEmitAccelerate(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEmitAccelerate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEmitAccelerate of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetEmitAccelerate00
static int tolua_PX2_ParticleEmitter_GetEmitAccelerate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEmitAccelerate'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetEmitAccelerate();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEmitAccelerate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEmitAttractPoint of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetEmitAttractPoint00
static int tolua_PX2_ParticleEmitter_SetEmitAttractPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  const APoint* pos = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEmitAttractPoint'", NULL);
#endif
  {
   self->SetEmitAttractPoint(*pos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEmitAttractPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEmitAttactPoint of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetEmitAttactPoint00
static int tolua_PX2_ParticleEmitter_GetEmitAttactPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEmitAttactPoint'", NULL);
#endif
  {
   const APoint& tolua_ret = (const APoint&)  self->GetEmitAttactPoint();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const APoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEmitAttactPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEmitAttactStrength of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetEmitAttactStrength00
static int tolua_PX2_ParticleEmitter_SetEmitAttactStrength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  const AVector* strength = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEmitAttactStrength'", NULL);
#endif
  {
   self->SetEmitAttactStrength(*strength);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEmitAttactStrength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEmitAttackStrength of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetEmitAttackStrength00
static int tolua_PX2_ParticleEmitter_GetEmitAttackStrength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEmitAttackStrength'", NULL);
#endif
  {
   const AVector& tolua_ret = (const AVector&)  self->GetEmitAttackStrength();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const AVector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEmitAttackStrength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetObstruct of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetObstruct00
static int tolua_PX2_ParticleEmitter_SetObstruct00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  const AVector* obs = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetObstruct'", NULL);
#endif
  {
   self->SetObstruct(*obs);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetObstruct'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetObstruct of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetObstruct00
static int tolua_PX2_ParticleEmitter_GetObstruct00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetObstruct'", NULL);
#endif
  {
   const AVector& tolua_ret = (const AVector&)  self->GetObstruct();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const AVector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetObstruct'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetRotateAxisType of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetRotateAxisType00
static int tolua_PX2_ParticleEmitter_SetRotateAxisType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  ParticleEmitter::RotateAxisType type = ((ParticleEmitter::RotateAxisType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetRotateAxisType'", NULL);
#endif
  {
   self->SetRotateAxisType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetRotateAxisType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRotateAxisType of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetRotateAxisType00
static int tolua_PX2_ParticleEmitter_GetRotateAxisType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRotateAxisType'", NULL);
#endif
  {
   ParticleEmitter::RotateAxisType tolua_ret = (ParticleEmitter::RotateAxisType)  self->GetRotateAxisType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRotateAxisType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEmitRotateAxis of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetEmitRotateAxis00
static int tolua_PX2_ParticleEmitter_SetEmitRotateAxis00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  const AVector* dir = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEmitRotateAxis'", NULL);
#endif
  {
   self->SetEmitRotateAxis(*dir);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEmitRotateAxis'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEmitRotateAxis of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetEmitRotateAxis00
static int tolua_PX2_ParticleEmitter_GetEmitRotateAxis00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEmitRotateAxis'", NULL);
#endif
  {
   const AVector& tolua_ret = (const AVector&)  self->GetEmitRotateAxis();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const AVector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEmitRotateAxis'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEmitRotateDegree of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetEmitRotateDegree00
static int tolua_PX2_ParticleEmitter_SetEmitRotateDegree00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  float degree = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEmitRotateDegree'", NULL);
#endif
  {
   self->SetEmitRotateDegree(degree);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEmitRotateDegree'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEmitRotateDegree of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetEmitRotateDegree00
static int tolua_PX2_ParticleEmitter_GetEmitRotateDegree00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEmitRotateDegree'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetEmitRotateDegree();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEmitRotateDegree'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEmitRotateSpeed of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetEmitRotateSpeed00
static int tolua_PX2_ParticleEmitter_SetEmitRotateSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  float speed = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEmitRotateSpeed'", NULL);
#endif
  {
   self->SetEmitRotateSpeed(speed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEmitRotateSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEmitRotateSpeed of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetEmitRotateSpeed00
static int tolua_PX2_ParticleEmitter_GetEmitRotateSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEmitRotateSpeed'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetEmitRotateSpeed();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEmitRotateSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCollisionType of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetCollisionType00
static int tolua_PX2_ParticleEmitter_SetCollisionType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  ParticleEmitter::CollisionType type = ((ParticleEmitter::CollisionType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCollisionType'", NULL);
#endif
  {
   self->SetCollisionType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCollisionType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCollisionType of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetCollisionType00
static int tolua_PX2_ParticleEmitter_GetCollisionType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCollisionType'", NULL);
#endif
  {
   ParticleEmitter::CollisionType tolua_ret = (ParticleEmitter::CollisionType)  self->GetCollisionType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCollisionType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCollisionOption of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetCollisionOption00
static int tolua_PX2_ParticleEmitter_SetCollisionOption00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  ParticleEmitter::CollisionOption type = ((ParticleEmitter::CollisionOption) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCollisionOption'", NULL);
#endif
  {
   self->SetCollisionOption(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCollisionOption'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCollisionOption of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetCollisionOption00
static int tolua_PX2_ParticleEmitter_GetCollisionOption00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCollisionOption'", NULL);
#endif
  {
   ParticleEmitter::CollisionOption tolua_ret = (ParticleEmitter::CollisionOption)  self->GetCollisionOption();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCollisionOption'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCollisionFaceHeight of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetCollisionFaceHeight00
static int tolua_PX2_ParticleEmitter_SetCollisionFaceHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  float height = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCollisionFaceHeight'", NULL);
#endif
  {
   self->SetCollisionFaceHeight(height);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCollisionFaceHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCollisionFaceHeight of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetCollisionFaceHeight00
static int tolua_PX2_ParticleEmitter_GetCollisionFaceHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCollisionFaceHeight'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetCollisionFaceHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCollisionFaceHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCollisionSpeedPercent of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetCollisionSpeedPercent00
static int tolua_PX2_ParticleEmitter_SetCollisionSpeedPercent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  float percent = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCollisionSpeedPercent'", NULL);
#endif
  {
   self->SetCollisionSpeedPercent(percent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCollisionSpeedPercent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCollisionSpeedPercent of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetCollisionSpeedPercent00
static int tolua_PX2_ParticleEmitter_GetCollisionSpeedPercent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCollisionSpeedPercent'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetCollisionSpeedPercent();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCollisionSpeedPercent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPlacerType of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetPlacerType00
static int tolua_PX2_ParticleEmitter_SetPlacerType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  ParticleEmitter::PlacerType type = ((ParticleEmitter::PlacerType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPlacerType'", NULL);
#endif
  {
   self->SetPlacerType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPlacerType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPlacerType of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetPlacerType00
static int tolua_PX2_ParticleEmitter_GetPlacerType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPlacerType'", NULL);
#endif
  {
   ParticleEmitter::PlacerType tolua_ret = (ParticleEmitter::PlacerType)  self->GetPlacerType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPlacerType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPlacerInLength of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetPlacerInLength00
static int tolua_PX2_ParticleEmitter_SetPlacerInLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  float val = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPlacerInLength'", NULL);
#endif
  {
   self->SetPlacerInLength(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPlacerInLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPlacerOutLength of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetPlacerOutLength00
static int tolua_PX2_ParticleEmitter_SetPlacerOutLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  float val = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPlacerOutLength'", NULL);
#endif
  {
   self->SetPlacerOutLength(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPlacerOutLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPlacerInWidth of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetPlacerInWidth00
static int tolua_PX2_ParticleEmitter_SetPlacerInWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  float val = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPlacerInWidth'", NULL);
#endif
  {
   self->SetPlacerInWidth(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPlacerInWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPlacerOutWidth of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetPlacerOutWidth00
static int tolua_PX2_ParticleEmitter_SetPlacerOutWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  float val = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPlacerOutWidth'", NULL);
#endif
  {
   self->SetPlacerOutWidth(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPlacerOutWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPlacerInHeight of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetPlacerInHeight00
static int tolua_PX2_ParticleEmitter_SetPlacerInHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  float val = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPlacerInHeight'", NULL);
#endif
  {
   self->SetPlacerInHeight(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPlacerInHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPlacerOutHeight of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_SetPlacerOutHeight00
static int tolua_PX2_ParticleEmitter_SetPlacerOutHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ParticleEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ParticleEmitter* self = (ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
  float val = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPlacerOutHeight'", NULL);
#endif
  {
   self->SetPlacerOutHeight(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPlacerOutHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPlacerInLength of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetPlacerInLength00
static int tolua_PX2_ParticleEmitter_GetPlacerInLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPlacerInLength'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetPlacerInLength();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPlacerInLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPlacerOutLength of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetPlacerOutLength00
static int tolua_PX2_ParticleEmitter_GetPlacerOutLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPlacerOutLength'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetPlacerOutLength();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPlacerOutLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPlacerInWidth of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetPlacerInWidth00
static int tolua_PX2_ParticleEmitter_GetPlacerInWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPlacerInWidth'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetPlacerInWidth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPlacerInWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPlacerOutWidth of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetPlacerOutWidth00
static int tolua_PX2_ParticleEmitter_GetPlacerOutWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPlacerOutWidth'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetPlacerOutWidth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPlacerOutWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPlacerInHeight of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetPlacerInHeight00
static int tolua_PX2_ParticleEmitter_GetPlacerInHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPlacerInHeight'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetPlacerInHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPlacerInHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPlacerOutHeight of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetPlacerOutHeight00
static int tolua_PX2_ParticleEmitter_GetPlacerOutHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPlacerOutHeight'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetPlacerOutHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPlacerOutHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPlacerAPoint of class  ParticleEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_ParticleEmitter_GetPlacerAPoint00
static int tolua_PX2_ParticleEmitter_GetPlacerAPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ParticleEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ParticleEmitter* self = (const ParticleEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPlacerAPoint'", NULL);
#endif
  {
   APoint tolua_ret = (APoint)  self->GetPlacerAPoint();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((APoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(APoint));
     tolua_pushusertype(tolua_S,tolua_obj,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPlacerAPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  RibbonEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_RibbonEmitter_new00
static int tolua_PX2_RibbonEmitter_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RibbonEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RibbonEmitter* tolua_ret = (RibbonEmitter*)  Mtolua_new((RibbonEmitter)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RibbonEmitter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  RibbonEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_RibbonEmitter_new00_local
static int tolua_PX2_RibbonEmitter_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RibbonEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RibbonEmitter* tolua_ret = (RibbonEmitter*)  Mtolua_new((RibbonEmitter)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RibbonEmitter");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  RibbonEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_RibbonEmitter_delete00
static int tolua_PX2_RibbonEmitter_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RibbonEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RibbonEmitter* self = (RibbonEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLength of class  RibbonEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_RibbonEmitter_SetLength00
static int tolua_PX2_RibbonEmitter_SetLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RibbonEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RibbonEmitter* self = (RibbonEmitter*)  tolua_tousertype(tolua_S,1,0);
  float length = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLength'", NULL);
#endif
  {
   self->SetLength(length);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLength of class  RibbonEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_RibbonEmitter_GetLength00
static int tolua_PX2_RibbonEmitter_GetLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const RibbonEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const RibbonEmitter* self = (const RibbonEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLength'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetLength();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSegLength of class  RibbonEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_RibbonEmitter_SetSegLength00
static int tolua_PX2_RibbonEmitter_SetSegLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RibbonEmitter",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RibbonEmitter* self = (RibbonEmitter*)  tolua_tousertype(tolua_S,1,0);
  float length = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSegLength'", NULL);
#endif
  {
   self->SetSegLength(length);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSegLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSegLength of class  RibbonEmitter */
#ifndef TOLUA_DISABLE_tolua_PX2_RibbonEmitter_GetSegLength00
static int tolua_PX2_RibbonEmitter_GetSegLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const RibbonEmitter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const RibbonEmitter* self = (const RibbonEmitter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSegLength'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetSegLength();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSegLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_new00
static int tolua_PX2_Soundable_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Soundable",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Soundable* tolua_ret = (Soundable*)  Mtolua_new((Soundable)(filename));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Soundable");
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_new00_local
static int tolua_PX2_Soundable_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Soundable",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Soundable* tolua_ret = (Soundable*)  Mtolua_new((Soundable)(filename));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Soundable");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_delete00
static int tolua_PX2_Soundable_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Soundable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Soundable* self = (Soundable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSourceType of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_SetSourceType00
static int tolua_PX2_Soundable_SetSourceType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Soundable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Soundable* self = (Soundable*)  tolua_tousertype(tolua_S,1,0);
  Soundable::SourceType st = ((Soundable::SourceType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSourceType'", NULL);
#endif
  {
   self->SetSourceType(st);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSourceType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSourceType of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_GetSourceType00
static int tolua_PX2_Soundable_GetSourceType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Soundable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Soundable* self = (const Soundable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSourceType'", NULL);
#endif
  {
   Soundable::SourceType tolua_ret = (Soundable::SourceType)  self->GetSourceType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSourceType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMusicChannel of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_SetMusicChannel00
static int tolua_PX2_Soundable_SetMusicChannel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Soundable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Soundable* self = (Soundable*)  tolua_tousertype(tolua_S,1,0);
  int channel = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMusicChannel'", NULL);
#endif
  {
   self->SetMusicChannel(channel);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMusicChannel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMusicChannel of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_GetMusicChannel00
static int tolua_PX2_Soundable_GetMusicChannel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Soundable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Soundable* self = (const Soundable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMusicChannel'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetMusicChannel();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMusicChannel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Reset of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_Reset00
static int tolua_PX2_Soundable_Reset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Soundable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Soundable* self = (Soundable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Reset'", NULL);
#endif
  {
   self->Reset();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Reset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Play of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_Play00
static int tolua_PX2_Soundable_Play00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Soundable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Soundable* self = (Soundable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Play'", NULL);
#endif
  {
   self->Play();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Play'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Stop of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_Stop00
static int tolua_PX2_Soundable_Stop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Soundable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Soundable* self = (Soundable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Stop'", NULL);
#endif
  {
   self->Stop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Stop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetIngoreStopSound of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_SetIngoreStopSound00
static int tolua_PX2_Soundable_SetIngoreStopSound00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Soundable",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Soundable* self = (Soundable*)  tolua_tousertype(tolua_S,1,0);
  bool stop = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetIngoreStopSound'", NULL);
#endif
  {
   self->SetIngoreStopSound(stop);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetIngoreStopSound'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsIngoreStopSound of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_IsIngoreStopSound00
static int tolua_PX2_Soundable_IsIngoreStopSound00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Soundable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Soundable* self = (const Soundable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsIngoreStopSound'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsIngoreStopSound();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsIngoreStopSound'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSoundFilename of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_SetSoundFilename00
static int tolua_PX2_Soundable_SetSoundFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Soundable",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Soundable* self = (Soundable*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSoundFilename'", NULL);
#endif
  {
   self->SetSoundFilename(filename);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSoundFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSoundFilename of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_GetSoundFilename00
static int tolua_PX2_Soundable_GetSoundFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Soundable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Soundable* self = (const Soundable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSoundFilename'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetSoundFilename();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSoundFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set3D of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_Set3D00
static int tolua_PX2_Soundable_Set3D00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Soundable",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Soundable* self = (Soundable*)  tolua_tousertype(tolua_S,1,0);
  bool is3D = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set3D'", NULL);
#endif
  {
   self->Set3D(is3D);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set3D'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Is3D of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_Is3D00
static int tolua_PX2_Soundable_Is3D00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Soundable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Soundable* self = (const Soundable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Is3D'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->Is3D();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Is3D'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetVolume of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_SetVolume00
static int tolua_PX2_Soundable_SetVolume00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Soundable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Soundable* self = (Soundable*)  tolua_tousertype(tolua_S,1,0);
  float volume = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetVolume'", NULL);
#endif
  {
   self->SetVolume(volume);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetVolume'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetVolume of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_GetVolume00
static int tolua_PX2_Soundable_GetVolume00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Soundable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Soundable* self = (const Soundable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetVolume'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetVolume();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetVolume'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetVelocity of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_SetVelocity00
static int tolua_PX2_Soundable_SetVelocity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Soundable",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Soundable* self = (Soundable*)  tolua_tousertype(tolua_S,1,0);
  const AVector* velocity = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetVelocity'", NULL);
#endif
  {
   self->SetVelocity(*velocity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetVelocity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetVelocity of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_GetVelocity00
static int tolua_PX2_Soundable_GetVelocity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Soundable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Soundable* self = (const Soundable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetVelocity'", NULL);
#endif
  {
   const AVector& tolua_ret = (const AVector&)  self->GetVelocity();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const AVector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetVelocity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDistance of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_SetDistance00
static int tolua_PX2_Soundable_SetDistance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Soundable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Soundable* self = (Soundable*)  tolua_tousertype(tolua_S,1,0);
  float minDistance = ((float)  tolua_tonumber(tolua_S,2,0));
  float maxDistance = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDistance'", NULL);
#endif
  {
   self->SetDistance(minDistance,maxDistance);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDistance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMinDistance of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_SetMinDistance00
static int tolua_PX2_Soundable_SetMinDistance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Soundable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Soundable* self = (Soundable*)  tolua_tousertype(tolua_S,1,0);
  float minDistance = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMinDistance'", NULL);
#endif
  {
   self->SetMinDistance(minDistance);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMinDistance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMaxDistance of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_SetMaxDistance00
static int tolua_PX2_Soundable_SetMaxDistance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Soundable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Soundable* self = (Soundable*)  tolua_tousertype(tolua_S,1,0);
  float maxDistance = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMaxDistance'", NULL);
#endif
  {
   self->SetMaxDistance(maxDistance);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMaxDistance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMinDistance of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_GetMinDistance00
static int tolua_PX2_Soundable_GetMinDistance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Soundable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Soundable* self = (const Soundable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMinDistance'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetMinDistance();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMinDistance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMaxDistance of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_GetMaxDistance00
static int tolua_PX2_Soundable_GetMaxDistance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Soundable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Soundable* self = (const Soundable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMaxDistance'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetMaxDistance();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMaxDistance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLoop of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_SetLoop00
static int tolua_PX2_Soundable_SetLoop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Soundable",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Soundable* self = (Soundable*)  tolua_tousertype(tolua_S,1,0);
  bool isLoop = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLoop'", NULL);
#endif
  {
   self->SetLoop(isLoop);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLoop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsLoop of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_IsLoop00
static int tolua_PX2_Soundable_IsLoop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Soundable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Soundable* self = (const Soundable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsLoop'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsLoop();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsLoop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDistanceUseX of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_SetDistanceUseX00
static int tolua_PX2_Soundable_SetDistanceUseX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Soundable",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Soundable* self = (Soundable*)  tolua_tousertype(tolua_S,1,0);
  bool use = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDistanceUseX'", NULL);
#endif
  {
   self->SetDistanceUseX(use);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDistanceUseX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsDistanceUseX of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_IsDistanceUseX00
static int tolua_PX2_Soundable_IsDistanceUseX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Soundable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Soundable* self = (const Soundable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsDistanceUseX'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsDistanceUseX();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsDistanceUseX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDistanceUseY of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_SetDistanceUseY00
static int tolua_PX2_Soundable_SetDistanceUseY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Soundable",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Soundable* self = (Soundable*)  tolua_tousertype(tolua_S,1,0);
  bool use = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDistanceUseY'", NULL);
#endif
  {
   self->SetDistanceUseY(use);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDistanceUseY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsDistanceUseY of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_IsDistanceUseY00
static int tolua_PX2_Soundable_IsDistanceUseY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Soundable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Soundable* self = (const Soundable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsDistanceUseY'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsDistanceUseY();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsDistanceUseY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDistanceUseZ of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_SetDistanceUseZ00
static int tolua_PX2_Soundable_SetDistanceUseZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Soundable",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Soundable* self = (Soundable*)  tolua_tousertype(tolua_S,1,0);
  bool use = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDistanceUseZ'", NULL);
#endif
  {
   self->SetDistanceUseZ(use);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDistanceUseZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsDistanceUseZ of class  Soundable */
#ifndef TOLUA_DISABLE_tolua_PX2_Soundable_IsDistanceUseZ00
static int tolua_PX2_Soundable_IsDistanceUseZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Soundable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Soundable* self = (const Soundable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsDistanceUseZ'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsDistanceUseZ();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsDistanceUseZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  EffectableController */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectableController_new00
static int tolua_PX2_EffectableController_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"EffectableController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   EffectableController* tolua_ret = (EffectableController*)  Mtolua_new((EffectableController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"EffectableController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  EffectableController */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectableController_new00_local
static int tolua_PX2_EffectableController_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"EffectableController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   EffectableController* tolua_ret = (EffectableController*)  Mtolua_new((EffectableController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"EffectableController");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  EffectableController */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectableController_delete00
static int tolua_PX2_EffectableController_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectableController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectableController* self = (EffectableController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Reset of class  EffectableController */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectableController_Reset00
static int tolua_PX2_EffectableController_Reset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectableController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectableController* self = (EffectableController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Reset'", NULL);
#endif
  {
   self->Reset();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Reset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddModule of class  EffectableController */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectableController_AddModule00
static int tolua_PX2_EffectableController_AddModule00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectableController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"EffectModule",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectableController* self = (EffectableController*)  tolua_tousertype(tolua_S,1,0);
  EffectModule* module = ((EffectModule*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddModule'", NULL);
#endif
  {
   self->AddModule(module);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddModule'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveModule of class  EffectableController */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectableController_RemoveModule00
static int tolua_PX2_EffectableController_RemoveModule00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectableController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"EffectModule",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectableController* self = (EffectableController*)  tolua_tousertype(tolua_S,1,0);
  EffectModule* module = ((EffectModule*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveModule'", NULL);
#endif
  {
   self->RemoveModule(module);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveModule'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetModule of class  EffectableController */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectableController_GetModule00
static int tolua_PX2_EffectableController_GetModule00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectableController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectableController* self = (EffectableController*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetModule'", NULL);
#endif
  {
   EffectModule* tolua_ret = (EffectModule*)  self->GetModule(i);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"EffectModule");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetModule'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetModuleByRttiName of class  EffectableController */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectableController_GetModuleByRttiName00
static int tolua_PX2_EffectableController_GetModuleByRttiName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const EffectableController",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const EffectableController* self = (const EffectableController*)  tolua_tousertype(tolua_S,1,0);
  const std::string moduleRttiName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetModuleByRttiName'", NULL);
#endif
  {
   EffectModule* tolua_ret = (EffectModule*)  self->GetModuleByRttiName(moduleRttiName);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"EffectModule");
   tolua_pushcppstring(tolua_S,(const char*)moduleRttiName);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetModuleByRttiName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetModuleByTypeName of class  EffectableController */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectableController_GetModuleByTypeName00
static int tolua_PX2_EffectableController_GetModuleByTypeName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const EffectableController",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const EffectableController* self = (const EffectableController*)  tolua_tousertype(tolua_S,1,0);
  const std::string typeName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetModuleByTypeName'", NULL);
#endif
  {
   EffectModule* tolua_ret = (EffectModule*)  self->GetModuleByTypeName(typeName);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"EffectModule");
   tolua_pushcppstring(tolua_S,(const char*)typeName);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetModuleByTypeName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumModules of class  EffectableController */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectableController_GetNumModules00
static int tolua_PX2_EffectableController_GetNumModules00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectableController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectableController* self = (EffectableController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumModules'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumModules();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumModules'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsHasModule of class  EffectableController */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectableController_IsHasModule00
static int tolua_PX2_EffectableController_IsHasModule00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const EffectableController",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const EffectableController* self = (const EffectableController*)  tolua_tousertype(tolua_S,1,0);
  const std::string moduleRttiName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsHasModule'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsHasModule(moduleRttiName);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)moduleRttiName);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsHasModule'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsHasModuleByTypeName of class  EffectableController */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectableController_IsHasModuleByTypeName00
static int tolua_PX2_EffectableController_IsHasModuleByTypeName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const EffectableController",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const EffectableController* self = (const EffectableController*)  tolua_tousertype(tolua_S,1,0);
  const std::string typeName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsHasModuleByTypeName'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsHasModuleByTypeName(typeName);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)typeName);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsHasModuleByTypeName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  EffectModule */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModule_new00
static int tolua_PX2_EffectModule_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"EffectModule",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectModule::ModuleType type = ((EffectModule::ModuleType) (int)  tolua_tonumber(tolua_S,2,0));
  bool isForEffectable = ((bool)  tolua_toboolean(tolua_S,3,0));
  float initVal = ((float)  tolua_tonumber(tolua_S,4,0.0f));
  {
   EffectModule* tolua_ret = (EffectModule*)  Mtolua_new((EffectModule)(type,isForEffectable,initVal));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"EffectModule");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  EffectModule */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModule_new00_local
static int tolua_PX2_EffectModule_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"EffectModule",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectModule::ModuleType type = ((EffectModule::ModuleType) (int)  tolua_tonumber(tolua_S,2,0));
  bool isForEffectable = ((bool)  tolua_toboolean(tolua_S,3,0));
  float initVal = ((float)  tolua_tonumber(tolua_S,4,0.0f));
  {
   EffectModule* tolua_ret = (EffectModule*)  Mtolua_new((EffectModule)(type,isForEffectable,initVal));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"EffectModule");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  EffectModule */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModule_new01
static int tolua_PX2_EffectModule_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"EffectModule",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"const Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  EffectModule::ModuleType type = ((EffectModule::ModuleType) (int)  tolua_tonumber(tolua_S,2,0));
  bool isForEffectable = ((bool)  tolua_toboolean(tolua_S,3,0));
  float initVal = ((float)  tolua_tonumber(tolua_S,4,0));
  const Float3* initVal1 = ((const Float3*)  tolua_tousertype(tolua_S,5,0));
  {
   EffectModule* tolua_ret = (EffectModule*)  Mtolua_new((EffectModule)(type,isForEffectable,initVal,*initVal1));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"EffectModule");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_EffectModule_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  EffectModule */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModule_new01_local
static int tolua_PX2_EffectModule_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"EffectModule",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"const Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  EffectModule::ModuleType type = ((EffectModule::ModuleType) (int)  tolua_tonumber(tolua_S,2,0));
  bool isForEffectable = ((bool)  tolua_toboolean(tolua_S,3,0));
  float initVal = ((float)  tolua_tonumber(tolua_S,4,0));
  const Float3* initVal1 = ((const Float3*)  tolua_tousertype(tolua_S,5,0));
  {
   EffectModule* tolua_ret = (EffectModule*)  Mtolua_new((EffectModule)(type,isForEffectable,initVal,*initVal1));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"EffectModule");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_EffectModule_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  EffectModule */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectModule_delete00
static int tolua_PX2_EffectModule_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectModule",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectModule* self = (EffectModule*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Terrain */
#ifndef TOLUA_DISABLE_tolua_PX2_Terrain_delete00
static int tolua_PX2_Terrain_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Terrain",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Terrain* self = (Terrain*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRowQuantity of class  Terrain */
#ifndef TOLUA_DISABLE_tolua_PX2_Terrain_GetRowQuantity00
static int tolua_PX2_Terrain_GetRowQuantity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Terrain",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Terrain* self = (const Terrain*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRowQuantity'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetRowQuantity();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRowQuantity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetColQuantity of class  Terrain */
#ifndef TOLUA_DISABLE_tolua_PX2_Terrain_GetColQuantity00
static int tolua_PX2_Terrain_GetColQuantity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Terrain",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Terrain* self = (const Terrain*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetColQuantity'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetColQuantity();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetColQuantity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumVertexPage of class  Terrain */
#ifndef TOLUA_DISABLE_tolua_PX2_Terrain_GetNumVertexPage00
static int tolua_PX2_Terrain_GetNumVertexPage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Terrain",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Terrain* self = (const Terrain*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumVertexPage'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumVertexPage();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumVertexPage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSpacing of class  Terrain */
#ifndef TOLUA_DISABLE_tolua_PX2_Terrain_GetSpacing00
static int tolua_PX2_Terrain_GetSpacing00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Terrain",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Terrain* self = (const Terrain*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSpacing'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetSpacing();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSpacing'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetHeight of class  Terrain */
#ifndef TOLUA_DISABLE_tolua_PX2_Terrain_GetHeight00
static int tolua_PX2_Terrain_GetHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Terrain",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Terrain* self = (const Terrain*)  tolua_tousertype(tolua_S,1,0);
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetHeight'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetHeight(x,y);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTerrainShine of class  Terrain */
#ifndef TOLUA_DISABLE_tolua_PX2_Terrain_GetTerrainShine00
static int tolua_PX2_Terrain_GetTerrainShine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Terrain",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Terrain* self = (Terrain*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTerrainShine'", NULL);
#endif
  {
   Shine* tolua_ret = (Shine*)  self->GetTerrainShine();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Shine");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTerrainShine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  RawTerrain */
#ifndef TOLUA_DISABLE_tolua_PX2_RawTerrain_new00
static int tolua_PX2_RawTerrain_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RawTerrain",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RawTerrain* tolua_ret = (RawTerrain*)  Mtolua_new((RawTerrain)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RawTerrain");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  RawTerrain */
#ifndef TOLUA_DISABLE_tolua_PX2_RawTerrain_new00_local
static int tolua_PX2_RawTerrain_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RawTerrain",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RawTerrain* tolua_ret = (RawTerrain*)  Mtolua_new((RawTerrain)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RawTerrain");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  RawTerrain */
#ifndef TOLUA_DISABLE_tolua_PX2_RawTerrain_delete00
static int tolua_PX2_RawTerrain_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RawTerrain",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RawTerrain* self = (RawTerrain*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  LODTerrain */
#ifndef TOLUA_DISABLE_tolua_PX2_LODTerrain_new00
static int tolua_PX2_LODTerrain_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LODTerrain",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   LODTerrain* tolua_ret = (LODTerrain*)  Mtolua_new((LODTerrain)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LODTerrain");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  LODTerrain */
#ifndef TOLUA_DISABLE_tolua_PX2_LODTerrain_new00_local
static int tolua_PX2_LODTerrain_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LODTerrain",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   LODTerrain* tolua_ret = (LODTerrain*)  Mtolua_new((LODTerrain)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LODTerrain");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  LODTerrain */
#ifndef TOLUA_DISABLE_tolua_PX2_LODTerrain_delete00
static int tolua_PX2_LODTerrain_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LODTerrain",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LODTerrain* self = (LODTerrain*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPixelTolerance of class  LODTerrain */
#ifndef TOLUA_DISABLE_tolua_PX2_LODTerrain_SetPixelTolerance00
static int tolua_PX2_LODTerrain_SetPixelTolerance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LODTerrain",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LODTerrain* self = (LODTerrain*)  tolua_tousertype(tolua_S,1,0);
  float tolerance = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPixelTolerance'", NULL);
#endif
  {
   self->SetPixelTolerance(tolerance);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPixelTolerance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPixelTolerance of class  LODTerrain */
#ifndef TOLUA_DISABLE_tolua_PX2_LODTerrain_GetPixelTolerance00
static int tolua_PX2_LODTerrain_GetPixelTolerance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LODTerrain",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LODTerrain* self = (LODTerrain*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPixelTolerance'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetPixelTolerance();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPixelTolerance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCloseAssumption of class  LODTerrain */
#ifndef TOLUA_DISABLE_tolua_PX2_LODTerrain_SetCloseAssumption00
static int tolua_PX2_LODTerrain_SetCloseAssumption00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LODTerrain",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LODTerrain* self = (LODTerrain*)  tolua_tousertype(tolua_S,1,0);
  bool ca = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCloseAssumption'", NULL);
#endif
  {
   self->SetCloseAssumption(ca);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCloseAssumption'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsCloseAssumption of class  LODTerrain */
#ifndef TOLUA_DISABLE_tolua_PX2_LODTerrain_IsCloseAssumption00
static int tolua_PX2_LODTerrain_IsCloseAssumption00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LODTerrain",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LODTerrain* self = (LODTerrain*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsCloseAssumption'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsCloseAssumption();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsCloseAssumption'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UIFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFrame_new00
static int tolua_PX2_UIFrame_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIFrame* tolua_ret = (UIFrame*)  Mtolua_new((UIFrame)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UIFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFrame_new00_local
static int tolua_PX2_UIFrame_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIFrame* tolua_ret = (UIFrame*)  Mtolua_new((UIFrame)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFrame");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFrame_delete00
static int tolua_PX2_UIFrame_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIFrame* self = (UIFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  UIFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFrame_New00
static int tolua_PX2_UIFrame_New00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIFrame* tolua_ret = (UIFrame*)  UIFrame::New();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'New'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  UIFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFrame_New01
static int tolua_PX2_UIFrame_New01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIFrame",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   UIFrame* tolua_ret = (UIFrame*)  UIFrame::New(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFrame");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_UIFrame_New00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateAddBackgroundPicBox of class  UIFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFrame_CreateAddBackgroundPicBox00
static int tolua_PX2_UIFrame_CreateAddBackgroundPicBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIFrame",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIFrame* self = (UIFrame*)  tolua_tousertype(tolua_S,1,0);
  bool setWhite = ((bool)  tolua_toboolean(tolua_S,2,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateAddBackgroundPicBox'", NULL);
#endif
  {
   UIPicBox* tolua_ret = (UIPicBox*)  self->CreateAddBackgroundPicBox(setWhite);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIPicBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateAddBackgroundPicBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateAddBackgroundPicBox of class  UIFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFrame_CreateAddBackgroundPicBox01
static int tolua_PX2_UIFrame_CreateAddBackgroundPicBox01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIFrame",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  UIFrame* self = (UIFrame*)  tolua_tousertype(tolua_S,1,0);
  bool setWhite = ((bool)  tolua_toboolean(tolua_S,2,0));
  const Float3* color = ((const Float3*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateAddBackgroundPicBox'", NULL);
#endif
  {
   UIPicBox* tolua_ret = (UIPicBox*)  self->CreateAddBackgroundPicBox(setWhite,*color);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIPicBox");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_UIFrame_CreateAddBackgroundPicBox00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetBackgroundPicBox of class  UIFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFrame_GetBackgroundPicBox00
static int tolua_PX2_UIFrame_GetBackgroundPicBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIFrame* self = (UIFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetBackgroundPicBox'", NULL);
#endif
  {
   UIPicBox* tolua_ret = (UIPicBox*)  self->GetBackgroundPicBox();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIPicBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetBackgroundPicBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DestoryBackgroundPicBox of class  UIFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFrame_DestoryBackgroundPicBox00
static int tolua_PX2_UIFrame_DestoryBackgroundPicBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIFrame* self = (UIFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DestoryBackgroundPicBox'", NULL);
#endif
  {
   self->DestoryBackgroundPicBox();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DestoryBackgroundPicBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetActivateColor of class  UIFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFrame_SetActivateColor00
static int tolua_PX2_UIFrame_SetActivateColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIFrame",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIFrame* self = (UIFrame*)  tolua_tousertype(tolua_S,1,0);
  const Float3* color = ((const Float3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetActivateColor'", NULL);
#endif
  {
   self->SetActivateColor(*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetActivateColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetActivateColor of class  UIFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFrame_GetActivateColor00
static int tolua_PX2_UIFrame_GetActivateColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIFrame* self = (const UIFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetActivateColor'", NULL);
#endif
  {
   const Float3& tolua_ret = (const Float3&)  self->GetActivateColor();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float3");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetActivateColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetActivateAlpha of class  UIFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFrame_SetActivateAlpha00
static int tolua_PX2_UIFrame_SetActivateAlpha00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIFrame* self = (UIFrame*)  tolua_tousertype(tolua_S,1,0);
  float alpha = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetActivateAlpha'", NULL);
#endif
  {
   self->SetActivateAlpha(alpha);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetActivateAlpha'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetActivateAlpha of class  UIFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFrame_GetActivateAlpha00
static int tolua_PX2_UIFrame_GetActivateAlpha00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIFrame* self = (const UIFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetActivateAlpha'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetActivateAlpha();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetActivateAlpha'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetActivateBrightness of class  UIFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFrame_SetActivateBrightness00
static int tolua_PX2_UIFrame_SetActivateBrightness00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIFrame* self = (UIFrame*)  tolua_tousertype(tolua_S,1,0);
  float brightness = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetActivateBrightness'", NULL);
#endif
  {
   self->SetActivateBrightness(brightness);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetActivateBrightness'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetActivateBrightness of class  UIFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFrame_GetActivateBrightness00
static int tolua_PX2_UIFrame_GetActivateBrightness00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIFrame* self = (const UIFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetActivateBrightness'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetActivateBrightness();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetActivateBrightness'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetScriptHandler of class  UIFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFrame_SetScriptHandler00
static int tolua_PX2_UIFrame_SetScriptHandler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIFrame",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIFrame* self = (UIFrame*)  tolua_tousertype(tolua_S,1,0);
  const std::string scriptHandler = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetScriptHandler'", NULL);
#endif
  {
   self->SetScriptHandler(scriptHandler);
   tolua_pushcppstring(tolua_S,(const char*)scriptHandler);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetScriptHandler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetScriptHandler of class  UIFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFrame_GetScriptHandler00
static int tolua_PX2_UIFrame_GetScriptHandler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIFrame* self = (const UIFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetScriptHandler'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetScriptHandler();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetScriptHandler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateAddMask of class  UIFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFrame_CreateAddMask00
static int tolua_PX2_UIFrame_CreateAddMask00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIFrame* self = (UIFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateAddMask'", NULL);
#endif
  {
   UIPicBox* tolua_ret = (UIPicBox*)  self->CreateAddMask();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIPicBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateAddMask'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMaskVal of class  UIFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFrame_SetMaskVal00
static int tolua_PX2_UIFrame_SetMaskVal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIFrame* self = (UIFrame*)  tolua_tousertype(tolua_S,1,0);
  int maskVal = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMaskVal'", NULL);
#endif
  {
   self->SetMaskVal(maskVal);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMaskVal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMaskVal of class  UIFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFrame_GetMaskVal00
static int tolua_PX2_UIFrame_GetMaskVal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIFrame* self = (const UIFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMaskVal'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetMaskVal();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMaskVal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMask of class  UIFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFrame_GetMask00
static int tolua_PX2_UIFrame_GetMask00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIFrame* self = (UIFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMask'", NULL);
#endif
  {
   UIPicBox* tolua_ret = (UIPicBox*)  self->GetMask();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIPicBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMask'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DestoryMask of class  UIFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFrame_DestoryMask00
static int tolua_PX2_UIFrame_DestoryMask00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIFrame* self = (UIFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DestoryMask'", NULL);
#endif
  {
   self->DestoryMask();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DestoryMask'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_New00
static int tolua_PX2_UIPicBox_New00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIPicBox* tolua_ret = (UIPicBox*)  UIPicBox::New();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIPicBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'New'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_New01
static int tolua_PX2_UIPicBox_New01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   UIPicBox* tolua_ret = (UIPicBox*)  UIPicBox::New(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIPicBox");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_UIPicBox_New00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_new00
static int tolua_PX2_UIPicBox_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIPicBox* tolua_ret = (UIPicBox*)  Mtolua_new((UIPicBox)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIPicBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_new00_local
static int tolua_PX2_UIPicBox_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIPicBox* tolua_ret = (UIPicBox*)  Mtolua_new((UIPicBox)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIPicBox");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_new01
static int tolua_PX2_UIPicBox_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  int isDynamicBuffer = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   UIPicBox* tolua_ret = (UIPicBox*)  Mtolua_new((UIPicBox)(filename,isDynamicBuffer));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIPicBox");
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_UIPicBox_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_new01_local
static int tolua_PX2_UIPicBox_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  int isDynamicBuffer = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   UIPicBox* tolua_ret = (UIPicBox*)  Mtolua_new((UIPicBox)(filename,isDynamicBuffer));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIPicBox");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_UIPicBox_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_new02
static int tolua_PX2_UIPicBox_new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const std::string packName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string eleName = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
  int isDynamicBuffer = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   UIPicBox* tolua_ret = (UIPicBox*)  Mtolua_new((UIPicBox)(packName,eleName,isDynamicBuffer));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIPicBox");
   tolua_pushcppstring(tolua_S,(const char*)packName);
   tolua_pushcppstring(tolua_S,(const char*)eleName);
  }
 }
 return 3;
tolua_lerror:
 return tolua_PX2_UIPicBox_new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_new02_local
static int tolua_PX2_UIPicBox_new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const std::string packName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string eleName = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
  int isDynamicBuffer = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   UIPicBox* tolua_ret = (UIPicBox*)  Mtolua_new((UIPicBox)(packName,eleName,isDynamicBuffer));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIPicBox");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
   tolua_pushcppstring(tolua_S,(const char*)packName);
   tolua_pushcppstring(tolua_S,(const char*)eleName);
  }
 }
 return 3;
tolua_lerror:
 return tolua_PX2_UIPicBox_new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_delete00
static int tolua_PX2_UIPicBox_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIPicBox* self = (UIPicBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPicBoxType of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_SetPicBoxType00
static int tolua_PX2_UIPicBox_SetPicBoxType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIPicBox* self = (UIPicBox*)  tolua_tousertype(tolua_S,1,0);
  UIPicBox::PicBoxType type = ((UIPicBox::PicBoxType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPicBoxType'", NULL);
#endif
  {
   self->SetPicBoxType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPicBoxType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPicBoxType of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_GetPicBoxType00
static int tolua_PX2_UIPicBox_GetPicBoxType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIPicBox* self = (UIPicBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPicBoxType'", NULL);
#endif
  {
   UIPicBox::PicBoxType tolua_ret = (UIPicBox::PicBoxType)  self->GetPicBoxType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPicBoxType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPivot of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_SetPivot00
static int tolua_PX2_UIPicBox_SetPivot00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIPicBox* self = (UIPicBox*)  tolua_tousertype(tolua_S,1,0);
  float anchX = ((float)  tolua_tonumber(tolua_S,2,0));
  float anchZ = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPivot'", NULL);
#endif
  {
   self->SetPivot(anchX,anchZ);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPivot'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPivot of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_SetPivot01
static int tolua_PX2_UIPicBox_SetPivot01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  UIPicBox* self = (UIPicBox*)  tolua_tousertype(tolua_S,1,0);
  Float2 anchor = *((Float2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPivot'", NULL);
#endif
  {
   self->SetPivot(anchor);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_UIPicBox_SetPivot00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPivot of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_GetPivot00
static int tolua_PX2_UIPicBox_GetPivot00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIPicBox* self = (const UIPicBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPivot'", NULL);
#endif
  {
   const Float2& tolua_ret = (const Float2&)  self->GetPivot();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPivot'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPivot of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_GetPivot01
static int tolua_PX2_UIPicBox_GetPivot01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  UIPicBox* self = (UIPicBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPivot'", NULL);
#endif
  {
   Float2& tolua_ret = (Float2&)  self->GetPivot();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"Float2");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_UIPicBox_GetPivot00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSize of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_SetSize00
static int tolua_PX2_UIPicBox_SetSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIPicBox* self = (UIPicBox*)  tolua_tousertype(tolua_S,1,0);
  float width = ((float)  tolua_tonumber(tolua_S,2,0));
  float height = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSize'", NULL);
#endif
  {
   self->SetSize(width,height);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSize of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_SetSize01
static int tolua_PX2_UIPicBox_SetSize01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Sizef",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  UIPicBox* self = (UIPicBox*)  tolua_tousertype(tolua_S,1,0);
  const Sizef* size = ((const Sizef*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSize'", NULL);
#endif
  {
   self->SetSize(*size);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_UIPicBox_SetSize00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSize of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_GetSize00
static int tolua_PX2_UIPicBox_GetSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIPicBox* self = (const UIPicBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSize'", NULL);
#endif
  {
   const Sizef& tolua_ret = (const Sizef&)  self->GetSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Sizef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetWidth of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_SetWidth00
static int tolua_PX2_UIPicBox_SetWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIPicBox* self = (UIPicBox*)  tolua_tousertype(tolua_S,1,0);
  float width = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetWidth'", NULL);
#endif
  {
   self->SetWidth(width);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWidth of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_GetWidth00
static int tolua_PX2_UIPicBox_GetWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIPicBox* self = (const UIPicBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWidth'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetWidth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetHeight of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_SetHeight00
static int tolua_PX2_UIPicBox_SetHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIPicBox* self = (UIPicBox*)  tolua_tousertype(tolua_S,1,0);
  float height = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetHeight'", NULL);
#endif
  {
   self->SetHeight(height);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetHeight of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_GetHeight00
static int tolua_PX2_UIPicBox_GetHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIPicBox* self = (const UIPicBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetHeight'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: MakeSizeWithTex of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_MakeSizeWithTex00
static int tolua_PX2_UIPicBox_MakeSizeWithTex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIPicBox* self = (UIPicBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'MakeSizeWithTex'", NULL);
#endif
  {
   self->MakeSizeWithTex();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'MakeSizeWithTex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTexCornerSize of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_SetTexCornerSize00
static int tolua_PX2_UIPicBox_SetTexCornerSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIPicBox* self = (UIPicBox*)  tolua_tousertype(tolua_S,1,0);
  float widthLB = ((float)  tolua_tonumber(tolua_S,2,0));
  float heightLB = ((float)  tolua_tonumber(tolua_S,3,0));
  float widthRT = ((float)  tolua_tonumber(tolua_S,4,0));
  float heightRT = ((float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTexCornerSize'", NULL);
#endif
  {
   self->SetTexCornerSize(widthLB,heightLB,widthRT,heightRT);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTexCornerSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTexCornerSize of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_SetTexCornerSize01
static int tolua_PX2_UIPicBox_SetTexCornerSize01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Sizef",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const Sizef",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  UIPicBox* self = (UIPicBox*)  tolua_tousertype(tolua_S,1,0);
  const Sizef* sizeLB = ((const Sizef*)  tolua_tousertype(tolua_S,2,0));
  const Sizef* sizeRT = ((const Sizef*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTexCornerSize'", NULL);
#endif
  {
   self->SetTexCornerSize(*sizeLB,*sizeRT);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_UIPicBox_SetTexCornerSize00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTexCornerSizeLB of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_SetTexCornerSizeLB00
static int tolua_PX2_UIPicBox_SetTexCornerSizeLB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Sizef",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIPicBox* self = (UIPicBox*)  tolua_tousertype(tolua_S,1,0);
  const Sizef* sizeLB = ((const Sizef*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTexCornerSizeLB'", NULL);
#endif
  {
   self->SetTexCornerSizeLB(*sizeLB);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTexCornerSizeLB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTexCornerSizeRT of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_SetTexCornerSizeRT00
static int tolua_PX2_UIPicBox_SetTexCornerSizeRT00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Sizef",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIPicBox* self = (UIPicBox*)  tolua_tousertype(tolua_S,1,0);
  const Sizef* sizeRT = ((const Sizef*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTexCornerSizeRT'", NULL);
#endif
  {
   self->SetTexCornerSizeRT(*sizeRT);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTexCornerSizeRT'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTexCornerSizeLB of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_GetTexCornerSizeLB00
static int tolua_PX2_UIPicBox_GetTexCornerSizeLB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIPicBox* self = (const UIPicBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTexCornerSizeLB'", NULL);
#endif
  {
   const Sizef& tolua_ret = (const Sizef&)  self->GetTexCornerSizeLB();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Sizef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTexCornerSizeLB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTexCornerSizeLB of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_GetTexCornerSizeLB01
static int tolua_PX2_UIPicBox_GetTexCornerSizeLB01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  UIPicBox* self = (UIPicBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTexCornerSizeLB'", NULL);
#endif
  {
   Sizef& tolua_ret = (Sizef&)  self->GetTexCornerSizeLB();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"Sizef");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_UIPicBox_GetTexCornerSizeLB00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTexCornerSizeRT of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_GetTexCornerSizeRT00
static int tolua_PX2_UIPicBox_GetTexCornerSizeRT00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIPicBox* self = (const UIPicBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTexCornerSizeRT'", NULL);
#endif
  {
   const Sizef& tolua_ret = (const Sizef&)  self->GetTexCornerSizeRT();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Sizef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTexCornerSizeRT'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTexCornerSizeRT of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_GetTexCornerSizeRT01
static int tolua_PX2_UIPicBox_GetTexCornerSizeRT01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  UIPicBox* self = (UIPicBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTexCornerSizeRT'", NULL);
#endif
  {
   Sizef& tolua_ret = (Sizef&)  self->GetTexCornerSizeRT();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"Sizef");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_UIPicBox_GetTexCornerSizeRT00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAlpha of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_SetAlpha00
static int tolua_PX2_UIPicBox_SetAlpha00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIPicBox* self = (UIPicBox*)  tolua_tousertype(tolua_S,1,0);
  float alpha = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAlpha'", NULL);
#endif
  {
   self->SetAlpha(alpha);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAlpha'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPicBoxTexMode of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_GetPicBoxTexMode00
static int tolua_PX2_UIPicBox_GetPicBoxTexMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIPicBox* self = (const UIPicBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPicBoxTexMode'", NULL);
#endif
  {
   UIPicBox::PicBoxTexMode tolua_ret = (UIPicBox::PicBoxTexMode)  self->GetPicBoxTexMode();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPicBoxTexMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTexture of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_SetTexture00
static int tolua_PX2_UIPicBox_SetTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIPicBox* self = (UIPicBox*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTexture'", NULL);
#endif
  {
   self->SetTexture(filename);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTexture of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_SetTexture01
static int tolua_PX2_UIPicBox_SetTexture01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  UIPicBox* self = (UIPicBox*)  tolua_tousertype(tolua_S,1,0);
  const std::string texPackName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string eleName = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTexture'", NULL);
#endif
  {
   self->SetTexture(texPackName,eleName);
   tolua_pushcppstring(tolua_S,(const char*)texPackName);
   tolua_pushcppstring(tolua_S,(const char*)eleName);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_UIPicBox_SetTexture00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTexture of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_SetTexture02
static int tolua_PX2_UIPicBox_SetTexture02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Texture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  UIPicBox* self = (UIPicBox*)  tolua_tousertype(tolua_S,1,0);
  Texture* tex = ((Texture*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTexture'", NULL);
#endif
  {
   self->SetTexture(tex);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_UIPicBox_SetTexture01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTexture of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_GetTexture00
static int tolua_PX2_UIPicBox_GetTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIPicBox* self = (UIPicBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTexture'", NULL);
#endif
  {
   Texture* tolua_ret = (Texture*)  self->GetTexture();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Texture");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTextureFilename of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_GetTextureFilename00
static int tolua_PX2_UIPicBox_GetTextureFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIPicBox* self = (const UIPicBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTextureFilename'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetTextureFilename();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTextureFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTexturePackName of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_GetTexturePackName00
static int tolua_PX2_UIPicBox_GetTexturePackName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIPicBox* self = (const UIPicBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTexturePackName'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetTexturePackName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTexturePackName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetElementName of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_GetElementName00
static int tolua_PX2_UIPicBox_GetElementName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIPicBox* self = (const UIPicBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetElementName'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetElementName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetElementName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUVRepeat of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_SetUVRepeat00
static int tolua_PX2_UIPicBox_SetUVRepeat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIPicBox* self = (UIPicBox*)  tolua_tousertype(tolua_S,1,0);
  const Float2* uvRepeat = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUVRepeat'", NULL);
#endif
  {
   self->SetUVRepeat(*uvRepeat);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUVRepeat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_delete00
static int tolua_PX2_UIButtonBase_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButtonBase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButtonBase* self = (UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetButType of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_SetButType00
static int tolua_PX2_UIButtonBase_SetButType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButtonBase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButtonBase* self = (UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
  UIButtonBase::ButType butType = ((UIButtonBase::ButType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetButType'", NULL);
#endif
  {
   self->SetButType(butType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetButType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetButType of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_GetButType00
static int tolua_PX2_UIButtonBase_GetButType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIButtonBase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIButtonBase* self = (const UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetButType'", NULL);
#endif
  {
   UIButtonBase::ButType tolua_ret = (UIButtonBase::ButType)  self->GetButType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetButType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetButtonState of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_SetButtonState00
static int tolua_PX2_UIButtonBase_SetButtonState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButtonBase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButtonBase* self = (UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
  UIButtonBase::ButtonState state = ((UIButtonBase::ButtonState) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetButtonState'", NULL);
#endif
  {
   self->SetButtonState(state);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetButtonState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetButtonState of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_GetButtonState00
static int tolua_PX2_UIButtonBase_GetButtonState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIButtonBase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIButtonBase* self = (const UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetButtonState'", NULL);
#endif
  {
   UIButtonBase::ButtonState tolua_ret = (UIButtonBase::ButtonState)  self->GetButtonState();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetButtonState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPicBox of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_SetPicBox00
static int tolua_PX2_UIButtonBase_SetPicBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButtonBase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"UIPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButtonBase* self = (UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
  UIButtonBase::ButtonState state = ((UIButtonBase::ButtonState) (int)  tolua_tonumber(tolua_S,2,0));
  UIPicBox* pic = ((UIPicBox*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPicBox'", NULL);
#endif
  {
   self->SetPicBox(state,pic);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPicBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPicBoxAtState of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_GetPicBoxAtState00
static int tolua_PX2_UIButtonBase_GetPicBoxAtState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButtonBase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButtonBase* self = (UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
  UIButtonBase::ButtonState state = ((UIButtonBase::ButtonState) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPicBoxAtState'", NULL);
#endif
  {
   UIPicBox* tolua_ret = (UIPicBox*)  self->GetPicBoxAtState(state);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIPicBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPicBoxAtState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetStateColor of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_SetStateColor00
static int tolua_PX2_UIButtonBase_SetStateColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButtonBase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButtonBase* self = (UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
  UIButtonBase::ButtonState state = ((UIButtonBase::ButtonState) (int)  tolua_tonumber(tolua_S,2,0));
  const Float3* color = ((const Float3*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetStateColor'", NULL);
#endif
  {
   self->SetStateColor(state,*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetStateColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetStateColor of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_GetStateColor00
static int tolua_PX2_UIButtonBase_GetStateColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIButtonBase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIButtonBase* self = (const UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
  UIButtonBase::ButtonState state = ((UIButtonBase::ButtonState) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetStateColor'", NULL);
#endif
  {
   const Float3& tolua_ret = (const Float3&)  self->GetStateColor(state);
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float3");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetStateColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetStateAlpha of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_SetStateAlpha00
static int tolua_PX2_UIButtonBase_SetStateAlpha00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButtonBase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButtonBase* self = (UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
  UIButtonBase::ButtonState state = ((UIButtonBase::ButtonState) (int)  tolua_tonumber(tolua_S,2,0));
  float alpha = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetStateAlpha'", NULL);
#endif
  {
   self->SetStateAlpha(state,alpha);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetStateAlpha'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetStateAlpha of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_GetStateAlpha00
static int tolua_PX2_UIButtonBase_GetStateAlpha00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIButtonBase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIButtonBase* self = (const UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
  UIButtonBase::ButtonState state = ((UIButtonBase::ButtonState) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetStateAlpha'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetStateAlpha(state);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetStateAlpha'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetStateBrightness of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_SetStateBrightness00
static int tolua_PX2_UIButtonBase_SetStateBrightness00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButtonBase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButtonBase* self = (UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
  UIButtonBase::ButtonState state = ((UIButtonBase::ButtonState) (int)  tolua_tonumber(tolua_S,2,0));
  float brightness = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetStateBrightness'", NULL);
#endif
  {
   self->SetStateBrightness(state,brightness);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetStateBrightness'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetStateBrightness of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_GetStateBrightness00
static int tolua_PX2_UIButtonBase_GetStateBrightness00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIButtonBase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIButtonBase* self = (const UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
  UIButtonBase::ButtonState state = ((UIButtonBase::ButtonState) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetStateBrightness'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetStateBrightness(state);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetStateBrightness'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetActivate of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_SetActivate00
static int tolua_PX2_UIButtonBase_SetActivate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButtonBase",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButtonBase* self = (UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
  bool act = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetActivate'", NULL);
#endif
  {
   self->SetActivate(act);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetActivate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateAddText of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_CreateAddText00
static int tolua_PX2_UIButtonBase_CreateAddText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButtonBase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButtonBase* self = (UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateAddText'", NULL);
#endif
  {
   UIFText* tolua_ret = (UIFText*)  self->CreateAddText();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFText");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateAddText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateAddText of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_CreateAddText01
static int tolua_PX2_UIButtonBase_CreateAddText01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButtonBase",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  UIButtonBase* self = (UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
  const std::string text = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateAddText'", NULL);
#endif
  {
   UIFText* tolua_ret = (UIFText*)  self->CreateAddText(text);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFText");
   tolua_pushcppstring(tolua_S,(const char*)text);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_UIButtonBase_CreateAddText00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateAddText of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_CreateAddText02
static int tolua_PX2_UIButtonBase_CreateAddText02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButtonBase",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  UIButtonBase* self = (UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
  const std::string text = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const Float3* color = ((const Float3*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateAddText'", NULL);
#endif
  {
   UIFText* tolua_ret = (UIFText*)  self->CreateAddText(text,*color);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFText");
   tolua_pushcppstring(tolua_S,(const char*)text);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_UIButtonBase_CreateAddText01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFText of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_GetFText00
static int tolua_PX2_UIButtonBase_GetFText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButtonBase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButtonBase* self = (UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFText'", NULL);
#endif
  {
   UIFText* tolua_ret = (UIFText*)  self->GetFText();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFText");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetText of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_GetText00
static int tolua_PX2_UIButtonBase_GetText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButtonBase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButtonBase* self = (UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetText'", NULL);
#endif
  {
   UIText* tolua_ret = (UIText*)  self->GetText();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIText");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UIButton */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButton_new00
static int tolua_PX2_UIButton_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIButton",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButtonBase::ButType butType = ((UIButtonBase::ButType) (int)  tolua_tonumber(tolua_S,2,UIButtonBase::BT_COLOR));
  {
   UIButton* tolua_ret = (UIButton*)  Mtolua_new((UIButton)(butType));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIButton");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UIButton */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButton_new00_local
static int tolua_PX2_UIButton_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIButton",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButtonBase::ButType butType = ((UIButtonBase::ButType) (int)  tolua_tonumber(tolua_S,2,UIButtonBase::BT_COLOR));
  {
   UIButton* tolua_ret = (UIButton*)  Mtolua_new((UIButton)(butType));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIButton");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIButton */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButton_delete00
static int tolua_PX2_UIButton_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButton* self = (UIButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  UIButton */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButton_New00
static int tolua_PX2_UIButton_New00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIButton* tolua_ret = (UIButton*)  UIButton::New();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIButton");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'New'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  UIButton */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButton_New01
static int tolua_PX2_UIButton_New01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIButton",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   UIButton* tolua_ret = (UIButton*)  UIButton::New(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIButton");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_UIButton_New00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Enable of class  UIButton */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButton_Enable00
static int tolua_PX2_UIButton_Enable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButton",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButton* self = (UIButton*)  tolua_tousertype(tolua_S,1,0);
  bool enable = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Enable'", NULL);
#endif
  {
   self->Enable(enable);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Enable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAfterReleasedType of class  UIButton */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButton_SetAfterReleasedType00
static int tolua_PX2_UIButton_SetAfterReleasedType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButton",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButton* self = (UIButton*)  tolua_tousertype(tolua_S,1,0);
  UIButton::AfterReleasedType type = ((UIButton::AfterReleasedType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAfterReleasedType'", NULL);
#endif
  {
   self->SetAfterReleasedType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAfterReleasedType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAfterReleasedType of class  UIButton */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButton_GetAfterReleasedType00
static int tolua_PX2_UIButton_GetAfterReleasedType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIButton* self = (const UIButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAfterReleasedType'", NULL);
#endif
  {
   UIButton::AfterReleasedType tolua_ret = (UIButton::AfterReleasedType)  self->GetAfterReleasedType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAfterReleasedType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAfterReleasedRecoverTime of class  UIButton */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButton_SetAfterReleasedRecoverTime00
static int tolua_PX2_UIButton_SetAfterReleasedRecoverTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButton",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButton* self = (UIButton*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAfterReleasedRecoverTime'", NULL);
#endif
  {
   self->SetAfterReleasedRecoverTime(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAfterReleasedRecoverTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAfterReleasedRecoverTime of class  UIButton */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButton_GetAfterReleasedRecoverTime00
static int tolua_PX2_UIButton_GetAfterReleasedRecoverTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIButton* self = (const UIButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAfterReleasedRecoverTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetAfterReleasedRecoverTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAfterReleasedRecoverTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_new00
static int tolua_PX2_UIItem_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIItem* tolua_ret = (UIItem*)  Mtolua_new((UIItem)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIItem");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_new00_local
static int tolua_PX2_UIItem_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIItem* tolua_ret = (UIItem*)  Mtolua_new((UIItem)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIItem");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_delete00
static int tolua_PX2_UIItem_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIItem* self = (UIItem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetRootItem of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_SetRootItem00
static int tolua_PX2_UIItem_SetRootItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIItem",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIItem* self = (UIItem*)  tolua_tousertype(tolua_S,1,0);
  bool root = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetRootItem'", NULL);
#endif
  {
   self->SetRootItem(root);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetRootItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsRootItem of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_IsRootItem00
static int tolua_PX2_UIItem_IsRootItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIItem* self = (const UIItem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsRootItem'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsRootItem();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsRootItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ShowItem of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_ShowItem00
static int tolua_PX2_UIItem_ShowItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIItem",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIItem* self = (UIItem*)  tolua_tousertype(tolua_S,1,0);
  bool show = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ShowItem'", NULL);
#endif
  {
   self->ShowItem(show);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ShowItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsShowItem of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_IsShowItem00
static int tolua_PX2_UIItem_IsShowItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIItem* self = (const UIItem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsShowItem'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsShowItem();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsShowItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddItem of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_AddItem00
static int tolua_PX2_UIItem_AddItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIItem",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIItem* self = (UIItem*)  tolua_tousertype(tolua_S,1,0);
  const std::string label = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
  Object* obj = ((Object*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddItem'", NULL);
#endif
  {
   UIItem* tolua_ret = (UIItem*)  self->AddItem(label,name,obj);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIItem");
   tolua_pushcppstring(tolua_S,(const char*)label);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnChildAttached of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_OnChildAttached00
static int tolua_PX2_UIItem_OnChildAttached00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIItem",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Movable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIItem* self = (UIItem*)  tolua_tousertype(tolua_S,1,0);
  Movable* child = ((Movable*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnChildAttached'", NULL);
#endif
  {
   self->OnChildAttached(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnChildAttached'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveItem of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_RemoveItem00
static int tolua_PX2_UIItem_RemoveItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIItem",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"UIItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIItem* self = (UIItem*)  tolua_tousertype(tolua_S,1,0);
  UIItem* item = ((UIItem*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveItem'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->RemoveItem(item);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveAllChildItems of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_RemoveAllChildItems00
static int tolua_PX2_UIItem_RemoveAllChildItems00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIItem* self = (UIItem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveAllChildItems'", NULL);
#endif
  {
   self->RemoveAllChildItems();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveAllChildItems'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnChildDetach of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_OnChildDetach00
static int tolua_PX2_UIItem_OnChildDetach00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIItem",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Movable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIItem* self = (UIItem*)  tolua_tousertype(tolua_S,1,0);
  Movable* child = ((Movable*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnChildDetach'", NULL);
#endif
  {
   self->OnChildDetach(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnChildDetach'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumChildItem of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_GetNumChildItem00
static int tolua_PX2_UIItem_GetNumChildItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIItem* self = (const UIItem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumChildItem'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumChildItem();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumChildItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetItemObject of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_SetItemObject00
static int tolua_PX2_UIItem_SetItemObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIItem",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIItem* self = (UIItem*)  tolua_tousertype(tolua_S,1,0);
  Object* obj = ((Object*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetItemObject'", NULL);
#endif
  {
   self->SetItemObject(obj);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetItemObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetItemObject of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_GetItemObject00
static int tolua_PX2_UIItem_GetItemObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIItem* self = (UIItem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetItemObject'", NULL);
#endif
  {
   Object* tolua_ret = (Object*)  self->GetItemObject();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Object");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetItemObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetItemByObject of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_GetItemByObject00
static int tolua_PX2_UIItem_GetItemByObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIItem",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIItem* self = (UIItem*)  tolua_tousertype(tolua_S,1,0);
  Object* obj = ((Object*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetItemByObject'", NULL);
#endif
  {
   UIItem* tolua_ret = (UIItem*)  self->GetItemByObject(obj);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIItem");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetItemByObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateButArrow of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_CreateButArrow00
static int tolua_PX2_UIItem_CreateButArrow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIItem* self = (UIItem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateButArrow'", NULL);
#endif
  {
   UICheckButton* tolua_ret = (UICheckButton*)  self->CreateButArrow();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UICheckButton");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateButArrow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetButArrow of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_GetButArrow00
static int tolua_PX2_UIItem_GetButArrow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIItem* self = (UIItem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetButArrow'", NULL);
#endif
  {
   UICheckButton* tolua_ret = (UICheckButton*)  self->GetButArrow();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UICheckButton");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetButArrow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DestoryArrowBut of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_DestoryArrowBut00
static int tolua_PX2_UIItem_DestoryArrowBut00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIItem* self = (UIItem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DestoryArrowBut'", NULL);
#endif
  {
   self->DestoryArrowBut();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DestoryArrowBut'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Expand of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_Expand00
static int tolua_PX2_UIItem_Expand00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIItem",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIItem* self = (UIItem*)  tolua_tousertype(tolua_S,1,0);
  bool expand = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Expand'", NULL);
#endif
  {
   self->Expand(expand);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Expand'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsExpand of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_IsExpand00
static int tolua_PX2_UIItem_IsExpand00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIItem* self = (const UIItem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsExpand'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsExpand();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsExpand'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumAllChildsExpand of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_GetNumAllChildsExpand00
static int tolua_PX2_UIItem_GetNumAllChildsExpand00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIItem* self = (const UIItem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumAllChildsExpand'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumAllChildsExpand();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumAllChildsExpand'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLabel of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_SetLabel00
static int tolua_PX2_UIItem_SetLabel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIItem",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIItem* self = (UIItem*)  tolua_tousertype(tolua_S,1,0);
  const std::string label = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLabel'", NULL);
#endif
  {
   self->SetLabel(label);
   tolua_pushcppstring(tolua_S,(const char*)label);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLabel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLabel of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_GetLabel00
static int tolua_PX2_UIItem_GetLabel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIItem* self = (const UIItem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLabel'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetLabel();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLabel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetIconArrowState of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_SetIconArrowState00
static int tolua_PX2_UIItem_SetIconArrowState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIItem",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIItem* self = (UIItem*)  tolua_tousertype(tolua_S,1,0);
  UIItem::IconArrowState state = ((UIItem::IconArrowState) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetIconArrowState'", NULL);
#endif
  {
   self->SetIconArrowState(state);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetIconArrowState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetIconArrowState of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_GetIconArrowState00
static int tolua_PX2_UIItem_GetIconArrowState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIItem* self = (const UIItem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetIconArrowState'", NULL);
#endif
  {
   UIItem::IconArrowState tolua_ret = (UIItem::IconArrowState)  self->GetIconArrowState();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetIconArrowState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetButBack of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_GetButBack00
static int tolua_PX2_UIItem_GetButBack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIItem* self = (UIItem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetButBack'", NULL);
#endif
  {
   UIButton* tolua_ret = (UIButton*)  self->GetButBack();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIButton");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetButBack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetIcon of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_GetIcon00
static int tolua_PX2_UIItem_GetIcon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIItem* self = (UIItem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetIcon'", NULL);
#endif
  {
   UIFPicBox* tolua_ret = (UIFPicBox*)  self->GetIcon();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFPicBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetIcon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFText of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_GetFText00
static int tolua_PX2_UIItem_GetFText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIItem* self = (UIItem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFText'", NULL);
#endif
  {
   UIFText* tolua_ret = (UIFText*)  self->GetFText();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFText");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Select of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_Select00
static int tolua_PX2_UIItem_Select00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIItem",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIItem* self = (UIItem*)  tolua_tousertype(tolua_S,1,0);
  bool select = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Select'", NULL);
#endif
  {
   self->Select(select);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Select'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsSelected of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_IsSelected00
static int tolua_PX2_UIItem_IsSelected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIItem* self = (const UIItem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsSelected'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsSelected();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsSelected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnSizeChanged of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_OnSizeChanged00
static int tolua_PX2_UIItem_OnSizeChanged00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIItem* self = (UIItem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnSizeChanged'", NULL);
#endif
  {
   self->OnSizeChanged();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnSizeChanged'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLevelAdjust of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_SetLevelAdjust00
static int tolua_PX2_UIItem_SetLevelAdjust00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIItem",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIItem* self = (UIItem*)  tolua_tousertype(tolua_S,1,0);
  float adjust = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLevelAdjust'", NULL);
#endif
  {
   self->SetLevelAdjust(adjust);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLevelAdjust'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLevelAdjust of class  UIItem */
#ifndef TOLUA_DISABLE_tolua_PX2_UIItem_GetLevelAdjust00
static int tolua_PX2_UIItem_GetLevelAdjust00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIItem* self = (const UIItem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLevelAdjust'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetLevelAdjust();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLevelAdjust'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UIList */
#ifndef TOLUA_DISABLE_tolua_PX2_UIList_new00
static int tolua_PX2_UIList_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIList",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIList* tolua_ret = (UIList*)  Mtolua_new((UIList)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIList");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UIList */
#ifndef TOLUA_DISABLE_tolua_PX2_UIList_new00_local
static int tolua_PX2_UIList_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIList",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIList* tolua_ret = (UIList*)  Mtolua_new((UIList)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIList");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIList */
#ifndef TOLUA_DISABLE_tolua_PX2_UIList_delete00
static int tolua_PX2_UIList_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIList",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIList* self = (UIList*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSliderSize of class  UIList */
#ifndef TOLUA_DISABLE_tolua_PX2_UIList_SetSliderSize00
static int tolua_PX2_UIList_SetSliderSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIList",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIList* self = (UIList*)  tolua_tousertype(tolua_S,1,0);
  float size = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSliderSize'", NULL);
#endif
  {
   self->SetSliderSize(size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSliderSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSliderSize of class  UIList */
#ifndef TOLUA_DISABLE_tolua_PX2_UIList_GetSliderSize00
static int tolua_PX2_UIList_GetSliderSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIList",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIList* self = (const UIList*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSliderSize'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetSliderSize();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSliderSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetItemHeight of class  UIList */
#ifndef TOLUA_DISABLE_tolua_PX2_UIList_SetItemHeight00
static int tolua_PX2_UIList_SetItemHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIList",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIList* self = (UIList*)  tolua_tousertype(tolua_S,1,0);
  float height = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetItemHeight'", NULL);
#endif
  {
   self->SetItemHeight(height);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetItemHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetItemHeight of class  UIList */
#ifndef TOLUA_DISABLE_tolua_PX2_UIList_GetItemHeight00
static int tolua_PX2_UIList_GetItemHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIList",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIList* self = (const UIList*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetItemHeight'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetItemHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetItemHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddItem of class  UIList */
#ifndef TOLUA_DISABLE_tolua_PX2_UIList_AddItem00
static int tolua_PX2_UIList_AddItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIList",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIList* self = (UIList*)  tolua_tousertype(tolua_S,1,0);
  const std::string text = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddItem'", NULL);
#endif
  {
   UIItem* tolua_ret = (UIItem*)  self->AddItem(text);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIItem");
   tolua_pushcppstring(tolua_S,(const char*)text);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveAllItems of class  UIList */
#ifndef TOLUA_DISABLE_tolua_PX2_UIList_RemoveAllItems00
static int tolua_PX2_UIList_RemoveAllItems00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIList",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIList* self = (UIList*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveAllItems'", NULL);
#endif
  {
   self->RemoveAllItems();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveAllItems'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetContentHeight of class  UIList */
#ifndef TOLUA_DISABLE_tolua_PX2_UIList_GetContentHeight00
static int tolua_PX2_UIList_GetContentHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIList",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIList* self = (const UIList*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetContentHeight'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetContentHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetContentHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddSelectItem of class  UIList */
#ifndef TOLUA_DISABLE_tolua_PX2_UIList_AddSelectItem00
static int tolua_PX2_UIList_AddSelectItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIList",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"UIItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIList* self = (UIList*)  tolua_tousertype(tolua_S,1,0);
  UIItem* item = ((UIItem*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddSelectItem'", NULL);
#endif
  {
   self->AddSelectItem(item);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddSelectItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ClearAllSelectItems of class  UIList */
#ifndef TOLUA_DISABLE_tolua_PX2_UIList_ClearAllSelectItems00
static int tolua_PX2_UIList_ClearAllSelectItems00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIList",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIList* self = (UIList*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ClearAllSelectItems'", NULL);
#endif
  {
   self->ClearAllSelectItems();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ClearAllSelectItems'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSelectedItem of class  UIList */
#ifndef TOLUA_DISABLE_tolua_PX2_UIList_GetSelectedItem00
static int tolua_PX2_UIList_GetSelectedItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIList",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIList* self = (UIList*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSelectedItem'", NULL);
#endif
  {
   UIItem* tolua_ret = (UIItem*)  self->GetSelectedItem();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIItem");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSelectedItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnSelected of class  UIList */
#ifndef TOLUA_DISABLE_tolua_PX2_UIList_OnSelected00
static int tolua_PX2_UIList_OnSelected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIList",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"UIItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIList* self = (UIList*)  tolua_tousertype(tolua_S,1,0);
  UIItem* item = ((UIItem*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnSelected'", NULL);
#endif
  {
   self->OnSelected(item);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnSelected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSelectIndex of class  UIList */
#ifndef TOLUA_DISABLE_tolua_PX2_UIList_GetSelectIndex00
static int tolua_PX2_UIList_GetSelectIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIList",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIList* self = (const UIList*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSelectIndex'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetSelectIndex();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSelectIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTextColor of class  UIList */
#ifndef TOLUA_DISABLE_tolua_PX2_UIList_SetTextColor00
static int tolua_PX2_UIList_SetTextColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIList",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIList* self = (UIList*)  tolua_tousertype(tolua_S,1,0);
  const Float3* textColor = ((const Float3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTextColor'", NULL);
#endif
  {
   self->SetTextColor(*textColor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTextColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTextColor of class  UIList */
#ifndef TOLUA_DISABLE_tolua_PX2_UIList_GetTextColor00
static int tolua_PX2_UIList_GetTextColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIList",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIList* self = (const UIList*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTextColor'", NULL);
#endif
  {
   const Float3& tolua_ret = (const Float3&)  self->GetTextColor();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float3");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTextColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnSizeChanged of class  UIList */
#ifndef TOLUA_DISABLE_tolua_PX2_UIList_OnSizeChanged00
static int tolua_PX2_UIList_OnSizeChanged00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIList",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIList* self = (UIList*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnSizeChanged'", NULL);
#endif
  {
   self->OnSizeChanged();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnSizeChanged'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UIComboBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIComboBox_new00
static int tolua_PX2_UIComboBox_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIComboBox* tolua_ret = (UIComboBox*)  Mtolua_new((UIComboBox)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIComboBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UIComboBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIComboBox_new00_local
static int tolua_PX2_UIComboBox_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIComboBox* tolua_ret = (UIComboBox*)  Mtolua_new((UIComboBox)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIComboBox");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIComboBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIComboBox_delete00
static int tolua_PX2_UIComboBox_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIComboBox* self = (UIComboBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddChooseStr of class  UIComboBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIComboBox_AddChooseStr00
static int tolua_PX2_UIComboBox_AddChooseStr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIComboBox",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIComboBox* self = (UIComboBox*)  tolua_tousertype(tolua_S,1,0);
  const std::string choose = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddChooseStr'", NULL);
#endif
  {
   UIItem* tolua_ret = (UIItem*)  self->AddChooseStr(choose);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIItem");
   tolua_pushcppstring(tolua_S,(const char*)choose);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddChooseStr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveAllChooseStr of class  UIComboBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIComboBox_RemoveAllChooseStr00
static int tolua_PX2_UIComboBox_RemoveAllChooseStr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIComboBox* self = (UIComboBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveAllChooseStr'", NULL);
#endif
  {
   self->RemoveAllChooseStr();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveAllChooseStr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumChooseStr of class  UIComboBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIComboBox_GetNumChooseStr00
static int tolua_PX2_UIComboBox_GetNumChooseStr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIComboBox* self = (const UIComboBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumChooseStr'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumChooseStr();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumChooseStr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetChooseStrByIndex of class  UIComboBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIComboBox_GetChooseStrByIndex00
static int tolua_PX2_UIComboBox_GetChooseStrByIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIComboBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIComboBox* self = (const UIComboBox*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetChooseStrByIndex'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->GetChooseStrByIndex(i);
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetChooseStrByIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetChooseListHeightSameWithChooses of class  UIComboBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIComboBox_SetChooseListHeightSameWithChooses00
static int tolua_PX2_UIComboBox_SetChooseListHeightSameWithChooses00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIComboBox* self = (UIComboBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetChooseListHeightSameWithChooses'", NULL);
#endif
  {
   self->SetChooseListHeightSameWithChooses();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetChooseListHeightSameWithChooses'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Choose of class  UIComboBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIComboBox_Choose00
static int tolua_PX2_UIComboBox_Choose00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIComboBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIComboBox* self = (UIComboBox*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Choose'", NULL);
#endif
  {
   self->Choose(i);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Choose'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetChoose of class  UIComboBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIComboBox_GetChoose00
static int tolua_PX2_UIComboBox_GetChoose00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIComboBox* self = (const UIComboBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetChoose'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetChoose();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetChoose'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetChooseStr of class  UIComboBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIComboBox_GetChooseStr00
static int tolua_PX2_UIComboBox_GetChooseStr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIComboBox* self = (const UIComboBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetChooseStr'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->GetChooseStr();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetChooseStr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSelectButton of class  UIComboBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIComboBox_GetSelectButton00
static int tolua_PX2_UIComboBox_GetSelectButton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIComboBox* self = (UIComboBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSelectButton'", NULL);
#endif
  {
   UIButton* tolua_ret = (UIButton*)  self->GetSelectButton();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIButton");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSelectButton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetChooseList of class  UIComboBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIComboBox_GetChooseList00
static int tolua_PX2_UIComboBox_GetChooseList00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIComboBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIComboBox* self = (UIComboBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetChooseList'", NULL);
#endif
  {
   UIList* tolua_ret = (UIList*)  self->GetChooseList();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIList");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetChooseList'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTextColor of class  UIComboBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIComboBox_SetTextColor00
static int tolua_PX2_UIComboBox_SetTextColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIComboBox",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIComboBox* self = (UIComboBox*)  tolua_tousertype(tolua_S,1,0);
  const Float3* textColor = ((const Float3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTextColor'", NULL);
#endif
  {
   self->SetTextColor(*textColor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTextColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  UIFPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFPicBox_New00
static int tolua_PX2_UIFPicBox_New00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIFPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIFPicBox* tolua_ret = (UIFPicBox*)  UIFPicBox::New();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFPicBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'New'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  UIFPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFPicBox_New01
static int tolua_PX2_UIFPicBox_New01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIFPicBox",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   UIFPicBox* tolua_ret = (UIFPicBox*)  UIFPicBox::New(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFPicBox");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_UIFPicBox_New00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UIFPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFPicBox_new00
static int tolua_PX2_UIFPicBox_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIFPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIFPicBox* tolua_ret = (UIFPicBox*)  Mtolua_new((UIFPicBox)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFPicBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UIFPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFPicBox_new00_local
static int tolua_PX2_UIFPicBox_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIFPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIFPicBox* tolua_ret = (UIFPicBox*)  Mtolua_new((UIFPicBox)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFPicBox");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIFPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFPicBox_delete00
static int tolua_PX2_UIFPicBox_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIFPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIFPicBox* self = (UIFPicBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: MakeSizeWithTex of class  UIFPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFPicBox_MakeSizeWithTex00
static int tolua_PX2_UIFPicBox_MakeSizeWithTex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIFPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIFPicBox* self = (UIFPicBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'MakeSizeWithTex'", NULL);
#endif
  {
   self->MakeSizeWithTex();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'MakeSizeWithTex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUIPicBox of class  UIFPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFPicBox_GetUIPicBox00
static int tolua_PX2_UIFPicBox_GetUIPicBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIFPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIFPicBox* self = (UIFPicBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUIPicBox'", NULL);
#endif
  {
   UIPicBox* tolua_ret = (UIPicBox*)  self->GetUIPicBox();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIPicBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUIPicBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_new00
static int tolua_PX2_UIText_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIText* tolua_ret = (UIText*)  Mtolua_new((UIText)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIText");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_new00_local
static int tolua_PX2_UIText_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIText* tolua_ret = (UIText*)  Mtolua_new((UIText)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIText");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_delete00
static int tolua_PX2_UIText_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_New00
static int tolua_PX2_UIText_New00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIText* tolua_ret = (UIText*)  UIText::New();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIText");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'New'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_New01
static int tolua_PX2_UIText_New01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIText",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   UIText* tolua_ret = (UIText*)  UIText::New(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIText");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_UIText_New00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFontType of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_GetFontType00
static int tolua_PX2_UIText_GetFontType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIText* self = (const UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFontType'", NULL);
#endif
  {
   UIText::FontType tolua_ret = (UIText::FontType)  self->GetFontType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFontType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFont of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_SetFont00
static int tolua_PX2_UIText_SetFont00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
  const std::string fontFilename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  int fontWidth = ((int)  tolua_tonumber(tolua_S,3,0));
  int fontHeight = ((int)  tolua_tonumber(tolua_S,4,0));
  unsigned int fontStyle = ((unsigned int)  tolua_tonumber(tolua_S,5,FES_NORMAL));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFont'", NULL);
#endif
  {
   self->SetFont(fontFilename,fontWidth,fontHeight,fontStyle);
   tolua_pushcppstring(tolua_S,(const char*)fontFilename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFontBimMap of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_SetFontBimMap00
static int tolua_PX2_UIText_SetFontBimMap00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
  const std::string fontFilename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFontBimMap'", NULL);
#endif
  {
   self->SetFontBimMap(fontFilename);
   tolua_pushcppstring(tolua_S,(const char*)fontFilename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFontBimMap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFont of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_GetFont00
static int tolua_PX2_UIText_GetFont00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFont'", NULL);
#endif
  {
   Font* tolua_ret = (Font*)  self->GetFont();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Font");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetText of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_SetText00
static int tolua_PX2_UIText_SetText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
  const std::string text = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetText'", NULL);
#endif
  {
   self->SetText(text);
   tolua_pushcppstring(tolua_S,(const char*)text);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetText of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_GetText00
static int tolua_PX2_UIText_GetText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIText* self = (const UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetText'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetText();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetKey of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_SetKey00
static int tolua_PX2_UIText_SetKey00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
  const std::string key = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetKey'", NULL);
#endif
  {
   self->SetKey(key);
   tolua_pushcppstring(tolua_S,(const char*)key);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetKey'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetKey of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_GetKey00
static int tolua_PX2_UIText_GetKey00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIText* self = (const UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetKey'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetKey();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetKey'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFontStyle of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_SetFontStyle00
static int tolua_PX2_UIText_SetFontStyle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
  int style = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFontStyle'", NULL);
#endif
  {
   self->SetFontStyle(style);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFontStyle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFontStyle of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_GetFontStyle00
static int tolua_PX2_UIText_GetFontStyle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIText* self = (const UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFontStyle'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetFontStyle();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFontStyle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsItalic of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_IsItalic00
static int tolua_PX2_UIText_IsItalic00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIText* self = (const UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsItalic'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsItalic();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsItalic'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsUnderLine of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_IsUnderLine00
static int tolua_PX2_UIText_IsUnderLine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIText* self = (const UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsUnderLine'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsUnderLine();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsUnderLine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDrawStyle of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_SetDrawStyle00
static int tolua_PX2_UIText_SetDrawStyle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
  int style = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDrawStyle'", NULL);
#endif
  {
   self->SetDrawStyle(style);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDrawStyle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDrawStyle of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_GetDrawStyle00
static int tolua_PX2_UIText_GetDrawStyle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIText* self = (const UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDrawStyle'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetDrawStyle();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDrawStyle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFontColor of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_SetFontColor00
static int tolua_PX2_UIText_SetFontColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
  const Float3* color = ((const Float3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFontColor'", NULL);
#endif
  {
   self->SetFontColor(*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFontColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFontColor of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_GetFontColor00
static int tolua_PX2_UIText_GetFontColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIText* self = (const UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFontColor'", NULL);
#endif
  {
   Float3 tolua_ret = (Float3)  self->GetFontColor();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Float3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Float3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Float3));
     tolua_pushusertype(tolua_S,tolua_obj,"Float3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFontColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFontAlpha of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_SetFontAlpha00
static int tolua_PX2_UIText_SetFontAlpha00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
  float alpha = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFontAlpha'", NULL);
#endif
  {
   self->SetFontAlpha(alpha);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFontAlpha'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFontAlpha of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_GetFontAlpha00
static int tolua_PX2_UIText_GetFontAlpha00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIText* self = (const UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFontAlpha'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetFontAlpha();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFontAlpha'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetBorderShadowColor of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_SetBorderShadowColor00
static int tolua_PX2_UIText_SetBorderShadowColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
  const Float3* color = ((const Float3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetBorderShadowColor'", NULL);
#endif
  {
   self->SetBorderShadowColor(*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetBorderShadowColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetBorderShadowColor of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_GetBorderShadowColor00
static int tolua_PX2_UIText_GetBorderShadowColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIText* self = (const UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetBorderShadowColor'", NULL);
#endif
  {
   Float3 tolua_ret = (Float3)  self->GetBorderShadowColor();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Float3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Float3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Float3));
     tolua_pushusertype(tolua_S,tolua_obj,"Float3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetBorderShadowColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetBorderShadowAlpha of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_SetBorderShadowAlpha00
static int tolua_PX2_UIText_SetBorderShadowAlpha00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
  float alpha = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetBorderShadowAlpha'", NULL);
#endif
  {
   self->SetBorderShadowAlpha(alpha);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetBorderShadowAlpha'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetBorderShadowAlpha of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_GetBorderShadowAlpha00
static int tolua_PX2_UIText_GetBorderShadowAlpha00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIText* self = (const UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetBorderShadowAlpha'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetBorderShadowAlpha();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetBorderShadowAlpha'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetShadowBorderSize of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_SetShadowBorderSize00
static int tolua_PX2_UIText_SetShadowBorderSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
  float size = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetShadowBorderSize'", NULL);
#endif
  {
   self->SetShadowBorderSize(size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetShadowBorderSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetShadowBorderSize of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_GetShadowBorderSize00
static int tolua_PX2_UIText_GetShadowBorderSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIText* self = (const UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetShadowBorderSize'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetShadowBorderSize();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetShadowBorderSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetRectUseage of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_SetRectUseage00
static int tolua_PX2_UIText_SetRectUseage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
  UIText::RectUseage useage = ((UIText::RectUseage) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetRectUseage'", NULL);
#endif
  {
   self->SetRectUseage(useage);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetRectUseage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRectUseage of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_GetRectUseage00
static int tolua_PX2_UIText_GetRectUseage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIText* self = (const UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRectUseage'", NULL);
#endif
  {
   UIText::RectUseage tolua_ret = (UIText::RectUseage)  self->GetRectUseage();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRectUseage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetRect of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_SetRect00
static int tolua_PX2_UIText_SetRect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Rectf",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
  const Rectf* rect = ((const Rectf*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetRect'", NULL);
#endif
  {
   self->SetRect(*rect);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetRect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRect of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_GetRect00
static int tolua_PX2_UIText_GetRect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIText* self = (const UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRect'", NULL);
#endif
  {
   const Rectf& tolua_ret = (const Rectf&)  self->GetRect();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Rectf");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetOffset of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_SetOffset00
static int tolua_PX2_UIText_SetOffset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
  const Float2* offset = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetOffset'", NULL);
#endif
  {
   self->SetOffset(*offset);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetOffset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetOffset of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_GetOffset00
static int tolua_PX2_UIText_GetOffset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIText* self = (const UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetOffset'", NULL);
#endif
  {
   const Float2& tolua_ret = (const Float2&)  self->GetOffset();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetOffset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSpace of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_SetSpace00
static int tolua_PX2_UIText_SetSpace00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
  const Float2* space = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSpace'", NULL);
#endif
  {
   self->SetSpace(*space);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSpace'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSpace of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_GetSpace00
static int tolua_PX2_UIText_GetSpace00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIText* self = (const UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSpace'", NULL);
#endif
  {
   const Float2& tolua_ret = (const Float2&)  self->GetSpace();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSpace'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAligns of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_SetAligns00
static int tolua_PX2_UIText_SetAligns00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
  int aligns = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAligns'", NULL);
#endif
  {
   self->SetAligns(aligns);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAligns'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAligns of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_GetAligns00
static int tolua_PX2_UIText_GetAligns00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIText* self = (const UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAligns'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetAligns();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAligns'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetHAlign of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_GetHAlign00
static int tolua_PX2_UIText_GetHAlign00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIText* self = (const UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetHAlign'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetHAlign();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetHAlign'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetVAlign of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_GetVAlign00
static int tolua_PX2_UIText_GetVAlign00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIText* self = (const UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetVAlign'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetVAlign();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetVAlign'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAutoWarp of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_SetAutoWarp00
static int tolua_PX2_UIText_SetAutoWarp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
  bool warp = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAutoWarp'", NULL);
#endif
  {
   self->SetAutoWarp(warp);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAutoWarp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsAutoWarp of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_IsAutoWarp00
static int tolua_PX2_UIText_IsAutoWarp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIText* self = (const UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsAutoWarp'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsAutoWarp();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsAutoWarp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDoCharTranslate of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_SetDoCharTranslate00
static int tolua_PX2_UIText_SetDoCharTranslate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
  bool doTranslate = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDoCharTranslate'", NULL);
#endif
  {
   self->SetDoCharTranslate(doTranslate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDoCharTranslate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsDoCharTranslate of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_IsDoCharTranslate00
static int tolua_PX2_UIText_IsDoCharTranslate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIText* self = (const UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsDoCharTranslate'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsDoCharTranslate();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsDoCharTranslate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPointAsPunctuation of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_SetPointAsPunctuation00
static int tolua_PX2_UIText_SetPointAsPunctuation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
  bool asPunctuation = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPointAsPunctuation'", NULL);
#endif
  {
   self->SetPointAsPunctuation(asPunctuation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPointAsPunctuation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsPointAsPunctuation of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_IsPointAsPunctuation00
static int tolua_PX2_UIText_IsPointAsPunctuation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIText* self = (const UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsPointAsPunctuation'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsPointAsPunctuation();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsPointAsPunctuation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFontScale of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_SetFontScale00
static int tolua_PX2_UIText_SetFontScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
  float scale = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFontScale'", NULL);
#endif
  {
   self->SetFontScale(scale);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFontScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFontScale of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_GetFontScale00
static int tolua_PX2_UIText_GetFontScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIText* self = (const UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFontScale'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetFontScale();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFontScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetColor of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_SetColor00
static int tolua_PX2_UIText_SetColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
  const Float3* color = ((const Float3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetColor'", NULL);
#endif
  {
   self->SetColor(*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAlpha of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_SetAlpha00
static int tolua_PX2_UIText_SetAlpha00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
  float alpha = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAlpha'", NULL);
#endif
  {
   self->SetAlpha(alpha);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAlpha'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFontWidthHeight of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_SetFontWidthHeight00
static int tolua_PX2_UIText_SetFontWidthHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
  int width = ((int)  tolua_tonumber(tolua_S,2,0));
  int height = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFontWidthHeight'", NULL);
#endif
  {
   self->SetFontWidthHeight(width,height);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFontWidthHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFontWidth of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_SetFontWidth00
static int tolua_PX2_UIText_SetFontWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
  int width = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFontWidth'", NULL);
#endif
  {
   self->SetFontWidth(width);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFontWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFontWidth of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_GetFontWidth00
static int tolua_PX2_UIText_GetFontWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFontWidth'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetFontWidth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFontWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFontHeight of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_SetFontHeight00
static int tolua_PX2_UIText_SetFontHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
  int height = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFontHeight'", NULL);
#endif
  {
   self->SetFontHeight(height);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFontHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFontHeight of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_GetFontHeight00
static int tolua_PX2_UIText_GetFontHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIText* self = (UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFontHeight'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetFontHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFontHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTextWidth of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_GetTextWidth00
static int tolua_PX2_UIText_GetTextWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIText* self = (const UIText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTextWidth'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetTextWidth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTextWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTextWidth of class  UIText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIText_GetTextWidth01
static int tolua_PX2_UIText_GetTextWidth01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIText",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const UIText* self = (const UIText*)  tolua_tousertype(tolua_S,1,0);
  const std::string text = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTextWidth'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetTextWidth(text);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)text);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_UIText_GetTextWidth00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UIInputText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIInputText_new00
static int tolua_PX2_UIInputText_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIInputText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIInputText* tolua_ret = (UIInputText*)  Mtolua_new((UIInputText)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIInputText");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UIInputText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIInputText_new00_local
static int tolua_PX2_UIInputText_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIInputText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIInputText* tolua_ret = (UIInputText*)  Mtolua_new((UIInputText)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIInputText");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIInputText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIInputText_delete00
static int tolua_PX2_UIInputText_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIInputText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIInputText* self = (UIInputText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetRealText of class  UIInputText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIInputText_SetRealText00
static int tolua_PX2_UIInputText_SetRealText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIInputText",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIInputText* self = (UIInputText*)  tolua_tousertype(tolua_S,1,0);
  const std::string realText = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetRealText'", NULL);
#endif
  {
   self->SetRealText(realText);
   tolua_pushcppstring(tolua_S,(const char*)realText);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetRealText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRealText of class  UIInputText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIInputText_GetRealText00
static int tolua_PX2_UIInputText_GetRealText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIInputText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIInputText* self = (const UIInputText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRealText'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetRealText();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRealText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPassword of class  UIInputText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIInputText_SetPassword00
static int tolua_PX2_UIInputText_SetPassword00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIInputText",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIInputText* self = (UIInputText*)  tolua_tousertype(tolua_S,1,0);
  bool isPassword = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPassword'", NULL);
#endif
  {
   self->SetPassword(isPassword);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPassword'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsPassword of class  UIInputText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIInputText_IsPassword00
static int tolua_PX2_UIInputText_IsPassword00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIInputText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIInputText* self = (const UIInputText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsPassword'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsPassword();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsPassword'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFixedWidth of class  UIInputText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIInputText_SetFixedWidth00
static int tolua_PX2_UIInputText_SetFixedWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIInputText",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIInputText* self = (UIInputText*)  tolua_tousertype(tolua_S,1,0);
  float fixedWidth = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFixedWidth'", NULL);
#endif
  {
   self->SetFixedWidth(fixedWidth);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFixedWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFixedWidth of class  UIInputText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIInputText_GetFixedWidth00
static int tolua_PX2_UIInputText_GetFixedWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIInputText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIInputText* self = (const UIInputText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFixedWidth'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetFixedWidth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFixedWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTextWidth of class  UIInputText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIInputText_GetTextWidth00
static int tolua_PX2_UIInputText_GetTextWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIInputText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIInputText* self = (const UIInputText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTextWidth'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetTextWidth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTextWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __IMEDelegate__ of class  UIInputText */
#ifndef TOLUA_DISABLE_tolua_get_UIInputText___IMEDelegate__
static int tolua_get_UIInputText___IMEDelegate__(lua_State* tolua_S)
{
  UIInputText* self = (UIInputText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__IMEDelegate__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<IMEDelegate*>(self), "IMEDelegate");
#else
   tolua_pushusertype(tolua_S,(void*)((IMEDelegate*)self), "IMEDelegate");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UIFText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFText_new00
static int tolua_PX2_UIFText_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIFText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIFText* tolua_ret = (UIFText*)  Mtolua_new((UIFText)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFText");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UIFText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFText_new00_local
static int tolua_PX2_UIFText_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIFText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIFText* tolua_ret = (UIFText*)  Mtolua_new((UIFText)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFText");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIFText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFText_delete00
static int tolua_PX2_UIFText_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIFText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIFText* self = (UIFText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  UIFText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFText_New00
static int tolua_PX2_UIFText_New00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIFText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIFText* tolua_ret = (UIFText*)  UIFText::New();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFText");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'New'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  UIFText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFText_New01
static int tolua_PX2_UIFText_New01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIFText",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   UIFText* tolua_ret = (UIFText*)  UIFText::New(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFText");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_UIFText_New00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetText of class  UIFText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFText_GetText00
static int tolua_PX2_UIFText_GetText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIFText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIFText* self = (UIFText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetText'", NULL);
#endif
  {
   UIText* tolua_ret = (UIText*)  self->GetText();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIText");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UICheckButton */
#ifndef TOLUA_DISABLE_tolua_PX2_UICheckButton_new00
static int tolua_PX2_UICheckButton_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UICheckButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UICheckButton* tolua_ret = (UICheckButton*)  Mtolua_new((UICheckButton)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UICheckButton");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UICheckButton */
#ifndef TOLUA_DISABLE_tolua_PX2_UICheckButton_new00_local
static int tolua_PX2_UICheckButton_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UICheckButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UICheckButton* tolua_ret = (UICheckButton*)  Mtolua_new((UICheckButton)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UICheckButton");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UICheckButton */
#ifndef TOLUA_DISABLE_tolua_PX2_UICheckButton_delete00
static int tolua_PX2_UICheckButton_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICheckButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICheckButton* self = (UICheckButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Check of class  UICheckButton */
#ifndef TOLUA_DISABLE_tolua_PX2_UICheckButton_Check00
static int tolua_PX2_UICheckButton_Check00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICheckButton",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICheckButton* self = (UICheckButton*)  tolua_tousertype(tolua_S,1,0);
  bool check = ((bool)  tolua_toboolean(tolua_S,2,0));
  bool doCall = ((bool)  tolua_toboolean(tolua_S,3,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Check'", NULL);
#endif
  {
   self->Check(check,doCall);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Check'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsCheck of class  UICheckButton */
#ifndef TOLUA_DISABLE_tolua_PX2_UICheckButton_IsCheck00
static int tolua_PX2_UICheckButton_IsCheck00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UICheckButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UICheckButton* self = (const UICheckButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsCheck'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsCheck();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsCheck'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_new00
static int tolua_PX2_UIProgressBar_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIProgressBar* tolua_ret = (UIProgressBar*)  Mtolua_new((UIProgressBar)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIProgressBar");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_new00_local
static int tolua_PX2_UIProgressBar_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIProgressBar* tolua_ret = (UIProgressBar*)  Mtolua_new((UIProgressBar)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIProgressBar");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_delete00
static int tolua_PX2_UIProgressBar_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetBackPicBox of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_SetBackPicBox00
static int tolua_PX2_UIProgressBar_SetBackPicBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"UIFPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
  UIFPicBox* picBox = ((UIFPicBox*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetBackPicBox'", NULL);
#endif
  {
   self->SetBackPicBox(picBox);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetBackPicBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetProgressPicBox of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_SetProgressPicBox00
static int tolua_PX2_UIProgressBar_SetProgressPicBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"UIFPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
  UIFPicBox* picBox = ((UIFPicBox*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetProgressPicBox'", NULL);
#endif
  {
   self->SetProgressPicBox(picBox);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetProgressPicBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetOverPicBox of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_SetOverPicBox00
static int tolua_PX2_UIProgressBar_SetOverPicBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"UIFPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
  UIFPicBox* picBox = ((UIFPicBox*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetOverPicBox'", NULL);
#endif
  {
   self->SetOverPicBox(picBox);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetOverPicBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetBackPicBox of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_GetBackPicBox00
static int tolua_PX2_UIProgressBar_GetBackPicBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetBackPicBox'", NULL);
#endif
  {
   UIFPicBox* tolua_ret = (UIFPicBox*)  self->GetBackPicBox();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFPicBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetBackPicBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProgressPicBox of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_GetProgressPicBox00
static int tolua_PX2_UIProgressBar_GetProgressPicBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProgressPicBox'", NULL);
#endif
  {
   UIFPicBox* tolua_ret = (UIFPicBox*)  self->GetProgressPicBox();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFPicBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProgressPicBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetOverPicBox of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_GetOverPicBox00
static int tolua_PX2_UIProgressBar_GetOverPicBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetOverPicBox'", NULL);
#endif
  {
   UIFPicBox* tolua_ret = (UIFPicBox*)  self->GetOverPicBox();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFPicBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetOverPicBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnPivotChanged of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_OnPivotChanged00
static int tolua_PX2_UIProgressBar_OnPivotChanged00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnPivotChanged'", NULL);
#endif
  {
   self->OnPivotChanged();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnPivotChanged'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnSizeChanged of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_OnSizeChanged00
static int tolua_PX2_UIProgressBar_OnSizeChanged00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnSizeChanged'", NULL);
#endif
  {
   self->OnSizeChanged();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnSizeChanged'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetProgress of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_SetProgress00
static int tolua_PX2_UIProgressBar_SetProgress00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
  float progress = ((float)  tolua_tonumber(tolua_S,2,0));
  bool callLogic = ((bool)  tolua_toboolean(tolua_S,3,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetProgress'", NULL);
#endif
  {
   self->SetProgress(progress,callLogic);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetProgress'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProgress of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_GetProgress00
static int tolua_PX2_UIProgressBar_GetProgress00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIProgressBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIProgressBar* self = (const UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProgress'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetProgress();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProgress'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetProgressAnimInit of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_SetProgressAnimInit00
static int tolua_PX2_UIProgressBar_SetProgressAnimInit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
  float progress = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetProgressAnimInit'", NULL);
#endif
  {
   self->SetProgressAnimInit(progress);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetProgressAnimInit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetProgressAnim of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_SetProgressAnim00
static int tolua_PX2_UIProgressBar_SetProgressAnim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
  float progress = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetProgressAnim'", NULL);
#endif
  {
   self->SetProgressAnim(progress);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetProgressAnim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetProgressAnimSpeed of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_SetProgressAnimSpeed00
static int tolua_PX2_UIProgressBar_SetProgressAnimSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
  float speed = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetProgressAnimSpeed'", NULL);
#endif
  {
   self->SetProgressAnimSpeed(speed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetProgressAnimSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProgressAnimSpeed of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_GetProgressAnimSpeed00
static int tolua_PX2_UIProgressBar_GetProgressAnimSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProgressAnimSpeed'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetProgressAnimSpeed();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProgressAnimSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProgressBarCtrl of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_GetProgressBarCtrl00
static int tolua_PX2_UIProgressBar_GetProgressBarCtrl00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProgressBarCtrl'", NULL);
#endif
  {
   UIProgressBarCtrl* tolua_ret = (UIProgressBarCtrl*)  self->GetProgressBarCtrl();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIProgressBarCtrl");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProgressBarCtrl'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_new00
static int tolua_PX2_UIEditBox_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIEditBox* tolua_ret = (UIEditBox*)  Mtolua_new((UIEditBox)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIEditBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_new00_local
static int tolua_PX2_UIEditBox_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIEditBox* tolua_ret = (UIEditBox*)  Mtolua_new((UIEditBox)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIEditBox");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_delete00
static int tolua_PX2_UIEditBox_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIEditBox* self = (UIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_New00
static int tolua_PX2_UIEditBox_New00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIEditBox* tolua_ret = (UIEditBox*)  UIEditBox::New();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIEditBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'New'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_New01
static int tolua_PX2_UIEditBox_New01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIEditBox",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   UIEditBox* tolua_ret = (UIEditBox*)  UIEditBox::New(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIEditBox");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_UIEditBox_New00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Enable of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_Enable00
static int tolua_PX2_UIEditBox_Enable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIEditBox",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIEditBox* self = (UIEditBox*)  tolua_tousertype(tolua_S,1,0);
  bool enable = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Enable'", NULL);
#endif
  {
   self->Enable(enable);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Enable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPassword of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_SetPassword00
static int tolua_PX2_UIEditBox_SetPassword00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIEditBox",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIEditBox* self = (UIEditBox*)  tolua_tousertype(tolua_S,1,0);
  bool isPassword = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPassword'", NULL);
#endif
  {
   self->SetPassword(isPassword);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPassword'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsPassword of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_IsPassword00
static int tolua_PX2_UIEditBox_IsPassword00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIEditBox* self = (const UIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsPassword'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsPassword();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsPassword'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetBackPicBox of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_GetBackPicBox00
static int tolua_PX2_UIEditBox_GetBackPicBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIEditBox* self = (const UIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetBackPicBox'", NULL);
#endif
  {
   UIFPicBox* tolua_ret = (UIFPicBox*)  self->GetBackPicBox();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFPicBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetBackPicBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetText of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_SetText00
static int tolua_PX2_UIEditBox_SetText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIEditBox",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIEditBox* self = (UIEditBox*)  tolua_tousertype(tolua_S,1,0);
  const std::string text = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetText'", NULL);
#endif
  {
   self->SetText(text);
   tolua_pushcppstring(tolua_S,(const char*)text);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetText of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_GetText00
static int tolua_PX2_UIEditBox_GetText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIEditBox* self = (const UIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetText'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetText();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRealText of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_GetRealText00
static int tolua_PX2_UIEditBox_GetRealText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIEditBox* self = (const UIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRealText'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetRealText();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRealText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetInputText of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_GetInputText00
static int tolua_PX2_UIEditBox_GetInputText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIEditBox* self = (UIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetInputText'", NULL);
#endif
  {
   UIInputText* tolua_ret = (UIInputText*)  self->GetInputText();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIInputText");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetInputText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFixedWidth of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_SetFixedWidth00
static int tolua_PX2_UIEditBox_SetFixedWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIEditBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIEditBox* self = (UIEditBox*)  tolua_tousertype(tolua_S,1,0);
  float fixedWidth = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFixedWidth'", NULL);
#endif
  {
   self->SetFixedWidth(fixedWidth);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFixedWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFixedWidth of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_GetFixedWidth00
static int tolua_PX2_UIEditBox_GetFixedWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIEditBox* self = (const UIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFixedWidth'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetFixedWidth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFixedWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UIRound */
#ifndef TOLUA_DISABLE_tolua_PX2_UIRound_new00
static int tolua_PX2_UIRound_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIRound",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIRound* tolua_ret = (UIRound*)  Mtolua_new((UIRound)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIRound");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UIRound */
#ifndef TOLUA_DISABLE_tolua_PX2_UIRound_new00_local
static int tolua_PX2_UIRound_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIRound",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIRound* tolua_ret = (UIRound*)  Mtolua_new((UIRound)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIRound");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIRound */
#ifndef TOLUA_DISABLE_tolua_PX2_UIRound_delete00
static int tolua_PX2_UIRound_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIRound",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIRound* self = (UIRound*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetBack of class  UIRound */
#ifndef TOLUA_DISABLE_tolua_PX2_UIRound_GetBack00
static int tolua_PX2_UIRound_GetBack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIRound",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIRound* self = (UIRound*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetBack'", NULL);
#endif
  {
   UIFPicBox* tolua_ret = (UIFPicBox*)  self->GetBack();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFPicBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetBack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetButton of class  UIRound */
#ifndef TOLUA_DISABLE_tolua_PX2_UIRound_GetButton00
static int tolua_PX2_UIRound_GetButton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIRound",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIRound* self = (UIRound*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetButton'", NULL);
#endif
  {
   UIButton* tolua_ret = (UIButton*)  self->GetButton();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIButton");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetButton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDragable of class  UIRound */
#ifndef TOLUA_DISABLE_tolua_PX2_UIRound_SetDragable00
static int tolua_PX2_UIRound_SetDragable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIRound",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIRound* self = (UIRound*)  tolua_tousertype(tolua_S,1,0);
  bool dragable = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDragable'", NULL);
#endif
  {
   self->SetDragable(dragable);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDragable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsDragable of class  UIRound */
#ifndef TOLUA_DISABLE_tolua_PX2_UIRound_IsDragable00
static int tolua_PX2_UIRound_IsDragable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIRound",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIRound* self = (const UIRound*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsDragable'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsDragable();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsDragable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDraggingDir of class  UIRound */
#ifndef TOLUA_DISABLE_tolua_PX2_UIRound_GetDraggingDir00
static int tolua_PX2_UIRound_GetDraggingDir00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIRound",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIRound* self = (const UIRound*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDraggingDir'", NULL);
#endif
  {
   const Vector2f& tolua_ret = (const Vector2f&)  self->GetDraggingDir();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Vector2f");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDraggingDir'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDraggingPercent of class  UIRound */
#ifndef TOLUA_DISABLE_tolua_PX2_UIRound_GetDraggingPercent00
static int tolua_PX2_UIRound_GetDraggingPercent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIRound",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIRound* self = (const UIRound*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDraggingPercent'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetDraggingPercent();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDraggingPercent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDraggedDir of class  UIRound */
#ifndef TOLUA_DISABLE_tolua_PX2_UIRound_GetDraggedDir00
static int tolua_PX2_UIRound_GetDraggedDir00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIRound",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIRound* self = (const UIRound*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDraggedDir'", NULL);
#endif
  {
   const Vector2f& tolua_ret = (const Vector2f&)  self->GetDraggedDir();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Vector2f");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDraggedDir'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDraggedPercent of class  UIRound */
#ifndef TOLUA_DISABLE_tolua_PX2_UIRound_GetDraggedPercent00
static int tolua_PX2_UIRound_GetDraggedPercent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIRound",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIRound* self = (const UIRound*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDraggedPercent'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetDraggedPercent();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDraggedPercent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDragingDirSimple of class  UIRound */
#ifndef TOLUA_DISABLE_tolua_PX2_UIRound_GetDragingDirSimple00
static int tolua_PX2_UIRound_GetDragingDirSimple00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIRound",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIRound* self = (const UIRound*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDragingDirSimple'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetDragingDirSimple();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDragingDirSimple'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCurPickWorldPos of class  UIRound */
#ifndef TOLUA_DISABLE_tolua_PX2_UIRound_GetCurPickWorldPos00
static int tolua_PX2_UIRound_GetCurPickWorldPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIRound",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIRound* self = (const UIRound*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCurPickWorldPos'", NULL);
#endif
  {
   const APoint& tolua_ret = (const APoint&)  self->GetCurPickWorldPos();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const APoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCurPickWorldPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UIVlc */
#ifndef TOLUA_DISABLE_tolua_PX2_UIVlc_new00
static int tolua_PX2_UIVlc_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIVlc",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIVlc* tolua_ret = (UIVlc*)  Mtolua_new((UIVlc)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIVlc");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UIVlc */
#ifndef TOLUA_DISABLE_tolua_PX2_UIVlc_new00_local
static int tolua_PX2_UIVlc_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIVlc",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIVlc* tolua_ret = (UIVlc*)  Mtolua_new((UIVlc)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIVlc");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIVlc */
#ifndef TOLUA_DISABLE_tolua_PX2_UIVlc_delete00
static int tolua_PX2_UIVlc_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIVlc",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIVlc* self = (UIVlc*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UIAuiFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIAuiFrame_new00
static int tolua_PX2_UIAuiFrame_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIAuiFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIAuiFrame* tolua_ret = (UIAuiFrame*)  Mtolua_new((UIAuiFrame)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIAuiFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UIAuiFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIAuiFrame_new00_local
static int tolua_PX2_UIAuiFrame_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIAuiFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIAuiFrame* tolua_ret = (UIAuiFrame*)  Mtolua_new((UIAuiFrame)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIAuiFrame");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIAuiFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIAuiFrame_delete00
static int tolua_PX2_UIAuiFrame_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIAuiFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIAuiFrame* self = (UIAuiFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  UIAuiFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIAuiFrame_New00
static int tolua_PX2_UIAuiFrame_New00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIAuiFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIAuiFrame* tolua_ret = (UIAuiFrame*)  UIAuiFrame::New();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIAuiFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'New'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  UIAuiFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIAuiFrame_New01
static int tolua_PX2_UIAuiFrame_New01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIAuiFrame",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   UIAuiFrame* tolua_ret = (UIAuiFrame*)  UIAuiFrame::New(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIAuiFrame");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_UIAuiFrame_New00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSplitterSize of class  UIAuiFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIAuiFrame_SetSplitterSize00
static int tolua_PX2_UIAuiFrame_SetSplitterSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIAuiFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIAuiFrame* self = (UIAuiFrame*)  tolua_tousertype(tolua_S,1,0);
  float size = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSplitterSize'", NULL);
#endif
  {
   self->SetSplitterSize(size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSplitterSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SpLeft of class  UIAuiFrame */
#ifndef TOLUA_DISABLE_tolua_get_UIAuiFrame_SpLeft
static int tolua_get_UIAuiFrame_SpLeft(lua_State* tolua_S)
{
  UIAuiFrame* self = (UIAuiFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpLeft'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->SpLeft,"UISplitterFramePtr");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SpLeft of class  UIAuiFrame */
#ifndef TOLUA_DISABLE_tolua_set_UIAuiFrame_SpLeft
static int tolua_set_UIAuiFrame_SpLeft(lua_State* tolua_S)
{
  UIAuiFrame* self = (UIAuiFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpLeft'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"UISplitterFramePtr",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SpLeft = *((UISplitterFramePtr*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SpRight of class  UIAuiFrame */
#ifndef TOLUA_DISABLE_tolua_get_UIAuiFrame_SpRight
static int tolua_get_UIAuiFrame_SpRight(lua_State* tolua_S)
{
  UIAuiFrame* self = (UIAuiFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpRight'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->SpRight,"UISplitterFramePtr");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SpRight of class  UIAuiFrame */
#ifndef TOLUA_DISABLE_tolua_set_UIAuiFrame_SpRight
static int tolua_set_UIAuiFrame_SpRight(lua_State* tolua_S)
{
  UIAuiFrame* self = (UIAuiFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpRight'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"UISplitterFramePtr",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SpRight = *((UISplitterFramePtr*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SpBottom of class  UIAuiFrame */
#ifndef TOLUA_DISABLE_tolua_get_UIAuiFrame_SpBottom
static int tolua_get_UIAuiFrame_SpBottom(lua_State* tolua_S)
{
  UIAuiFrame* self = (UIAuiFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpBottom'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->SpBottom,"UISplitterFramePtr");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SpBottom of class  UIAuiFrame */
#ifndef TOLUA_DISABLE_tolua_set_UIAuiFrame_SpBottom
static int tolua_set_UIAuiFrame_SpBottom(lua_State* tolua_S)
{
  UIAuiFrame* self = (UIAuiFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpBottom'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"UISplitterFramePtr",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SpBottom = *((UISplitterFramePtr*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SpTop of class  UIAuiFrame */
#ifndef TOLUA_DISABLE_tolua_get_UIAuiFrame_SpTop
static int tolua_get_UIAuiFrame_SpTop(lua_State* tolua_S)
{
  UIAuiFrame* self = (UIAuiFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpTop'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->SpTop,"UISplitterFramePtr");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: SpTop of class  UIAuiFrame */
#ifndef TOLUA_DISABLE_tolua_set_UIAuiFrame_SpTop
static int tolua_set_UIAuiFrame_SpTop(lua_State* tolua_S)
{
  UIAuiFrame* self = (UIAuiFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'SpTop'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"UISplitterFramePtr",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->SpTop = *((UISplitterFramePtr*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AuiBlockDefault of class  UIAuiFrame */
#ifndef TOLUA_DISABLE_tolua_get_UIAuiFrame_AuiBlockDefault
static int tolua_get_UIAuiFrame_AuiBlockDefault(lua_State* tolua_S)
{
  UIAuiFrame* self = (UIAuiFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AuiBlockDefault'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->AuiBlockDefault,"UIAuiBlockFramePtr");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AuiBlockDefault of class  UIAuiFrame */
#ifndef TOLUA_DISABLE_tolua_set_UIAuiFrame_AuiBlockDefault
static int tolua_set_UIAuiFrame_AuiBlockDefault(lua_State* tolua_S)
{
  UIAuiFrame* self = (UIAuiFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AuiBlockDefault'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"UIAuiBlockFramePtr",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AuiBlockDefault = *((UIAuiBlockFramePtr*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UISplitterFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UISplitterFrame_new00
static int tolua_PX2_UISplitterFrame_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UISplitterFrame",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  bool hor = ((bool)  tolua_toboolean(tolua_S,2,true));
  {
   UISplitterFrame* tolua_ret = (UISplitterFrame*)  Mtolua_new((UISplitterFrame)(hor));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UISplitterFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UISplitterFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UISplitterFrame_new00_local
static int tolua_PX2_UISplitterFrame_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UISplitterFrame",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  bool hor = ((bool)  tolua_toboolean(tolua_S,2,true));
  {
   UISplitterFrame* tolua_ret = (UISplitterFrame*)  Mtolua_new((UISplitterFrame)(hor));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UISplitterFrame");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UISplitterFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UISplitterFrame_delete00
static int tolua_PX2_UISplitterFrame_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UISplitterFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UISplitterFrame* self = (UISplitterFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  UISplitterFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UISplitterFrame_New00
static int tolua_PX2_UISplitterFrame_New00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UISplitterFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UISplitterFrame* tolua_ret = (UISplitterFrame*)  UISplitterFrame::New();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UISplitterFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'New'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  UISplitterFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UISplitterFrame_New01
static int tolua_PX2_UISplitterFrame_New01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UISplitterFrame",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   UISplitterFrame* tolua_ret = (UISplitterFrame*)  UISplitterFrame::New(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UISplitterFrame");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_UISplitterFrame_New00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsHor of class  UISplitterFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UISplitterFrame_IsHor00
static int tolua_PX2_UISplitterFrame_IsHor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UISplitterFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UISplitterFrame* self = (const UISplitterFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsHor'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsHor();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsHor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDragType of class  UISplitterFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UISplitterFrame_SetDragType00
static int tolua_PX2_UISplitterFrame_SetDragType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UISplitterFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UISplitterFrame* self = (UISplitterFrame*)  tolua_tousertype(tolua_S,1,0);
  UISplitterFrame::DragType dt = ((UISplitterFrame::DragType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDragType'", NULL);
#endif
  {
   self->SetDragType(dt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDragType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDragType of class  UISplitterFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UISplitterFrame_GetDragType00
static int tolua_PX2_UISplitterFrame_GetDragType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UISplitterFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UISplitterFrame* self = (const UISplitterFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDragType'", NULL);
#endif
  {
   UISplitterFrame::DragType tolua_ret = (UISplitterFrame::DragType)  self->GetDragType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDragType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDragRange of class  UISplitterFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UISplitterFrame_SetDragRange00
static int tolua_PX2_UISplitterFrame_SetDragRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UISplitterFrame",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UISplitterFrame* self = (UISplitterFrame*)  tolua_tousertype(tolua_S,1,0);
  const Float2* range = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDragRange'", NULL);
#endif
  {
   self->SetDragRange(*range);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDragRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDragRange of class  UISplitterFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UISplitterFrame_GetDragRange00
static int tolua_PX2_UISplitterFrame_GetDragRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UISplitterFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UISplitterFrame* self = (const UISplitterFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDragRange'", NULL);
#endif
  {
   const Float2& tolua_ret = (const Float2&)  self->GetDragRange();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDragRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPosType of class  UISplitterFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UISplitterFrame_SetPosType00
static int tolua_PX2_UISplitterFrame_SetPosType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UISplitterFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UISplitterFrame* self = (UISplitterFrame*)  tolua_tousertype(tolua_S,1,0);
  UISplitterFrame::PosType pt = ((UISplitterFrame::PosType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPosType'", NULL);
#endif
  {
   self->SetPosType(pt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPosType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPosType of class  UISplitterFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UISplitterFrame_GetPosType00
static int tolua_PX2_UISplitterFrame_GetPosType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UISplitterFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UISplitterFrame* self = (const UISplitterFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPosType'", NULL);
#endif
  {
   UISplitterFrame::PosType tolua_ret = (UISplitterFrame::PosType)  self->GetPosType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPosType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDragable of class  UISplitterFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UISplitterFrame_SetDragable00
static int tolua_PX2_UISplitterFrame_SetDragable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UISplitterFrame",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UISplitterFrame* self = (UISplitterFrame*)  tolua_tousertype(tolua_S,1,0);
  bool isDragable = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDragable'", NULL);
#endif
  {
   self->SetDragable(isDragable);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDragable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsDragable of class  UISplitterFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UISplitterFrame_IsDragable00
static int tolua_PX2_UISplitterFrame_IsDragable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UISplitterFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UISplitterFrame* self = (const UISplitterFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsDragable'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsDragable();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsDragable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDraging of class  UISplitterFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UISplitterFrame_SetDraging00
static int tolua_PX2_UISplitterFrame_SetDraging00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UISplitterFrame",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UISplitterFrame* self = (UISplitterFrame*)  tolua_tousertype(tolua_S,1,0);
  bool isDraged = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDraging'", NULL);
#endif
  {
   self->SetDraging(isDraged);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDraging'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsDraging of class  UISplitterFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UISplitterFrame_IsDraging00
static int tolua_PX2_UISplitterFrame_IsDraging00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UISplitterFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UISplitterFrame* self = (const UISplitterFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsDraging'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsDraging();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsDraging'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnDraging of class  UISplitterFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UISplitterFrame_OnDraging00
static int tolua_PX2_UISplitterFrame_OnDraging00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UISplitterFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UISplitterFrame* self = (UISplitterFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnDraging'", NULL);
#endif
  {
   self->OnDraging();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnDraging'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UITabFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UITabFrame_new00
static int tolua_PX2_UITabFrame_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UITabFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UITabFrame* tolua_ret = (UITabFrame*)  Mtolua_new((UITabFrame)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UITabFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UITabFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UITabFrame_new00_local
static int tolua_PX2_UITabFrame_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UITabFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UITabFrame* tolua_ret = (UITabFrame*)  Mtolua_new((UITabFrame)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UITabFrame");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UITabFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UITabFrame_delete00
static int tolua_PX2_UITabFrame_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UITabFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UITabFrame* self = (UITabFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  UITabFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UITabFrame_New00
static int tolua_PX2_UITabFrame_New00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UITabFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UITabFrame* tolua_ret = (UITabFrame*)  UITabFrame::New();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UITabFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'New'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  UITabFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UITabFrame_New01
static int tolua_PX2_UITabFrame_New01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UITabFrame",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   UITabFrame* tolua_ret = (UITabFrame*)  UITabFrame::New(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UITabFrame");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_UITabFrame_New00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLayoutPos of class  UITabFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UITabFrame_SetLayoutPos00
static int tolua_PX2_UITabFrame_SetLayoutPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UITabFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UITabFrame* self = (UITabFrame*)  tolua_tousertype(tolua_S,1,0);
  UITabFrame::LayoutPosType posType = ((UITabFrame::LayoutPosType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLayoutPos'", NULL);
#endif
  {
   self->SetLayoutPos(posType);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLayoutPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLayoutPos of class  UITabFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UITabFrame_GetLayoutPos00
static int tolua_PX2_UITabFrame_GetLayoutPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UITabFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UITabFrame* self = (const UITabFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLayoutPos'", NULL);
#endif
  {
   UITabFrame::LayoutPosType tolua_ret = (UITabFrame::LayoutPosType)  self->GetLayoutPos();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLayoutPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTabBarHeight of class  UITabFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UITabFrame_SetTabBarHeight00
static int tolua_PX2_UITabFrame_SetTabBarHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UITabFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UITabFrame* self = (UITabFrame*)  tolua_tousertype(tolua_S,1,0);
  float height = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTabBarHeight'", NULL);
#endif
  {
   self->SetTabBarHeight(height);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTabBarHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTabBarHeight of class  UITabFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UITabFrame_GetTabBarHeight00
static int tolua_PX2_UITabFrame_GetTabBarHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UITabFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UITabFrame* self = (const UITabFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTabBarHeight'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetTabBarHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTabBarHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTabWidth of class  UITabFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UITabFrame_SetTabWidth00
static int tolua_PX2_UITabFrame_SetTabWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UITabFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UITabFrame* self = (UITabFrame*)  tolua_tousertype(tolua_S,1,0);
  float width = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTabWidth'", NULL);
#endif
  {
   self->SetTabWidth(width);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTabWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTabWidth of class  UITabFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UITabFrame_GetTabWidth00
static int tolua_PX2_UITabFrame_GetTabWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UITabFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UITabFrame* self = (const UITabFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTabWidth'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetTabWidth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTabWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTabHeight of class  UITabFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UITabFrame_SetTabHeight00
static int tolua_PX2_UITabFrame_SetTabHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UITabFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UITabFrame* self = (UITabFrame*)  tolua_tousertype(tolua_S,1,0);
  float height = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTabHeight'", NULL);
#endif
  {
   self->SetTabHeight(height);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTabHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTabHeight of class  UITabFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UITabFrame_GetTabHeight00
static int tolua_PX2_UITabFrame_GetTabHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UITabFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UITabFrame* self = (const UITabFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTabHeight'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetTabHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTabHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTabLayoutType of class  UITabFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UITabFrame_SetTabLayoutType00
static int tolua_PX2_UITabFrame_SetTabLayoutType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UITabFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UITabFrame* self = (UITabFrame*)  tolua_tousertype(tolua_S,1,0);
  UITabFrame::TabLayoutType tlt = ((UITabFrame::TabLayoutType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTabLayoutType'", NULL);
#endif
  {
   self->SetTabLayoutType(tlt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTabLayoutType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTabLayoutType of class  UITabFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UITabFrame_GetTabLayoutType00
static int tolua_PX2_UITabFrame_GetTabLayoutType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UITabFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UITabFrame* self = (const UITabFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTabLayoutType'", NULL);
#endif
  {
   UITabFrame::TabLayoutType tolua_ret = (UITabFrame::TabLayoutType)  self->GetTabLayoutType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTabLayoutType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnSizeChanged of class  UITabFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UITabFrame_OnSizeChanged00
static int tolua_PX2_UITabFrame_OnSizeChanged00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UITabFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UITabFrame* self = (UITabFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnSizeChanged'", NULL);
#endif
  {
   self->OnSizeChanged();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnSizeChanged'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddTab of class  UITabFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UITabFrame_AddTab00
static int tolua_PX2_UITabFrame_AddTab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UITabFrame",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"UIFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UITabFrame* self = (UITabFrame*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string title = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
  UIFrame* tabContentFrame = ((UIFrame*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddTab'", NULL);
#endif
  {
   self->AddTab(name,title,tabContentFrame);
   tolua_pushcppstring(tolua_S,(const char*)name);
   tolua_pushcppstring(tolua_S,(const char*)title);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddTab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsHasTab of class  UITabFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UITabFrame_IsHasTab00
static int tolua_PX2_UITabFrame_IsHasTab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UITabFrame",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UITabFrame* self = (UITabFrame*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsHasTab'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsHasTab(name);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsHasTab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTab of class  UITabFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UITabFrame_GetTab00
static int tolua_PX2_UITabFrame_GetTab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UITabFrame",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UITabFrame* self = (UITabFrame*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTab'", NULL);
#endif
  {
   UIFrame* tolua_ret = (UIFrame*)  self->GetTab(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFrame");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveTab of class  UITabFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UITabFrame_RemoveTab00
static int tolua_PX2_UITabFrame_RemoveTab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UITabFrame",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UITabFrame* self = (UITabFrame*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveTab'", NULL);
#endif
  {
   self->RemoveTab(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveTab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveAllTabs of class  UITabFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UITabFrame_RemoveAllTabs00
static int tolua_PX2_UITabFrame_RemoveAllTabs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UITabFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UITabFrame* self = (UITabFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveAllTabs'", NULL);
#endif
  {
   self->RemoveAllTabs();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveAllTabs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumTabs of class  UITabFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UITabFrame_GetNumTabs00
static int tolua_PX2_UITabFrame_GetNumTabs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UITabFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UITabFrame* self = (const UITabFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumTabs'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumTabs();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumTabs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetActiveTab of class  UITabFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UITabFrame_SetActiveTab00
static int tolua_PX2_UITabFrame_SetActiveTab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UITabFrame",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UITabFrame* self = (UITabFrame*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetActiveTab'", NULL);
#endif
  {
   self->SetActiveTab(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetActiveTab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetActiveTab of class  UITabFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UITabFrame_GetActiveTab00
static int tolua_PX2_UITabFrame_GetActiveTab00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UITabFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UITabFrame* self = (const UITabFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetActiveTab'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->GetActiveTab();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetActiveTab'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTabButton of class  UITabFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UITabFrame_GetTabButton00
static int tolua_PX2_UITabFrame_GetTabButton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UITabFrame",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UITabFrame* self = (UITabFrame*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTabButton'", NULL);
#endif
  {
   UIButton* tolua_ret = (UIButton*)  self->GetTabButton(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIButton");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTabButton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTitleBarFrame of class  UITabFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UITabFrame_GetTitleBarFrame00
static int tolua_PX2_UITabFrame_GetTitleBarFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UITabFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UITabFrame* self = (UITabFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTitleBarFrame'", NULL);
#endif
  {
   UIFrame* tolua_ret = (UIFrame*)  self->GetTitleBarFrame();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTitleBarFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UIWebFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIWebFrame_new00
static int tolua_PX2_UIWebFrame_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIWebFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIWebFrame* tolua_ret = (UIWebFrame*)  Mtolua_new((UIWebFrame)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIWebFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UIWebFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIWebFrame_new00_local
static int tolua_PX2_UIWebFrame_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIWebFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIWebFrame* tolua_ret = (UIWebFrame*)  Mtolua_new((UIWebFrame)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIWebFrame");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIWebFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIWebFrame_delete00
static int tolua_PX2_UIWebFrame_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIWebFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIWebFrame* self = (UIWebFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  UIWebFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIWebFrame_New00
static int tolua_PX2_UIWebFrame_New00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIWebFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIWebFrame* tolua_ret = (UIWebFrame*)  UIWebFrame::New();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIWebFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'New'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  UIWebFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIWebFrame_New01
static int tolua_PX2_UIWebFrame_New01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIWebFrame",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   UIWebFrame* tolua_ret = (UIWebFrame*)  UIWebFrame::New(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIWebFrame");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_UIWebFrame_New00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: ShowNativeView of class  UIWebFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIWebFrame_ShowNativeView00
static int tolua_PX2_UIWebFrame_ShowNativeView00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIWebFrame",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIWebFrame* self = (UIWebFrame*)  tolua_tousertype(tolua_S,1,0);
  bool show = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ShowNativeView'", NULL);
#endif
  {
   self->ShowNativeView(show);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ShowNativeView'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsShowNativeView of class  UIWebFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIWebFrame_IsShowNativeView00
static int tolua_PX2_UIWebFrame_IsShowNativeView00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIWebFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIWebFrame* self = (const UIWebFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsShowNativeView'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsShowNativeView();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsShowNativeView'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUpdateToTex of class  UIWebFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIWebFrame_SetUpdateToTex00
static int tolua_PX2_UIWebFrame_SetUpdateToTex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIWebFrame",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIWebFrame* self = (UIWebFrame*)  tolua_tousertype(tolua_S,1,0);
  bool updateToTex = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUpdateToTex'", NULL);
#endif
  {
   self->SetUpdateToTex(updateToTex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUpdateToTex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsUpdateToTex of class  UIWebFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIWebFrame_IsUpdateToTex00
static int tolua_PX2_UIWebFrame_IsUpdateToTex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIWebFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIWebFrame* self = (const UIWebFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsUpdateToTex'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsUpdateToTex();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsUpdateToTex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LoadHTMLString of class  UIWebFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIWebFrame_LoadHTMLString00
static int tolua_PX2_UIWebFrame_LoadHTMLString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIWebFrame",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIWebFrame* self = (UIWebFrame*)  tolua_tousertype(tolua_S,1,0);
  const std::string str = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string baseURL = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LoadHTMLString'", NULL);
#endif
  {
   self->LoadHTMLString(str,baseURL);
   tolua_pushcppstring(tolua_S,(const char*)str);
   tolua_pushcppstring(tolua_S,(const char*)baseURL);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LoadHTMLString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LoadURL of class  UIWebFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIWebFrame_LoadURL00
static int tolua_PX2_UIWebFrame_LoadURL00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIWebFrame",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIWebFrame* self = (UIWebFrame*)  tolua_tousertype(tolua_S,1,0);
  const std::string url = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LoadURL'", NULL);
#endif
  {
   self->LoadURL(url);
   tolua_pushcppstring(tolua_S,(const char*)url);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LoadURL'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LoadFile of class  UIWebFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIWebFrame_LoadFile00
static int tolua_PX2_UIWebFrame_LoadFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIWebFrame",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIWebFrame* self = (UIWebFrame*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LoadFile'", NULL);
#endif
  {
   self->LoadFile(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LoadFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: StopLoading of class  UIWebFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIWebFrame_StopLoading00
static int tolua_PX2_UIWebFrame_StopLoading00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIWebFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIWebFrame* self = (UIWebFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'StopLoading'", NULL);
#endif
  {
   self->StopLoading();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'StopLoading'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Reload of class  UIWebFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIWebFrame_Reload00
static int tolua_PX2_UIWebFrame_Reload00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIWebFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIWebFrame* self = (UIWebFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Reload'", NULL);
#endif
  {
   self->Reload();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Reload'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CanGoBack of class  UIWebFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIWebFrame_CanGoBack00
static int tolua_PX2_UIWebFrame_CanGoBack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIWebFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIWebFrame* self = (UIWebFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CanGoBack'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->CanGoBack();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CanGoBack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CanGoForward of class  UIWebFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIWebFrame_CanGoForward00
static int tolua_PX2_UIWebFrame_CanGoForward00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIWebFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIWebFrame* self = (UIWebFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CanGoForward'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->CanGoForward();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CanGoForward'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GoBack of class  UIWebFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIWebFrame_GoBack00
static int tolua_PX2_UIWebFrame_GoBack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIWebFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIWebFrame* self = (UIWebFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GoBack'", NULL);
#endif
  {
   self->GoBack();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GoBack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GoForward of class  UIWebFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIWebFrame_GoForward00
static int tolua_PX2_UIWebFrame_GoForward00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIWebFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIWebFrame* self = (UIWebFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GoForward'", NULL);
#endif
  {
   self->GoForward();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GoForward'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: EvaluateJS of class  UIWebFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIWebFrame_EvaluateJS00
static int tolua_PX2_UIWebFrame_EvaluateJS00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIWebFrame",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIWebFrame* self = (UIWebFrame*)  tolua_tousertype(tolua_S,1,0);
  const std::string js = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'EvaluateJS'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->EvaluateJS(js);
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)js);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'EvaluateJS'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetScalesPageToFit of class  UIWebFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIWebFrame_SetScalesPageToFit00
static int tolua_PX2_UIWebFrame_SetScalesPageToFit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIWebFrame",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIWebFrame* self = (UIWebFrame*)  tolua_tousertype(tolua_S,1,0);
  const bool scalesPageToFit = ((const bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetScalesPageToFit'", NULL);
#endif
  {
   self->SetScalesPageToFit(scalesPageToFit);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetScalesPageToFit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UIGridFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIGridFrame_new00
static int tolua_PX2_UIGridFrame_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIGridFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIGridFrame* tolua_ret = (UIGridFrame*)  Mtolua_new((UIGridFrame)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIGridFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UIGridFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIGridFrame_new00_local
static int tolua_PX2_UIGridFrame_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIGridFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIGridFrame* tolua_ret = (UIGridFrame*)  Mtolua_new((UIGridFrame)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIGridFrame");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIGridFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIGridFrame_delete00
static int tolua_PX2_UIGridFrame_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIGridFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIGridFrame* self = (UIGridFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  UIGridFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIGridFrame_New00
static int tolua_PX2_UIGridFrame_New00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIGridFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIGridFrame* tolua_ret = (UIGridFrame*)  UIGridFrame::New();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIGridFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'New'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  UIGridFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIGridFrame_New01
static int tolua_PX2_UIGridFrame_New01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIGridFrame",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   UIGridFrame* tolua_ret = (UIGridFrame*)  UIGridFrame::New(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIGridFrame");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_UIGridFrame_New00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddItem of class  UIGridFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIGridFrame_AddItem00
static int tolua_PX2_UIGridFrame_AddItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIGridFrame",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"UIFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIGridFrame* self = (UIGridFrame*)  tolua_tousertype(tolua_S,1,0);
  UIFrame* item = ((UIFrame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddItem'", NULL);
#endif
  {
   self->AddItem(item);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveAllItems of class  UIGridFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIGridFrame_RemoveAllItems00
static int tolua_PX2_UIGridFrame_RemoveAllItems00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIGridFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIGridFrame* self = (UIGridFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveAllItems'", NULL);
#endif
  {
   self->RemoveAllItems();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveAllItems'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSliderPercent of class  UIGridFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIGridFrame_SetSliderPercent00
static int tolua_PX2_UIGridFrame_SetSliderPercent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIGridFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIGridFrame* self = (UIGridFrame*)  tolua_tousertype(tolua_S,1,0);
  float percent = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSliderPercent'", NULL);
#endif
  {
   self->SetSliderPercent(percent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSliderPercent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: BeginAddFunObj of class  LogicManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LogicManager_BeginAddFunObj00
static int tolua_PX2_LogicManager_BeginAddFunObj00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LogicManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LogicManager* self = (LogicManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string funName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'BeginAddFunObj'", NULL);
#endif
  {
   self->BeginAddFunObj(funName);
   tolua_pushcppstring(tolua_S,(const char*)funName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'BeginAddFunObj'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: BeginAddClassFunObj of class  LogicManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LogicManager_BeginAddClassFunObj00
static int tolua_PX2_LogicManager_BeginAddClassFunObj00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LogicManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LogicManager* self = (LogicManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string className = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string funName = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
  bool isStatic = ((bool)  tolua_toboolean(tolua_S,4,false));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'BeginAddClassFunObj'", NULL);
#endif
  {
   self->BeginAddClassFunObj(className,funName,isStatic);
   tolua_pushcppstring(tolua_S,(const char*)className);
   tolua_pushcppstring(tolua_S,(const char*)funName);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'BeginAddClassFunObj'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: BeginAddClassFunObj of class  LogicManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LogicManager_BeginAddClassFunObj01
static int tolua_PX2_LogicManager_BeginAddClassFunObj01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LogicManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  LogicManager* self = (LogicManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string className = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string funName = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
  bool isStatic = ((bool)  tolua_toboolean(tolua_S,4,0));
  const std::string singltonName = ((const std::string)  tolua_tocppstring(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'BeginAddClassFunObj'", NULL);
#endif
  {
   self->BeginAddClassFunObj(className,funName,isStatic,singltonName);
   tolua_pushcppstring(tolua_S,(const char*)className);
   tolua_pushcppstring(tolua_S,(const char*)funName);
   tolua_pushcppstring(tolua_S,(const char*)singltonName);
  }
 }
 return 3;
tolua_lerror:
 return tolua_PX2_LogicManager_BeginAddClassFunObj00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: BeginAddClassFunObj of class  LogicManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LogicManager_BeginAddClassFunObj02
static int tolua_PX2_LogicManager_BeginAddClassFunObj02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LogicManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,5,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  LogicManager* self = (LogicManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string className = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string funName = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
  bool isStatic = ((bool)  tolua_toboolean(tolua_S,4,0));
  const std::string singltonName = ((const std::string)  tolua_tocppstring(tolua_S,5,0));
  const std::string tag = ((const std::string)  tolua_tocppstring(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'BeginAddClassFunObj'", NULL);
#endif
  {
   self->BeginAddClassFunObj(className,funName,isStatic,singltonName,tag);
   tolua_pushcppstring(tolua_S,(const char*)className);
   tolua_pushcppstring(tolua_S,(const char*)funName);
   tolua_pushcppstring(tolua_S,(const char*)singltonName);
   tolua_pushcppstring(tolua_S,(const char*)tag);
  }
 }
 return 4;
tolua_lerror:
 return tolua_PX2_LogicManager_BeginAddClassFunObj01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: BeginAddParam of class  LogicManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LogicManager_BeginAddParam00
static int tolua_PX2_LogicManager_BeginAddParam00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LogicManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LogicManager* self = (LogicManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string paramName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  FunObject::ParamType pt = ((FunObject::ParamType) (int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'BeginAddParam'", NULL);
#endif
  {
   self->BeginAddParam(paramName,pt);
   tolua_pushcppstring(tolua_S,(const char*)paramName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'BeginAddParam'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: BeginAddEvent of class  LogicManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LogicManager_BeginAddEvent00
static int tolua_PX2_LogicManager_BeginAddEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LogicManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LogicManager* self = (LogicManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string className = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string entName = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'BeginAddEvent'", NULL);
#endif
  {
   self->BeginAddEvent(className,entName);
   tolua_pushcppstring(tolua_S,(const char*)className);
   tolua_pushcppstring(tolua_S,(const char*)entName);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'BeginAddEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddInput of class  LogicManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LogicManager_AddInput00
static int tolua_PX2_LogicManager_AddInput00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LogicManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LogicManager* self = (LogicManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  FunParamType funParamType = ((FunParamType) (int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddInput'", NULL);
#endif
  {
   self->AddInput(name,funParamType);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddInput'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddInputChar of class  LogicManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LogicManager_AddInputChar00
static int tolua_PX2_LogicManager_AddInputChar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LogicManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LogicManager* self = (LogicManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  char val = ((char)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddInputChar'", NULL);
#endif
  {
   self->AddInputChar(name,val);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddInputChar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddInputInt of class  LogicManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LogicManager_AddInputInt00
static int tolua_PX2_LogicManager_AddInputInt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LogicManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LogicManager* self = (LogicManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  int val = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddInputInt'", NULL);
#endif
  {
   self->AddInputInt(name,val);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddInputInt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddInputFloat of class  LogicManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LogicManager_AddInputFloat00
static int tolua_PX2_LogicManager_AddInputFloat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LogicManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LogicManager* self = (LogicManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  float val = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddInputFloat'", NULL);
#endif
  {
   self->AddInputFloat(name,val);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddInputFloat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddInputBool of class  LogicManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LogicManager_AddInputBool00
static int tolua_PX2_LogicManager_AddInputBool00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LogicManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LogicManager* self = (LogicManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  bool val = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddInputBool'", NULL);
#endif
  {
   self->AddInputBool(name,val);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddInputBool'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddInputString of class  LogicManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LogicManager_AddInputString00
static int tolua_PX2_LogicManager_AddInputString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LogicManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LogicManager* self = (LogicManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string val = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddInputString'", NULL);
#endif
  {
   self->AddInputString(name,val);
   tolua_pushcppstring(tolua_S,(const char*)name);
   tolua_pushcppstring(tolua_S,(const char*)val);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddInputString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddInputObj of class  LogicManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LogicManager_AddInputObj00
static int tolua_PX2_LogicManager_AddInputObj00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LogicManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LogicManager* self = (LogicManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddInputObj'", NULL);
#endif
  {
   self->AddInputObj(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddInputObj'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddOutput of class  LogicManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LogicManager_AddOutput00
static int tolua_PX2_LogicManager_AddOutput00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LogicManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LogicManager* self = (LogicManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  FunParamType funParamType = ((FunParamType) (int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddOutput'", NULL);
#endif
  {
   self->AddOutput(name,funParamType);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddOutput'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: EndAddFun_Ctrl of class  LogicManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LogicManager_EndAddFun_Ctrl00
static int tolua_PX2_LogicManager_EndAddFun_Ctrl00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LogicManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LogicManager* self = (LogicManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string catalogue = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'EndAddFun_Ctrl'", NULL);
#endif
  {
   self->EndAddFun_Ctrl(catalogue);
   tolua_pushcppstring(tolua_S,(const char*)catalogue);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'EndAddFun_Ctrl'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: EndAddFun_Param of class  LogicManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LogicManager_EndAddFun_Param00
static int tolua_PX2_LogicManager_EndAddFun_Param00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LogicManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LogicManager* self = (LogicManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string catalogue = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'EndAddFun_Param'", NULL);
#endif
  {
   self->EndAddFun_Param(catalogue);
   tolua_pushcppstring(tolua_S,(const char*)catalogue);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'EndAddFun_Param'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: EndAddFun_Operator of class  LogicManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LogicManager_EndAddFun_Operator00
static int tolua_PX2_LogicManager_EndAddFun_Operator00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LogicManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LogicManager* self = (LogicManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string catalogue = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'EndAddFun_Operator'", NULL);
#endif
  {
   self->EndAddFun_Operator(catalogue);
   tolua_pushcppstring(tolua_S,(const char*)catalogue);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'EndAddFun_Operator'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: EndAddFun_General of class  LogicManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LogicManager_EndAddFun_General00
static int tolua_PX2_LogicManager_EndAddFun_General00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LogicManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LogicManager* self = (LogicManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string catalogue = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'EndAddFun_General'", NULL);
#endif
  {
   self->EndAddFun_General(catalogue);
   tolua_pushcppstring(tolua_S,(const char*)catalogue);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'EndAddFun_General'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: EndAddFun_Event of class  LogicManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LogicManager_EndAddFun_Event00
static int tolua_PX2_LogicManager_EndAddFun_Event00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LogicManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LogicManager* self = (LogicManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string catalogue = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'EndAddFun_Event'", NULL);
#endif
  {
   self->EndAddFun_Event(catalogue);
   tolua_pushcppstring(tolua_S,(const char*)catalogue);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'EndAddFun_Event'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetScene of class  Project */
#ifndef TOLUA_DISABLE_tolua_PX2_Project_SetScene00
static int tolua_PX2_Project_SetScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Project",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Scene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Project* self = (Project*)  tolua_tousertype(tolua_S,1,0);
  Scene* scene = ((Scene*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetScene'", NULL);
#endif
  {
   self->SetScene(scene);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetScene of class  Project */
#ifndef TOLUA_DISABLE_tolua_PX2_Project_GetScene00
static int tolua_PX2_Project_GetScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Project",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Project* self = (Project*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetScene'", NULL);
#endif
  {
   Scene* tolua_ret = (Scene*)  self->GetScene();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Scene");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSceneFilename of class  Project */
#ifndef TOLUA_DISABLE_tolua_PX2_Project_GetSceneFilename00
static int tolua_PX2_Project_GetSceneFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Project",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Project* self = (const Project*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSceneFilename'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetSceneFilename();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSceneFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUI of class  Project */
#ifndef TOLUA_DISABLE_tolua_PX2_Project_SetUI00
static int tolua_PX2_Project_SetUI00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Project",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"UI",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Project* self = (Project*)  tolua_tousertype(tolua_S,1,0);
  UI* ui = ((UI*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUI'", NULL);
#endif
  {
   self->SetUI(ui);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUI'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUI of class  Project */
#ifndef TOLUA_DISABLE_tolua_PX2_Project_GetUI00
static int tolua_PX2_Project_GetUI00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Project",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Project* self = (Project*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUI'", NULL);
#endif
  {
   UI* tolua_ret = (UI*)  self->GetUI();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UI");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUI'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUIFilename of class  Project */
#ifndef TOLUA_DISABLE_tolua_PX2_Project_GetUIFilename00
static int tolua_PX2_Project_GetUIFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Project",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Project* self = (const Project*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUIFilename'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetUIFilename();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUIFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Scene */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene_new00
static int tolua_PX2_Scene_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Scene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Scene* tolua_ret = (Scene*)  Mtolua_new((Scene)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Scene");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Scene */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene_new00_local
static int tolua_PX2_Scene_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Scene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Scene* tolua_ret = (Scene*)  Mtolua_new((Scene)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Scene");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Scene */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene_delete00
static int tolua_PX2_Scene_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Scene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Scene* self = (Scene*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  Scene */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene_New00
static int tolua_PX2_Scene_New00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Scene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Scene* tolua_ret = (Scene*)  Scene::New();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Scene");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'New'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  Scene */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene_New01
static int tolua_PX2_Scene_New01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Scene",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   Scene* tolua_ret = (Scene*)  Scene::New(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Scene");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_Scene_New00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAmbientRegionController of class  Scene */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene_GetAmbientRegionController00
static int tolua_PX2_Scene_GetAmbientRegionController00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Scene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Scene* self = (Scene*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAmbientRegionController'", NULL);
#endif
  {
   AmbientRegionController* tolua_ret = (AmbientRegionController*)  self->GetAmbientRegionController();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AmbientRegionController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAmbientRegionController'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPlatformType of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_GetPlatformType00
static int tolua_PX2_Application_GetPlatformType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Application",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Application* self = (const Application*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPlatformType'", NULL);
#endif
  {
   Application::PlatformType tolua_ret = (Application::PlatformType)  self->GetPlatformType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPlatformType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetElapsedTime of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_GetElapsedTime00
static int tolua_PX2_Application_GetElapsedTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Application",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Application* self = (Application*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetElapsedTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetElapsedTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetElapsedTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetScreenSize of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_SetScreenSize00
static int tolua_PX2_Application_SetScreenSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Application",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Sizef",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Application* self = (Application*)  tolua_tousertype(tolua_S,1,0);
  const Sizef* screenSize = ((const Sizef*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetScreenSize'", NULL);
#endif
  {
   self->SetScreenSize(*screenSize);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetScreenSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetScreenSize of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_GetScreenSize00
static int tolua_PX2_Application_GetScreenSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Application",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Application* self = (const Application*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetScreenSize'", NULL);
#endif
  {
   const Sizef& tolua_ret = (const Sizef&)  self->GetScreenSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Sizef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetScreenSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LoadBoost of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_LoadBoost00
static int tolua_PX2_Application_LoadBoost00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Application",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Application* self = (Application*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LoadBoost'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->LoadBoost(filename);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LoadBoost'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetBoostSize of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_GetBoostSize00
static int tolua_PX2_Application_GetBoostSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Application",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Application* self = (const Application*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetBoostSize'", NULL);
#endif
  {
   const Sizef& tolua_ret = (const Sizef&)  self->GetBoostSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Sizef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetBoostSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetBoostProjectName of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_GetBoostProjectName00
static int tolua_PX2_Application_GetBoostProjectName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Application",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Application* self = (const Application*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetBoostProjectName'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetBoostProjectName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetBoostProjectName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPlayLogicMode of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_GetPlayLogicMode00
static int tolua_PX2_Application_GetPlayLogicMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Application",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Application* self = (const Application*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPlayLogicMode'", NULL);
#endif
  {
   Application::PlayLogicMode tolua_ret = (Application::PlayLogicMode)  self->GetPlayLogicMode();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPlayLogicMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPlayLogicModeStr of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_GetPlayLogicModeStr00
static int tolua_PX2_Application_GetPlayLogicModeStr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Application",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Application* self = (const Application*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPlayLogicModeStr'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->GetPlayLogicModeStr();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPlayLogicModeStr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsShowInfo of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_IsShowInfo00
static int tolua_PX2_Application_IsShowInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Application",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Application* self = (const Application*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsShowInfo'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsShowInfo();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsShowInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetBoostProjectName of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_SetBoostProjectName00
static int tolua_PX2_Application_SetBoostProjectName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Application",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Application* self = (Application*)  tolua_tousertype(tolua_S,1,0);
  const std::string boostProjectName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetBoostProjectName'", NULL);
#endif
  {
   self->SetBoostProjectName(boostProjectName);
   tolua_pushcppstring(tolua_S,(const char*)boostProjectName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetBoostProjectName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetBoostSize of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_SetBoostSize00
static int tolua_PX2_Application_SetBoostSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Application",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Sizef",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Application* self = (Application*)  tolua_tousertype(tolua_S,1,0);
  const Sizef* size = ((const Sizef*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetBoostSize'", NULL);
#endif
  {
   self->SetBoostSize(*size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetBoostSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetBoostSize of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_SetBoostSize01
static int tolua_PX2_Application_SetBoostSize01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Application",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Application* self = (Application*)  tolua_tousertype(tolua_S,1,0);
  float width = ((float)  tolua_tonumber(tolua_S,2,0));
  float height = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetBoostSize'", NULL);
#endif
  {
   self->SetBoostSize(width,height);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Application_SetBoostSize00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPlayLogicMode of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_SetPlayLogicMode00
static int tolua_PX2_Application_SetPlayLogicMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Application",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Application* self = (Application*)  tolua_tousertype(tolua_S,1,0);
  Application::PlayLogicMode mode = ((Application::PlayLogicMode) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPlayLogicMode'", NULL);
#endif
  {
   self->SetPlayLogicMode(mode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPlayLogicMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetShowInfo of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_SetShowInfo00
static int tolua_PX2_Application_SetShowInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Application",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Application* self = (Application*)  tolua_tousertype(tolua_S,1,0);
  bool show = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetShowInfo'", NULL);
#endif
  {
   self->SetShowInfo(show);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetShowInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: NewProject of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_NewProject00
static int tolua_PX2_Application_NewProject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Application",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Application* self = (Application*)  tolua_tousertype(tolua_S,1,0);
  const std::string pathname = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string projName = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
  int so = ((int)  tolua_tonumber(tolua_S,4,0));
  int width = ((int)  tolua_tonumber(tolua_S,5,0));
  int height = ((int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'NewProject'", NULL);
#endif
  {
   self->NewProject(pathname,projName,so,width,height);
   tolua_pushcppstring(tolua_S,(const char*)pathname);
   tolua_pushcppstring(tolua_S,(const char*)projName);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'NewProject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LoadProject of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_LoadProject00
static int tolua_PX2_Application_LoadProject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Application",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Application* self = (Application*)  tolua_tousertype(tolua_S,1,0);
  const std::string pathname = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LoadProject'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->LoadProject(pathname);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)pathname);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LoadProject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SaveProject of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_SaveProject00
static int tolua_PX2_Application_SaveProject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Application",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Application* self = (Application*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SaveProject'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->SaveProject();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SaveProject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SaveProjectAs of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_SaveProjectAs00
static int tolua_PX2_Application_SaveProjectAs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Application",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Application* self = (Application*)  tolua_tousertype(tolua_S,1,0);
  const std::string pathname = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SaveProjectAs'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->SaveProjectAs(pathname);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)pathname);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SaveProjectAs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CloseProject of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_CloseProject00
static int tolua_PX2_Application_CloseProject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Application",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Application* self = (Application*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CloseProject'", NULL);
#endif
  {
   self->CloseProject();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CloseProject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProjectFilePath of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_GetProjectFilePath00
static int tolua_PX2_Application_GetProjectFilePath00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Application",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Application* self = (const Application*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProjectFilePath'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetProjectFilePath();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProjectFilePath'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: NewScene of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_NewScene00
static int tolua_PX2_Application_NewScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Application",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Application* self = (Application*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'NewScene'", NULL);
#endif
  {
   self->NewScene();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'NewScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LoadScene of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_LoadScene00
static int tolua_PX2_Application_LoadScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Application",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Application* self = (Application*)  tolua_tousertype(tolua_S,1,0);
  const std::string pathname = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LoadScene'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->LoadScene(pathname);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)pathname);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LoadScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SaveScene of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_SaveScene00
static int tolua_PX2_Application_SaveScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Application",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Application* self = (Application*)  tolua_tousertype(tolua_S,1,0);
  const std::string pathname = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SaveScene'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->SaveScene(pathname);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)pathname);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SaveScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SaveSceneAs of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_SaveSceneAs00
static int tolua_PX2_Application_SaveSceneAs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Application",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Application* self = (Application*)  tolua_tousertype(tolua_S,1,0);
  const std::string pathname = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SaveSceneAs'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->SaveSceneAs(pathname);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)pathname);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SaveSceneAs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CloseScene of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_CloseScene00
static int tolua_PX2_Application_CloseScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Application",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Application* self = (Application*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CloseScene'", NULL);
#endif
  {
   self->CloseScene();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CloseScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LoadUI of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_LoadUI00
static int tolua_PX2_Application_LoadUI00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Application",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Application* self = (Application*)  tolua_tousertype(tolua_S,1,0);
  const std::string pathname = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LoadUI'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->LoadUI(pathname);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)pathname);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LoadUI'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CloseUI of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_CloseUI00
static int tolua_PX2_Application_CloseUI00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Application",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Application* self = (Application*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CloseUI'", NULL);
#endif
  {
   self->CloseUI();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CloseUI'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Play of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_Play00
static int tolua_PX2_Application_Play00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Application",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Application* self = (Application*)  tolua_tousertype(tolua_S,1,0);
  Application::PlayType type = ((Application::PlayType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Play'", NULL);
#endif
  {
   self->Play(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Play'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPlayType of class  Application */
#ifndef TOLUA_DISABLE_tolua_PX2_Application_GetPlayType00
static int tolua_PX2_Application_GetPlayType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Application",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Application* self = (const Application*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPlayType'", NULL);
#endif
  {
   Application::PlayType tolua_ret = (Application::PlayType)  self->GetPlayType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPlayType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateMovable_Box of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateMovable_Box00
static int tolua_PX2_Creater_CreateMovable_Box00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateMovable_Box'", NULL);
#endif
  {
   Movable* tolua_ret = (Movable*)  self->CreateMovable_Box();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Movable");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateMovable_Box'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateMovable_Sphere of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateMovable_Sphere00
static int tolua_PX2_Creater_CreateMovable_Sphere00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateMovable_Sphere'", NULL);
#endif
  {
   Movable* tolua_ret = (Movable*)  self->CreateMovable_Sphere();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Movable");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateMovable_Sphere'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateMovable_Rectangle of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateMovable_Rectangle00
static int tolua_PX2_Creater_CreateMovable_Rectangle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateMovable_Rectangle'", NULL);
#endif
  {
   Movable* tolua_ret = (Movable*)  self->CreateMovable_Rectangle();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Movable");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateMovable_Rectangle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateNode of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateNode00
static int tolua_PX2_Creater_CreateNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateNode'", NULL);
#endif
  {
   Node* tolua_ret = (Node*)  self->CreateNode();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Node");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateNode_Camera of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateNode_Camera00
static int tolua_PX2_Creater_CreateNode_Camera00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
  bool createCamera = ((bool)  tolua_toboolean(tolua_S,2,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateNode_Camera'", NULL);
#endif
  {
   CameraNode* tolua_ret = (CameraNode*)  self->CreateNode_Camera(createCamera);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CameraNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateNode_Camera'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateNode_Model of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateNode_Model00
static int tolua_PX2_Creater_CreateNode_Model00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateNode_Model'", NULL);
#endif
  {
   Node* tolua_ret = (Node*)  self->CreateNode_Model(filename);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Node");
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateNode_Model'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateMovable_FromRes of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateMovable_FromRes00
static int tolua_PX2_Creater_CreateMovable_FromRes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateMovable_FromRes'", NULL);
#endif
  {
   Movable* tolua_ret = (Movable*)  self->CreateMovable_FromRes(filename);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Movable");
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateMovable_FromRes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateScriptController_FromRes of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateScriptController_FromRes00
static int tolua_PX2_Creater_CreateScriptController_FromRes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateScriptController_FromRes'", NULL);
#endif
  {
   ScriptController* tolua_ret = (ScriptController*)  self->CreateScriptController_FromRes(filename);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ScriptController");
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateScriptController_FromRes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateSkyBox of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateSkyBox00
static int tolua_PX2_Creater_CreateSkyBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
  const std::string skyDirPath = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateSkyBox'", NULL);
#endif
  {
   Movable* tolua_ret = (Movable*)  self->CreateSkyBox(skyDirPath);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Movable");
   tolua_pushcppstring(tolua_S,(const char*)skyDirPath);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateSkyBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateTerrain of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateTerrain00
static int tolua_PX2_Creater_CreateTerrain00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateTerrain'", NULL);
#endif
  {
   Movable* tolua_ret = (Movable*)  self->CreateTerrain();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Movable");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateTerrain'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateParticleEmitter of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateParticleEmitter00
static int tolua_PX2_Creater_CreateParticleEmitter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateParticleEmitter'", NULL);
#endif
  {
   ParticleEmitter* tolua_ret = (ParticleEmitter*)  self->CreateParticleEmitter();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ParticleEmitter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateParticleEmitter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateBillboard of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateBillboard00
static int tolua_PX2_Creater_CreateBillboard00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateBillboard'", NULL);
#endif
  {
   Billboard* tolua_ret = (Billboard*)  self->CreateBillboard();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Billboard");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateBillboard'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateBeamEmitter of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateBeamEmitter00
static int tolua_PX2_Creater_CreateBeamEmitter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateBeamEmitter'", NULL);
#endif
  {
   BeamEmitter* tolua_ret = (BeamEmitter*)  self->CreateBeamEmitter();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BeamEmitter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateBeamEmitter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateRibbonEmitter of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateRibbonEmitter00
static int tolua_PX2_Creater_CreateRibbonEmitter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateRibbonEmitter'", NULL);
#endif
  {
   RibbonEmitter* tolua_ret = (RibbonEmitter*)  self->CreateRibbonEmitter();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RibbonEmitter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateRibbonEmitter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateSoundable of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateSoundable00
static int tolua_PX2_Creater_CreateSoundable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateSoundable'", NULL);
#endif
  {
   Soundable* tolua_ret = (Soundable*)  self->CreateSoundable();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Soundable");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateSoundable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateEffectModule of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateEffectModule00
static int tolua_PX2_Creater_CreateEffectModule00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
  const std::string typeName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateEffectModule'", NULL);
#endif
  {
   EffectModule* tolua_ret = (EffectModule*)  self->CreateEffectModule(typeName);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"EffectModule");
   tolua_pushcppstring(tolua_S,(const char*)typeName);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateEffectModule'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateUIFrame of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateUIFrame00
static int tolua_PX2_Creater_CreateUIFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateUIFrame'", NULL);
#endif
  {
   UIFrame* tolua_ret = (UIFrame*)  self->CreateUIFrame();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateUIFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateUIFPicBox of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateUIFPicBox00
static int tolua_PX2_Creater_CreateUIFPicBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateUIFPicBox'", NULL);
#endif
  {
   UIFPicBox* tolua_ret = (UIFPicBox*)  self->CreateUIFPicBox();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFPicBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateUIFPicBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateUIFText of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateUIFText00
static int tolua_PX2_Creater_CreateUIFText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateUIFText'", NULL);
#endif
  {
   UIFText* tolua_ret = (UIFText*)  self->CreateUIFText();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFText");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateUIFText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateUIButton of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateUIButton00
static int tolua_PX2_Creater_CreateUIButton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateUIButton'", NULL);
#endif
  {
   UIButton* tolua_ret = (UIButton*)  self->CreateUIButton();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIButton");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateUIButton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateUICheckButton of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateUICheckButton00
static int tolua_PX2_Creater_CreateUICheckButton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateUICheckButton'", NULL);
#endif
  {
   UICheckButton* tolua_ret = (UICheckButton*)  self->CreateUICheckButton();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UICheckButton");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateUICheckButton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateUIComboBox of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateUIComboBox00
static int tolua_PX2_Creater_CreateUIComboBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateUIComboBox'", NULL);
#endif
  {
   UIComboBox* tolua_ret = (UIComboBox*)  self->CreateUIComboBox();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIComboBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateUIComboBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateUIEditBox of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateUIEditBox00
static int tolua_PX2_Creater_CreateUIEditBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateUIEditBox'", NULL);
#endif
  {
   UIEditBox* tolua_ret = (UIEditBox*)  self->CreateUIEditBox();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIEditBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateUIEditBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateUIProgressBar of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateUIProgressBar00
static int tolua_PX2_Creater_CreateUIProgressBar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateUIProgressBar'", NULL);
#endif
  {
   UIProgressBar* tolua_ret = (UIProgressBar*)  self->CreateUIProgressBar();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIProgressBar");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateUIProgressBar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateUIRound of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateUIRound00
static int tolua_PX2_Creater_CreateUIRound00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateUIRound'", NULL);
#endif
  {
   UIRound* tolua_ret = (UIRound*)  self->CreateUIRound();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIRound");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateUIRound'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateICC_Alpha of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateICC_Alpha00
static int tolua_PX2_Creater_CreateICC_Alpha00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateICC_Alpha'", NULL);
#endif
  {
   InterpCurveAlphaController* tolua_ret = (InterpCurveAlphaController*)  self->CreateICC_Alpha();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveAlphaController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateICC_Alpha'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateICC_Color of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateICC_Color00
static int tolua_PX2_Creater_CreateICC_Color00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateICC_Color'", NULL);
#endif
  {
   InterpCurveColorController* tolua_ret = (InterpCurveColorController*)  self->CreateICC_Color();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveColorController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateICC_Color'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateICC_UniformScale of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateICC_UniformScale00
static int tolua_PX2_Creater_CreateICC_UniformScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateICC_UniformScale'", NULL);
#endif
  {
   InterpCurveUniformScaleController* tolua_ret = (InterpCurveUniformScaleController*)  self->CreateICC_UniformScale();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveUniformScaleController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateICC_UniformScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateICC_Scale of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateICC_Scale00
static int tolua_PX2_Creater_CreateICC_Scale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateICC_Scale'", NULL);
#endif
  {
   InterpCurveScaleController* tolua_ret = (InterpCurveScaleController*)  self->CreateICC_Scale();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveScaleController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateICC_Scale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateICC_Rotate of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateICC_Rotate00
static int tolua_PX2_Creater_CreateICC_Rotate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateICC_Rotate'", NULL);
#endif
  {
   InterpCurveRotateController* tolua_ret = (InterpCurveRotateController*)  self->CreateICC_Rotate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveRotateController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateICC_Rotate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateICC_Translate of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateICC_Translate00
static int tolua_PX2_Creater_CreateICC_Translate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateICC_Translate'", NULL);
#endif
  {
   InterpCurveTranslateController* tolua_ret = (InterpCurveTranslateController*)  self->CreateICC_Translate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InterpCurveTranslateController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateICC_Translate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateTriggerController of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_CreateTriggerController00
static int tolua_PX2_Creater_CreateTriggerController00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateTriggerController'", NULL);
#endif
  {
   TriggerController* tolua_ret = (TriggerController*)  self->CreateTriggerController();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TriggerController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateTriggerController'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddObject of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_AddObject00
static int tolua_PX2_Creater_AddObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Object",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Object",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
  Object* parent = ((Object*)  tolua_tousertype(tolua_S,2,0));
  Object* obj = ((Object*)  tolua_tousertype(tolua_S,3,0));
  bool command = ((bool)  tolua_toboolean(tolua_S,4,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddObject'", NULL);
#endif
  {
   self->AddObject(parent,obj,command);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveObject of class  Creater */
#ifndef TOLUA_DISABLE_tolua_PX2_Creater_RemoveObject00
static int tolua_PX2_Creater_RemoveObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Creater",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Object",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Creater* self = (Creater*)  tolua_tousertype(tolua_S,1,0);
  Object* obj = ((Object*)  tolua_tousertype(tolua_S,2,0));
  bool command = ((bool)  tolua_toboolean(tolua_S,3,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveObject'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->RemoveObject(obj,command);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Clear of class  URDoManager */
#ifndef TOLUA_DISABLE_tolua_PX2_URDoManager_Clear00
static int tolua_PX2_URDoManager_Clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"URDoManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  URDoManager* self = (URDoManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Clear'", NULL);
#endif
  {
   self->Clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsHasUnDo of class  URDoManager */
#ifndef TOLUA_DISABLE_tolua_PX2_URDoManager_IsHasUnDo00
static int tolua_PX2_URDoManager_IsHasUnDo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const URDoManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const URDoManager* self = (const URDoManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsHasUnDo'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsHasUnDo();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsHasUnDo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsHasReDo of class  URDoManager */
#ifndef TOLUA_DISABLE_tolua_PX2_URDoManager_IsHasReDo00
static int tolua_PX2_URDoManager_IsHasReDo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const URDoManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const URDoManager* self = (const URDoManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsHasReDo'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsHasReDo();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsHasReDo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: UnDo of class  URDoManager */
#ifndef TOLUA_DISABLE_tolua_PX2_URDoManager_UnDo00
static int tolua_PX2_URDoManager_UnDo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"URDoManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  URDoManager* self = (URDoManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'UnDo'", NULL);
#endif
  {
   self->UnDo();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'UnDo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ReDo of class  URDoManager */
#ifndef TOLUA_DISABLE_tolua_PX2_URDoManager_ReDo00
static int tolua_PX2_URDoManager_ReDo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"URDoManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  URDoManager* self = (URDoManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ReDo'", NULL);
#endif
  {
   self->ReDo();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ReDo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ToController of class  Cast */
#ifndef TOLUA_DISABLE_tolua_PX2_Cast_ToController00
static int tolua_PX2_Cast_ToController00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Cast",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Object* obj = ((Object*)  tolua_tousertype(tolua_S,2,0));
  {
   Controller* tolua_ret = (Controller*)  Cast::ToController(obj);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Controller");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ToController'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ToControlledable of class  Cast */
#ifndef TOLUA_DISABLE_tolua_PX2_Cast_ToControlledable00
static int tolua_PX2_Cast_ToControlledable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Cast",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Object* obj = ((Object*)  tolua_tousertype(tolua_S,2,0));
  {
   Controlledable* tolua_ret = (Controlledable*)  Cast::ToControlledable(obj);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Controlledable");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ToControlledable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ToMovable of class  Cast */
#ifndef TOLUA_DISABLE_tolua_PX2_Cast_ToMovable00
static int tolua_PX2_Cast_ToMovable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Cast",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Object* obj = ((Object*)  tolua_tousertype(tolua_S,2,0));
  {
   Movable* tolua_ret = (Movable*)  Cast::ToMovable(obj);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Movable");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ToMovable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ToNode of class  Cast */
#ifndef TOLUA_DISABLE_tolua_PX2_Cast_ToNode00
static int tolua_PX2_Cast_ToNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Cast",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Object* obj = ((Object*)  tolua_tousertype(tolua_S,2,0));
  {
   Node* tolua_ret = (Node*)  Cast::ToNode(obj);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Node");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ToNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ToEffectController of class  Cast */
#ifndef TOLUA_DISABLE_tolua_PX2_Cast_ToEffectController00
static int tolua_PX2_Cast_ToEffectController00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Cast",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Object* obj = ((Object*)  tolua_tousertype(tolua_S,2,0));
  {
   EffectableController* tolua_ret = (EffectableController*)  Cast::ToEffectController(obj);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"EffectableController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ToEffectController'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ToO of class  Cast */
#ifndef TOLUA_DISABLE_tolua_PX2_Cast_ToO00
static int tolua_PX2_Cast_ToO00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Cast",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* obj = ((void*)  tolua_touserdata(tolua_S,2,0));
  {
   Object* tolua_ret = (Object*)  Cast::ToO(obj);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Object");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ToO'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ToSC of class  Cast */
#ifndef TOLUA_DISABLE_tolua_PX2_Cast_ToSC00
static int tolua_PX2_Cast_ToSC00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Cast",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* obj = ((void*)  tolua_touserdata(tolua_S,2,0));
  {
   ScriptController* tolua_ret = (ScriptController*)  Cast::ToSC(obj);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ScriptController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ToSC'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UI */
#ifndef TOLUA_DISABLE_tolua_PX2_UI_new00
static int tolua_PX2_UI_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UI",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UI* tolua_ret = (UI*)  Mtolua_new((UI)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UI");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UI */
#ifndef TOLUA_DISABLE_tolua_PX2_UI_new00_local
static int tolua_PX2_UI_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UI",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UI* tolua_ret = (UI*)  Mtolua_new((UI)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UI");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UI */
#ifndef TOLUA_DISABLE_tolua_PX2_UI_delete00
static int tolua_PX2_UI_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UI",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UI* self = (UI*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  UI */
#ifndef TOLUA_DISABLE_tolua_PX2_UI_New00
static int tolua_PX2_UI_New00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UI",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UI* tolua_ret = (UI*)  UI::New();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UI");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'New'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: New of class  UI */
#ifndef TOLUA_DISABLE_tolua_PX2_UI_New01
static int tolua_PX2_UI_New01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UI",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  {
   UI* tolua_ret = (UI*)  UI::New(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UI");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_UI_New00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCameras of class  UI */
#ifndef TOLUA_DISABLE_tolua_PX2_UI_GetCameras00
static int tolua_PX2_UI_GetCameras00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UI",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UI* self = (UI*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCameras'", NULL);
#endif
  {
   std::vector<CameraPtr>& tolua_ret = (std::vector<CameraPtr>&)  self->GetCameras();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"std::vector<CameraPtr>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCameras'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFirstCamera of class  UI */
#ifndef TOLUA_DISABLE_tolua_PX2_UI_GetFirstCamera00
static int tolua_PX2_UI_GetFirstCamera00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UI",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UI* self = (UI*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFirstCamera'", NULL);
#endif
  {
   Camera* tolua_ret = (Camera*)  self->GetFirstCamera();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Camera");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFirstCamera'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddEventCall of class  EngineEventHandler */
#ifndef TOLUA_DISABLE_tolua_PX2_EngineEventHandler_AddEventCall00
static int tolua_PX2_EngineEventHandler_AddEventCall00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EngineEventHandler",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EngineEventHandler* self = (EngineEventHandler*)  tolua_tousertype(tolua_S,1,0);
  const std::string className = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string eventName = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
  const std::string callFun = ((const std::string)  tolua_tocppstring(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddEventCall'", NULL);
#endif
  {
   self->AddEventCall(className,eventName,callFun);
   tolua_pushcppstring(tolua_S,(const char*)className);
   tolua_pushcppstring(tolua_S,(const char*)eventName);
   tolua_pushcppstring(tolua_S,(const char*)callFun);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddEventCall'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  TriggerController */
#ifndef TOLUA_DISABLE_tolua_PX2_TriggerController_new00
static int tolua_PX2_TriggerController_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TriggerController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TriggerController* tolua_ret = (TriggerController*)  Mtolua_new((TriggerController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TriggerController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  TriggerController */
#ifndef TOLUA_DISABLE_tolua_PX2_TriggerController_new00_local
static int tolua_PX2_TriggerController_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TriggerController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TriggerController* tolua_ret = (TriggerController*)  Mtolua_new((TriggerController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TriggerController");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  TriggerController */
#ifndef TOLUA_DISABLE_tolua_PX2_TriggerController_delete00
static int tolua_PX2_TriggerController_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriggerController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriggerController* self = (TriggerController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAreaType of class  TriggerController */
#ifndef TOLUA_DISABLE_tolua_PX2_TriggerController_SetAreaType00
static int tolua_PX2_TriggerController_SetAreaType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriggerController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriggerController* self = (TriggerController*)  tolua_tousertype(tolua_S,1,0);
  TriggerController::AreaType type = ((TriggerController::AreaType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAreaType'", NULL);
#endif
  {
   self->SetAreaType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAreaType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAreaType of class  TriggerController */
#ifndef TOLUA_DISABLE_tolua_PX2_TriggerController_GetAreaType00
static int tolua_PX2_TriggerController_GetAreaType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const TriggerController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const TriggerController* self = (const TriggerController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAreaType'", NULL);
#endif
  {
   TriggerController::AreaType tolua_ret = (TriggerController::AreaType)  self->GetAreaType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAreaType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAreaParam of class  TriggerController */
#ifndef TOLUA_DISABLE_tolua_PX2_TriggerController_SetAreaParam00
static int tolua_PX2_TriggerController_SetAreaParam00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriggerController",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriggerController* self = (TriggerController*)  tolua_tousertype(tolua_S,1,0);
  const AVector* vec = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAreaParam'", NULL);
#endif
  {
   self->SetAreaParam(*vec);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAreaParam'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAreaParam of class  TriggerController */
#ifndef TOLUA_DISABLE_tolua_PX2_TriggerController_GetAreaParam00
static int tolua_PX2_TriggerController_GetAreaParam00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const TriggerController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const TriggerController* self = (const TriggerController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAreaParam'", NULL);
#endif
  {
   const AVector& tolua_ret = (const AVector&)  self->GetAreaParam();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const AVector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAreaParam'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsPointIn of class  TriggerController */
#ifndef TOLUA_DISABLE_tolua_PX2_TriggerController_IsPointIn00
static int tolua_PX2_TriggerController_IsPointIn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const TriggerController",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const PX2::APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const TriggerController* self = (const TriggerController*)  tolua_tousertype(tolua_S,1,0);
  const PX2::APoint* point = ((const PX2::APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsPointIn'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsPointIn(*point);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsPointIn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTrigerType of class  TriggerController */
#ifndef TOLUA_DISABLE_tolua_PX2_TriggerController_SetTrigerType00
static int tolua_PX2_TriggerController_SetTrigerType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriggerController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriggerController* self = (TriggerController*)  tolua_tousertype(tolua_S,1,0);
  TriggerController::TrigerType type = ((TriggerController::TrigerType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTrigerType'", NULL);
#endif
  {
   self->SetTrigerType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTrigerType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTrigerType of class  TriggerController */
#ifndef TOLUA_DISABLE_tolua_PX2_TriggerController_GetTrigerType00
static int tolua_PX2_TriggerController_GetTrigerType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const TriggerController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const TriggerController* self = (const TriggerController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTrigerType'", NULL);
#endif
  {
   TriggerController::TrigerType tolua_ret = (TriggerController::TrigerType)  self->GetTrigerType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTrigerType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Triger of class  TriggerController */
#ifndef TOLUA_DISABLE_tolua_PX2_TriggerController_Triger00
static int tolua_PX2_TriggerController_Triger00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriggerController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriggerController* self = (TriggerController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Triger'", NULL);
#endif
  {
   self->Triger();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Triger'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ResetTriger of class  TriggerController */
#ifndef TOLUA_DISABLE_tolua_PX2_TriggerController_ResetTriger00
static int tolua_PX2_TriggerController_ResetTriger00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriggerController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriggerController* self = (TriggerController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ResetTriger'", NULL);
#endif
  {
   self->ResetTriger();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ResetTriger'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsTrigered of class  TriggerController */
#ifndef TOLUA_DISABLE_tolua_PX2_TriggerController_IsTrigered00
static int tolua_PX2_TriggerController_IsTrigered00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const TriggerController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const TriggerController* self = (const TriggerController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsTrigered'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsTrigered();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsTrigered'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_new00
static int tolua_PX2_AmbientRegionController_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AmbientRegionController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   AmbientRegionController* tolua_ret = (AmbientRegionController*)  Mtolua_new((AmbientRegionController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AmbientRegionController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_new00_local
static int tolua_PX2_AmbientRegionController_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AmbientRegionController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   AmbientRegionController* tolua_ret = (AmbientRegionController*)  Mtolua_new((AmbientRegionController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AmbientRegionController");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_delete00
static int tolua_PX2_AmbientRegionController_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AmbientRegionController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AmbientRegionController* self = (AmbientRegionController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLightCameraLookPostion of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_SetLightCameraLookPostion00
static int tolua_PX2_AmbientRegionController_SetLightCameraLookPostion00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AmbientRegionController",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AmbientRegionController* self = (AmbientRegionController*)  tolua_tousertype(tolua_S,1,0);
  const APoint* pos = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLightCameraLookPostion'", NULL);
#endif
  {
   self->SetLightCameraLookPostion(*pos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLightCameraLookPostion'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLightCameraLookDistance of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_SetLightCameraLookDistance00
static int tolua_PX2_AmbientRegionController_SetLightCameraLookDistance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AmbientRegionController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AmbientRegionController* self = (AmbientRegionController*)  tolua_tousertype(tolua_S,1,0);
  float dist = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLightCameraLookDistance'", NULL);
#endif
  {
   self->SetLightCameraLookDistance(dist);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLightCameraLookDistance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLightCameraExtent of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_SetLightCameraExtent00
static int tolua_PX2_AmbientRegionController_SetLightCameraExtent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AmbientRegionController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AmbientRegionController* self = (AmbientRegionController*)  tolua_tousertype(tolua_S,1,0);
  float extent = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLightCameraExtent'", NULL);
#endif
  {
   self->SetLightCameraExtent(extent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLightCameraExtent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetHorAngle of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_SetHorAngle00
static int tolua_PX2_AmbientRegionController_SetHorAngle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AmbientRegionController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AmbientRegionController* self = (AmbientRegionController*)  tolua_tousertype(tolua_S,1,0);
  float angle = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetHorAngle'", NULL);
#endif
  {
   self->SetHorAngle(angle);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetHorAngle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetHorAngle of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_GetHorAngle00
static int tolua_PX2_AmbientRegionController_GetHorAngle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AmbientRegionController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AmbientRegionController* self = (const AmbientRegionController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetHorAngle'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetHorAngle();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetHorAngle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetVerAngle of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_SetVerAngle00
static int tolua_PX2_AmbientRegionController_SetVerAngle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AmbientRegionController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AmbientRegionController* self = (AmbientRegionController*)  tolua_tousertype(tolua_S,1,0);
  float angle = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetVerAngle'", NULL);
#endif
  {
   self->SetVerAngle(angle);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetVerAngle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetVerAngle of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_GetVerAngle00
static int tolua_PX2_AmbientRegionController_GetVerAngle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AmbientRegionController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AmbientRegionController* self = (const AmbientRegionController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetVerAngle'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetVerAngle();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetVerAngle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAmbientColor of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_SetAmbientColor00
static int tolua_PX2_AmbientRegionController_SetAmbientColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AmbientRegionController",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AmbientRegionController* self = (AmbientRegionController*)  tolua_tousertype(tolua_S,1,0);
  const Float3* color = ((const Float3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAmbientColor'", NULL);
#endif
  {
   self->SetAmbientColor(*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAmbientColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAmbientColor of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_GetAmbientColor00
static int tolua_PX2_AmbientRegionController_GetAmbientColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AmbientRegionController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AmbientRegionController* self = (const AmbientRegionController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAmbientColor'", NULL);
#endif
  {
   const Float3& tolua_ret = (const Float3&)  self->GetAmbientColor();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float3");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAmbientColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDiffuseColor of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_SetDiffuseColor00
static int tolua_PX2_AmbientRegionController_SetDiffuseColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AmbientRegionController",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AmbientRegionController* self = (AmbientRegionController*)  tolua_tousertype(tolua_S,1,0);
  const Float3* color = ((const Float3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDiffuseColor'", NULL);
#endif
  {
   self->SetDiffuseColor(*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDiffuseColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDiffuseColor of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_GetDiffuseColor00
static int tolua_PX2_AmbientRegionController_GetDiffuseColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AmbientRegionController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AmbientRegionController* self = (const AmbientRegionController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDiffuseColor'", NULL);
#endif
  {
   const Float3& tolua_ret = (const Float3&)  self->GetDiffuseColor();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float3");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDiffuseColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSpecularColor of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_SetSpecularColor00
static int tolua_PX2_AmbientRegionController_SetSpecularColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AmbientRegionController",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AmbientRegionController* self = (AmbientRegionController*)  tolua_tousertype(tolua_S,1,0);
  const Float3* color = ((const Float3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSpecularColor'", NULL);
#endif
  {
   self->SetSpecularColor(*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSpecularColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSpecularColor of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_GetSpecularColor00
static int tolua_PX2_AmbientRegionController_GetSpecularColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AmbientRegionController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AmbientRegionController* self = (const AmbientRegionController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSpecularColor'", NULL);
#endif
  {
   const Float3& tolua_ret = (const Float3&)  self->GetSpecularColor();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float3");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSpecularColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSpecularPow of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_SetSpecularPow00
static int tolua_PX2_AmbientRegionController_SetSpecularPow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AmbientRegionController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AmbientRegionController* self = (AmbientRegionController*)  tolua_tousertype(tolua_S,1,0);
  float pow = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSpecularPow'", NULL);
#endif
  {
   self->SetSpecularPow(pow);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSpecularPow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSpecularPow of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_GetSpecularPow00
static int tolua_PX2_AmbientRegionController_GetSpecularPow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AmbientRegionController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AmbientRegionController* self = (const AmbientRegionController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSpecularPow'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetSpecularPow();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSpecularPow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetIntensity of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_SetIntensity00
static int tolua_PX2_AmbientRegionController_SetIntensity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AmbientRegionController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AmbientRegionController* self = (AmbientRegionController*)  tolua_tousertype(tolua_S,1,0);
  float intensity = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetIntensity'", NULL);
#endif
  {
   self->SetIntensity(intensity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetIntensity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetIntensity of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_GetIntensity00
static int tolua_PX2_AmbientRegionController_GetIntensity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AmbientRegionController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AmbientRegionController* self = (const AmbientRegionController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetIntensity'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetIntensity();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetIntensity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFogColorHeight of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_SetFogColorHeight00
static int tolua_PX2_AmbientRegionController_SetFogColorHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AmbientRegionController",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AmbientRegionController* self = (AmbientRegionController*)  tolua_tousertype(tolua_S,1,0);
  const Float3* color = ((const Float3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFogColorHeight'", NULL);
#endif
  {
   self->SetFogColorHeight(*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFogColorHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFogColorHeight of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_GetFogColorHeight00
static int tolua_PX2_AmbientRegionController_GetFogColorHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AmbientRegionController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AmbientRegionController* self = (const AmbientRegionController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFogColorHeight'", NULL);
#endif
  {
   const Float3& tolua_ret = (const Float3&)  self->GetFogColorHeight();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float3");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFogColorHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFogParamHeight of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_SetFogParamHeight00
static int tolua_PX2_AmbientRegionController_SetFogParamHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AmbientRegionController",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AmbientRegionController* self = (AmbientRegionController*)  tolua_tousertype(tolua_S,1,0);
  const Float2* param = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFogParamHeight'", NULL);
#endif
  {
   self->SetFogParamHeight(*param);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFogParamHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFogParamHeight of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_GetFogParamHeight00
static int tolua_PX2_AmbientRegionController_GetFogParamHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AmbientRegionController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AmbientRegionController* self = (const AmbientRegionController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFogParamHeight'", NULL);
#endif
  {
   const Float2& tolua_ret = (const Float2&)  self->GetFogParamHeight();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFogParamHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFogColorDistance of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_SetFogColorDistance00
static int tolua_PX2_AmbientRegionController_SetFogColorDistance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AmbientRegionController",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AmbientRegionController* self = (AmbientRegionController*)  tolua_tousertype(tolua_S,1,0);
  const Float3* dist = ((const Float3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFogColorDistance'", NULL);
#endif
  {
   self->SetFogColorDistance(*dist);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFogColorDistance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFogColorDistance of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_GetFogColorDistance00
static int tolua_PX2_AmbientRegionController_GetFogColorDistance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AmbientRegionController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AmbientRegionController* self = (const AmbientRegionController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFogColorDistance'", NULL);
#endif
  {
   const Float3& tolua_ret = (const Float3&)  self->GetFogColorDistance();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float3");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFogColorDistance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFogParamDistance of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_SetFogParamDistance00
static int tolua_PX2_AmbientRegionController_SetFogParamDistance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AmbientRegionController",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AmbientRegionController* self = (AmbientRegionController*)  tolua_tousertype(tolua_S,1,0);
  const Float2* param = ((const Float2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFogParamDistance'", NULL);
#endif
  {
   self->SetFogParamDistance(*param);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFogParamDistance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFogParamDistance of class  AmbientRegionController */
#ifndef TOLUA_DISABLE_tolua_PX2_AmbientRegionController_GetFogParamDistance00
static int tolua_PX2_AmbientRegionController_GetFogParamDistance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AmbientRegionController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AmbientRegionController* self = (const AmbientRegionController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFogParamDistance'", NULL);
#endif
  {
   const Float2& tolua_ret = (const Float2&)  self->GetFogParamDistance();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFogParamDistance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SendString of class  GeneralServer */
#ifndef TOLUA_DISABLE_tolua_PX2_GeneralServer_SendString00
static int tolua_PX2_GeneralServer_SendString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GeneralServer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GeneralServer* self = (GeneralServer*)  tolua_tousertype(tolua_S,1,0);
  int clientid = ((int)  tolua_tonumber(tolua_S,2,0));
  const std::string str = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SendString'", NULL);
#endif
  {
   self->SendString(clientid,str);
   tolua_pushcppstring(tolua_S,(const char*)str);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SendString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* Open function */
TOLUA_API int tolua_PX2_open (lua_State* tolua_S)
{
 tolua_open(tolua_S);
 tolua_reg_types(tolua_S);
 tolua_module(tolua_S,NULL,0);
 tolua_beginmodule(tolua_S,NULL);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Rtti","Rtti","",tolua_collect_Rtti);
  #else
  tolua_cclass(tolua_S,"Rtti","Rtti","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Rtti");
   tolua_function(tolua_S,"delete",tolua_PX2_Rtti_delete00);
   tolua_function(tolua_S,"GetName",tolua_PX2_Rtti_GetName00);
   tolua_function(tolua_S,"GetVersion",tolua_PX2_Rtti_GetVersion00);
   tolua_function(tolua_S,"IsExactly",tolua_PX2_Rtti_IsExactly00);
   tolua_function(tolua_S,"IsDerived",tolua_PX2_Rtti_IsDerived00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Object","Object","",tolua_collect_Object);
  #else
  tolua_cclass(tolua_S,"Object","Object","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Object");
   tolua_function(tolua_S,"delete",tolua_PX2_Object_delete00);
   tolua_function(tolua_S,"Enable",tolua_PX2_Object_Enable00);
   tolua_function(tolua_S,"IsEnable",tolua_PX2_Object_IsEnable00);
   tolua_function(tolua_S,"SetActivate",tolua_PX2_Object_SetActivate00);
   tolua_function(tolua_S,"IsActivated",tolua_PX2_Object_IsActivated00);
   tolua_function(tolua_S,"GetRttiType",tolua_PX2_Object_GetRttiType00);
   tolua_function(tolua_S,"GetRttiVersion",tolua_PX2_Object_GetRttiVersion00);
   tolua_function(tolua_S,"IsExactly",tolua_PX2_Object_IsExactly00);
   tolua_function(tolua_S,"IsDerived",tolua_PX2_Object_IsDerived00);
   tolua_function(tolua_S,"IsExactlyTypeOf",tolua_PX2_Object_IsExactlyTypeOf00);
   tolua_function(tolua_S,"IsDerivedTypeOf",tolua_PX2_Object_IsDerivedTypeOf00);
   tolua_variable(tolua_S,"TYPE",tolua_get_Object_TYPE,NULL);
   tolua_function(tolua_S,"SetUserDataFloat",tolua_PX2_Object_SetUserDataFloat00);
   tolua_function(tolua_S,"GetUserDataFloat",tolua_PX2_Object_GetUserDataFloat00);
   tolua_function(tolua_S,"SetUserDataPointer",tolua_PX2_Object_SetUserDataPointer00);
   tolua_function(tolua_S,"GetUserDataPointer",tolua_PX2_Object_GetUserDataPointer00);
   tolua_function(tolua_S,"GetResourcePath",tolua_PX2_Object_GetResourcePath00);
   tolua_function(tolua_S,"SetName",tolua_PX2_Object_SetName00);
   tolua_function(tolua_S,"GetName",tolua_PX2_Object_GetName00);
   tolua_function(tolua_S,"GetObjectByName",tolua_PX2_Object_GetObjectByName00);
   tolua_function(tolua_S,"SetID",tolua_PX2_Object_SetID00);
   tolua_function(tolua_S,"GetID",tolua_PX2_Object_GetID00);
   tolua_function(tolua_S,"GetObjectByID",tolua_PX2_Object_GetObjectByID00);
   tolua_function(tolua_S,"ComeInEventWorld",tolua_PX2_Object_ComeInEventWorld00);
   tolua_function(tolua_S,"GoOutEventWorld",tolua_PX2_Object_GoOutEventWorld00);
   tolua_function(tolua_S,"IsInEventWorld",tolua_PX2_Object_IsInEventWorld00);
   tolua_function(tolua_S,"SetUserScriptName",tolua_PX2_Object_SetUserScriptName00);
   tolua_function(tolua_S,"GetUserScriptName",tolua_PX2_Object_GetUserScriptName00);
   tolua_function(tolua_S,"GetScriptName",tolua_PX2_Object_GetScriptName00);
   tolua_function(tolua_S,"RegistToScriptSystem",tolua_PX2_Object_RegistToScriptSystem00);
   tolua_function(tolua_S,"UnRegistToScriptSystem",tolua_PX2_Object_UnRegistToScriptSystem00);
   tolua_function(tolua_S,"IsRegistedToScriptSystem",tolua_PX2_Object_IsRegistedToScriptSystem00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Time","Time","",NULL);
  tolua_beginmodule(tolua_S,"Time");
   tolua_function(tolua_S,"GetTimeInMicroseconds",tolua_PX2_Time_GetTimeInMicroseconds00);
   tolua_function(tolua_S,"GetTimeInSeconds",tolua_PX2_Time_GetTimeInSeconds00);
   tolua_function(tolua_S,"ResetTime",tolua_PX2_Time_ResetTime00);
   tolua_variable(tolua_S,"FrameElapsedSeconds",tolua_get_Time_FrameElapsedSeconds,tolua_set_Time_FrameElapsedSeconds);
   tolua_variable(tolua_S,"FrameRunnedSeconds",tolua_get_Time_FrameRunnedSeconds,tolua_set_Time_FrameRunnedSeconds);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Logger","Logger","",NULL);
  tolua_beginmodule(tolua_S,"Logger");
   tolua_function(tolua_S,"SetBlock",tolua_PX2_Logger_SetBlock00);
   tolua_function(tolua_S,"IsBlock",tolua_PX2_Logger_IsBlock00);
   tolua_function(tolua_S,"SetLogFileInfo",tolua_PX2_Logger_SetLogFileInfo00);
   tolua_function(tolua_S,"IsLogFileInfo",tolua_PX2_Logger_IsLogFileInfo00);
   tolua_function(tolua_S,"LogInfo",tolua_PX2_Logger_LogInfo00);
   tolua_function(tolua_S,"LogError",tolua_PX2_Logger_LogError00);
   tolua_function(tolua_S,"LogUser",tolua_PX2_Logger_LogUser00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"XMLData","XMLData","RefObject",tolua_collect_XMLData);
  #else
  tolua_cclass(tolua_S,"XMLData","XMLData","RefObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"XMLData");
   tolua_function(tolua_S,"new",tolua_PX2_XMLData_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_XMLData_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_XMLData_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_XMLData_delete00);
   tolua_function(tolua_S,"LoadFile",tolua_PX2_XMLData_LoadFile00);
   tolua_function(tolua_S,"LoadBuffer",tolua_PX2_XMLData_LoadBuffer00);
   tolua_function(tolua_S,"SaveFile",tolua_PX2_XMLData_SaveFile00);
   tolua_function(tolua_S,"Create",tolua_PX2_XMLData_Create00);
   tolua_function(tolua_S,"GetRootNode",tolua_PX2_XMLData_GetRootNode00);
   tolua_function(tolua_S,"NewChild",tolua_PX2_XMLData_NewChild00);
   tolua_function(tolua_S,"GetNodeByPath",tolua_PX2_XMLData_GetNodeByPath00);
   tolua_function(tolua_S,"LinkEndChild",tolua_PX2_XMLData_LinkEndChild00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"XMLNode","XMLNode","",tolua_collect_XMLNode);
  #else
  tolua_cclass(tolua_S,"XMLNode","XMLNode","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"XMLNode");
   tolua_function(tolua_S,"new",tolua_PX2_XMLNode_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_XMLNode_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_XMLNode_new00_local);
   tolua_function(tolua_S,"new",tolua_PX2_XMLNode_new01);
   tolua_function(tolua_S,"new_local",tolua_PX2_XMLNode_new01_local);
   tolua_function(tolua_S,".call",tolua_PX2_XMLNode_new01_local);
   tolua_function(tolua_S,"delete",tolua_PX2_XMLNode_delete00);
   tolua_function(tolua_S,"IsNull",tolua_PX2_XMLNode_IsNull00);
   tolua_function(tolua_S,"NewChild",tolua_PX2_XMLNode_NewChild00);
   tolua_function(tolua_S,"GetName",tolua_PX2_XMLNode_GetName00);
   tolua_function(tolua_S,"GetText",tolua_PX2_XMLNode_GetText00);
   tolua_function(tolua_S,"HasChild",tolua_PX2_XMLNode_HasChild00);
   tolua_function(tolua_S,"GetChild",tolua_PX2_XMLNode_GetChild00);
   tolua_function(tolua_S,"IterateChild",tolua_PX2_XMLNode_IterateChild00);
   tolua_function(tolua_S,"IterateChild",tolua_PX2_XMLNode_IterateChild01);
   tolua_function(tolua_S,"HasAttribute",tolua_PX2_XMLNode_HasAttribute00);
   tolua_function(tolua_S,"AttributeToInt",tolua_PX2_XMLNode_AttributeToInt00);
   tolua_function(tolua_S,"AttributeToFloat",tolua_PX2_XMLNode_AttributeToFloat00);
   tolua_function(tolua_S,"AttributeToBool",tolua_PX2_XMLNode_AttributeToBool00);
   tolua_function(tolua_S,"AttributeToString",tolua_PX2_XMLNode_AttributeToString00);
   tolua_function(tolua_S,"AttribToInt",tolua_PX2_XMLNode_AttribToInt00);
   tolua_function(tolua_S,"AttribToFloat",tolua_PX2_XMLNode_AttribToFloat00);
   tolua_function(tolua_S,"AttribToBool",tolua_PX2_XMLNode_AttribToBool00);
   tolua_function(tolua_S,"AttribToString",tolua_PX2_XMLNode_AttribToString00);
   tolua_function(tolua_S,"SetAttributeInt",tolua_PX2_XMLNode_SetAttributeInt00);
   tolua_function(tolua_S,"SetAttributeFloat",tolua_PX2_XMLNode_SetAttributeFloat00);
   tolua_function(tolua_S,"SetAttributeBool",tolua_PX2_XMLNode_SetAttributeBool00);
   tolua_function(tolua_S,"SetAttributeString",tolua_PX2_XMLNode_SetAttributeString00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"JSONData","JSONData","RefObject",tolua_collect_JSONData);
  #else
  tolua_cclass(tolua_S,"JSONData","JSONData","RefObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"JSONData");
   tolua_function(tolua_S,"new",tolua_PX2_JSONData_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_JSONData_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_JSONData_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_JSONData_delete00);
   tolua_function(tolua_S,"LoadBuffer",tolua_PX2_JSONData_LoadBuffer00);
   tolua_function(tolua_S,"LoadBuffer",tolua_PX2_JSONData_LoadBuffer01);
   tolua_function(tolua_S,"IsNull",tolua_PX2_JSONData_IsNull00);
   tolua_function(tolua_S,"ToInt",tolua_PX2_JSONData_ToInt00);
   tolua_function(tolua_S,"ToFloat",tolua_PX2_JSONData_ToFloat00);
   tolua_function(tolua_S,"ToBool",tolua_PX2_JSONData_ToBool00);
   tolua_function(tolua_S,"ToString",tolua_PX2_JSONData_ToString00);
   tolua_function(tolua_S,"ToIntVal",tolua_PX2_JSONData_ToIntVal00);
   tolua_function(tolua_S,"ToFloatVal",tolua_PX2_JSONData_ToFloatVal00);
   tolua_function(tolua_S,"ToBoolVal",tolua_PX2_JSONData_ToBoolVal00);
   tolua_function(tolua_S,"ToStringVal",tolua_PX2_JSONData_ToStringVal00);
   tolua_function(tolua_S,"IsArray",tolua_PX2_JSONData_IsArray00);
   tolua_function(tolua_S,"GetArraySize",tolua_PX2_JSONData_GetArraySize00);
   tolua_function(tolua_S,"GetArrayElement",tolua_PX2_JSONData_GetArrayElement00);
   tolua_function(tolua_S,"IsHasMember",tolua_PX2_JSONData_IsHasMember00);
   tolua_function(tolua_S,"GetMember",tolua_PX2_JSONData_GetMember00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"JSONValue","JSONValue","",tolua_collect_JSONValue);
  #else
  tolua_cclass(tolua_S,"JSONValue","JSONValue","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"JSONValue");
   tolua_function(tolua_S,"new",tolua_PX2_JSONValue_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_JSONValue_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_JSONValue_new00_local);
   tolua_function(tolua_S,"new",tolua_PX2_JSONValue_new01);
   tolua_function(tolua_S,"new_local",tolua_PX2_JSONValue_new01_local);
   tolua_function(tolua_S,".call",tolua_PX2_JSONValue_new01_local);
   tolua_function(tolua_S,"delete",tolua_PX2_JSONValue_delete00);
   tolua_function(tolua_S,"IsNull",tolua_PX2_JSONValue_IsNull00);
   tolua_function(tolua_S,"ToInt",tolua_PX2_JSONValue_ToInt00);
   tolua_function(tolua_S,"ToFloat",tolua_PX2_JSONValue_ToFloat00);
   tolua_function(tolua_S,"ToBool",tolua_PX2_JSONValue_ToBool00);
   tolua_function(tolua_S,"ToString",tolua_PX2_JSONValue_ToString00);
   tolua_function(tolua_S,"ToIntVal",tolua_PX2_JSONValue_ToIntVal00);
   tolua_function(tolua_S,"ToFloatVal",tolua_PX2_JSONValue_ToFloatVal00);
   tolua_function(tolua_S,"ToBoolVal",tolua_PX2_JSONValue_ToBoolVal00);
   tolua_function(tolua_S,"ToStringVal",tolua_PX2_JSONValue_ToStringVal00);
   tolua_function(tolua_S,"IsArray",tolua_PX2_JSONValue_IsArray00);
   tolua_function(tolua_S,"GetArraySize",tolua_PX2_JSONValue_GetArraySize00);
   tolua_function(tolua_S,"GetArrayElement",tolua_PX2_JSONValue_GetArrayElement00);
   tolua_function(tolua_S,"IsHasMember",tolua_PX2_JSONValue_IsHasMember00);
   tolua_function(tolua_S,"GetMember",tolua_PX2_JSONValue_GetMember00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"StringHelp","StringHelp","",tolua_collect_StringHelp);
  #else
  tolua_cclass(tolua_S,"StringHelp","StringHelp","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"StringHelp");
   tolua_function(tolua_S,"new",tolua_PX2_StringHelp_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_StringHelp_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_StringHelp_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_StringHelp_delete00);
   tolua_function(tolua_S,"StandardiseFilename",tolua_PX2_StringHelp_StandardiseFilename00);
   tolua_function(tolua_S,"StandardisePath",tolua_PX2_StringHelp_StandardisePath00);
   tolua_function(tolua_S,"SplitFilename",tolua_PX2_StringHelp_SplitFilename00);
   tolua_function(tolua_S,"SplitBaseFilename",tolua_PX2_StringHelp_SplitBaseFilename00);
   tolua_function(tolua_S,"SplitFullFilename",tolua_PX2_StringHelp_SplitFullFilename00);
   tolua_function(tolua_S,"PathToWindowStyle",tolua_PX2_StringHelp_PathToWindowStyle00);
   tolua_function(tolua_S,"IntToString",tolua_PX2_StringHelp_IntToString00);
   tolua_function(tolua_S,"StringToInt",tolua_PX2_StringHelp_StringToInt00);
   tolua_function(tolua_S,"FloatToString",tolua_PX2_StringHelp_FloatToString00);
   tolua_function(tolua_S,"StringToFloat",tolua_PX2_StringHelp_StringToFloat00);
   tolua_function(tolua_S,"StringToXYZ",tolua_PX2_StringHelp_StringToXYZ00);
   tolua_function(tolua_S,"FormatColor",tolua_PX2_StringHelp_FormatColor00);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"FPT_NONE",FPT_NONE);
  tolua_constant(tolua_S,"FPT_CHAR",FPT_CHAR);
  tolua_constant(tolua_S,"FPT_INT",FPT_INT);
  tolua_constant(tolua_S,"FPT_FLOAT",FPT_FLOAT);
  tolua_constant(tolua_S,"FPT_FLOAT3",FPT_FLOAT3);
  tolua_constant(tolua_S,"FPT_APOINT",FPT_APOINT);
  tolua_constant(tolua_S,"FPT_AVECTOR",FPT_AVECTOR);
  tolua_constant(tolua_S,"FPT_BOOL",FPT_BOOL);
  tolua_constant(tolua_S,"FPT_STRING",FPT_STRING);
  tolua_constant(tolua_S,"FPT_POINTER",FPT_POINTER);
  tolua_constant(tolua_S,"FPT_POINTER_THIS",FPT_POINTER_THIS);
  tolua_constant(tolua_S,"FPT_POINTER_THIS_STATIC",FPT_POINTER_THIS_STATIC);
  tolua_constant(tolua_S,"FPT_LINK",FPT_LINK);
  tolua_constant(tolua_S,"FPT_MAX_TYPE",FPT_MAX_TYPE);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"FunParam","FunParam","",tolua_collect_FunParam);
  #else
  tolua_cclass(tolua_S,"FunParam","FunParam","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"FunParam");
   tolua_function(tolua_S,"new",tolua_PX2_FunParam_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_FunParam_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_FunParam_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_FunParam_delete00);
   tolua_variable(tolua_S,"Name",tolua_get_FunParam_Name,tolua_set_FunParam_Name);
   tolua_variable(tolua_S,"Type",tolua_get_FunParam_Type,tolua_set_FunParam_Type);
   tolua_variable(tolua_S,"Value",tolua_get_FunParam_Value,tolua_set_FunParam_Value);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"FunObject","FunObject","",tolua_collect_FunObject);
  #else
  tolua_cclass(tolua_S,"FunObject","FunObject","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"FunObject");
   tolua_function(tolua_S,"new",tolua_PX2_FunObject_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_FunObject_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_FunObject_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_FunObject_delete00);
   tolua_variable(tolua_S,"IsClassCatalogue",tolua_get_FunObject_IsClassCatalogue,tolua_set_FunObject_IsClassCatalogue);
   tolua_variable(tolua_S,"ParentClassName",tolua_get_FunObject_ParentClassName,tolua_set_FunObject_ParentClassName);
   tolua_variable(tolua_S,"ClassName",tolua_get_FunObject_ClassName,tolua_set_FunObject_ClassName);
   tolua_variable(tolua_S,"Name",tolua_get_FunObject_Name,tolua_set_FunObject_Name);
   tolua_function(tolua_S,"AddInput",tolua_PX2_FunObject_AddInput00);
   tolua_function(tolua_S,"AddOutput",tolua_PX2_FunObject_AddOutput00);
   tolua_function(tolua_S,"GetInParams",tolua_PX2_FunObject_GetInParams00);
   tolua_function(tolua_S,"GetNumInParams",tolua_PX2_FunObject_GetNumInParams00);
   tolua_function(tolua_S,"GetInParam",tolua_PX2_FunObject_GetInParam00);
   tolua_function(tolua_S,"ClearInParams",tolua_PX2_FunObject_ClearInParams00);
   tolua_function(tolua_S,"GetOutParams",tolua_PX2_FunObject_GetOutParams00);
   tolua_function(tolua_S,"GetNumOutParams",tolua_PX2_FunObject_GetNumOutParams00);
   tolua_function(tolua_S,"GetOutParam",tolua_PX2_FunObject_GetOutParam00);
   tolua_function(tolua_S,"ClearOutParams",tolua_PX2_FunObject_ClearOutParams00);
   tolua_constant(tolua_S,"PT_NONE",FunObject::PT_NONE);
   tolua_constant(tolua_S,"PT_CONST",FunObject::PT_CONST);
   tolua_constant(tolua_S,"PT_VARIABLE",FunObject::PT_VARIABLE);
   tolua_constant(tolua_S,"PT_VALUE",FunObject::PT_VALUE);
   tolua_constant(tolua_S,"PT_ENUMSTRING",FunObject::PT_ENUMSTRING);
   tolua_constant(tolua_S,"PT_VALUESELECT",FunObject::PT_VALUESELECT);
   tolua_constant(tolua_S,"PT_VARIABLESELECT",FunObject::PT_VARIABLESELECT);
   tolua_constant(tolua_S,"PT_MAXTYPE",FunObject::PT_MAXTYPE);
   tolua_function(tolua_S,"SetParamType",tolua_PX2_FunObject_SetParamType00);
   tolua_function(tolua_S,"GetParamType",tolua_PX2_FunObject_GetParamType00);
   tolua_function(tolua_S,"GetAddClass",tolua_PX2_FunObject_GetAddClass00);
   tolua_function(tolua_S,"GetFunObject",tolua_PX2_FunObject_GetFunObject00);
   tolua_function(tolua_S,"AddFunObject",tolua_PX2_FunObject_AddFunObject00);
   tolua_function(tolua_S,"IsHasFunObject",tolua_PX2_FunObject_IsHasFunObject00);
   tolua_variable(tolua_S,"mChildFunObjectVec_Class",tolua_get_FunObject_mChildFunObjectVec_Class,tolua_set_FunObject_mChildFunObjectVec_Class);
   tolua_variable(tolua_S,"mChildFunObjectVec",tolua_get_FunObject_mChildFunObjectVec,tolua_set_FunObject_mChildFunObjectVec);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"FunObjectManager","FunObjectManager","",tolua_collect_FunObjectManager);
  #else
  tolua_cclass(tolua_S,"FunObjectManager","FunObjectManager","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"FunObjectManager");
   tolua_function(tolua_S,"new",tolua_PX2_FunObjectManager_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_FunObjectManager_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_FunObjectManager_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_FunObjectManager_delete00);
   tolua_function(tolua_S,"Initlize",tolua_PX2_FunObjectManager_Initlize00);
   tolua_function(tolua_S,"Terminate",tolua_PX2_FunObjectManager_Terminate00);
   tolua_function(tolua_S,"SetObjectFunObject",tolua_PX2_FunObjectManager_SetObjectFunObject00);
   tolua_function(tolua_S,"GetObjectFunObject",tolua_PX2_FunObjectManager_GetObjectFunObject00);
   tolua_function(tolua_S,"GetFunMap",tolua_PX2_FunObjectManager_GetFunMap00);
   tolua_function(tolua_S,"GetAddFunMap",tolua_PX2_FunObjectManager_GetAddFunMap00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"HPoint","HPoint","",tolua_collect_HPoint);
  #else
  tolua_cclass(tolua_S,"HPoint","HPoint","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"HPoint");
   tolua_function(tolua_S,"new",tolua_PX2_HPoint_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_HPoint_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_HPoint_new00_local);
   tolua_function(tolua_S,"new",tolua_PX2_HPoint_new01);
   tolua_function(tolua_S,"new_local",tolua_PX2_HPoint_new01_local);
   tolua_function(tolua_S,".call",tolua_PX2_HPoint_new01_local);
   tolua_function(tolua_S,"new",tolua_PX2_HPoint_new02);
   tolua_function(tolua_S,"new_local",tolua_PX2_HPoint_new02_local);
   tolua_function(tolua_S,".call",tolua_PX2_HPoint_new02_local);
   tolua_function(tolua_S,"delete",tolua_PX2_HPoint_delete00);
   tolua_function(tolua_S,".geti",tolua_PX2_HPoint__geti00);
   tolua_function(tolua_S,".seti",tolua_PX2_HPoint__seti00);
   tolua_function(tolua_S,".geti",tolua_PX2_HPoint__geti01);
   tolua_function(tolua_S,"X",tolua_PX2_HPoint_X00);
   tolua_function(tolua_S,"X",tolua_PX2_HPoint_X01);
   tolua_function(tolua_S,"Y",tolua_PX2_HPoint_Y00);
   tolua_function(tolua_S,"Y",tolua_PX2_HPoint_Y01);
   tolua_function(tolua_S,"Z",tolua_PX2_HPoint_Z00);
   tolua_function(tolua_S,"Z",tolua_PX2_HPoint_Z01);
   tolua_function(tolua_S,"W",tolua_PX2_HPoint_W00);
   tolua_function(tolua_S,"W",tolua_PX2_HPoint_W01);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"APoint","APoint","HPoint",tolua_collect_APoint);
  #else
  tolua_cclass(tolua_S,"APoint","APoint","HPoint",NULL);
  #endif
  tolua_beginmodule(tolua_S,"APoint");
   tolua_function(tolua_S,"new",tolua_PX2_APoint_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_APoint_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_APoint_new00_local);
   tolua_function(tolua_S,"new",tolua_PX2_APoint_new01);
   tolua_function(tolua_S,"new_local",tolua_PX2_APoint_new01_local);
   tolua_function(tolua_S,".call",tolua_PX2_APoint_new01_local);
   tolua_function(tolua_S,"new",tolua_PX2_APoint_new02);
   tolua_function(tolua_S,"new_local",tolua_PX2_APoint_new02_local);
   tolua_function(tolua_S,".call",tolua_PX2_APoint_new02_local);
   tolua_function(tolua_S,"delete",tolua_PX2_APoint_delete00);
   tolua_function(tolua_S,"SetX",tolua_PX2_APoint_SetX00);
   tolua_function(tolua_S,"SetY",tolua_PX2_APoint_SetY00);
   tolua_function(tolua_S,"SetZ",tolua_PX2_APoint_SetZ00);
   tolua_function(tolua_S,"SetW",tolua_PX2_APoint_SetW00);
   tolua_function(tolua_S,"Set",tolua_PX2_APoint_Set00);
   tolua_function(tolua_S,"Dot",tolua_PX2_APoint_Dot00);
   tolua_variable(tolua_S,"ORIGIN",tolua_get_APoint_ORIGIN,NULL);
   tolua_variable(tolua_S,"UNIT",tolua_get_APoint_UNIT,NULL);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"AVector","AVector","HPoint",tolua_collect_AVector);
  #else
  tolua_cclass(tolua_S,"AVector","AVector","HPoint",NULL);
  #endif
  tolua_beginmodule(tolua_S,"AVector");
   tolua_function(tolua_S,"new",tolua_PX2_AVector_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_AVector_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_AVector_new00_local);
   tolua_function(tolua_S,"new",tolua_PX2_AVector_new01);
   tolua_function(tolua_S,"new_local",tolua_PX2_AVector_new01_local);
   tolua_function(tolua_S,".call",tolua_PX2_AVector_new01_local);
   tolua_function(tolua_S,"new",tolua_PX2_AVector_new02);
   tolua_function(tolua_S,"new_local",tolua_PX2_AVector_new02_local);
   tolua_function(tolua_S,".call",tolua_PX2_AVector_new02_local);
   tolua_function(tolua_S,"new",tolua_PX2_AVector_new03);
   tolua_function(tolua_S,"new_local",tolua_PX2_AVector_new03_local);
   tolua_function(tolua_S,".call",tolua_PX2_AVector_new03_local);
   tolua_function(tolua_S,"delete",tolua_PX2_AVector_delete00);
   tolua_function(tolua_S,"SetX",tolua_PX2_AVector_SetX00);
   tolua_function(tolua_S,"SetY",tolua_PX2_AVector_SetY00);
   tolua_function(tolua_S,"SetZ",tolua_PX2_AVector_SetZ00);
   tolua_function(tolua_S,"SetW",tolua_PX2_AVector_SetW00);
   tolua_function(tolua_S,"Set",tolua_PX2_AVector_Set00);
   tolua_function(tolua_S,"Length",tolua_PX2_AVector_Length00);
   tolua_function(tolua_S,"SquaredLength",tolua_PX2_AVector_SquaredLength00);
   tolua_function(tolua_S,"Dot",tolua_PX2_AVector_Dot00);
   tolua_function(tolua_S,"Normalize",tolua_PX2_AVector_Normalize00);
   tolua_function(tolua_S,"Cross",tolua_PX2_AVector_Cross00);
   tolua_function(tolua_S,"UnitCross",tolua_PX2_AVector_UnitCross00);
   tolua_function(tolua_S,"Orthonormalize",tolua_PX2_AVector_Orthonormalize00);
   tolua_function(tolua_S,"Orthonormalize",tolua_PX2_AVector_Orthonormalize01);
   tolua_function(tolua_S,"GenerateOrthonormalBasis",tolua_PX2_AVector_GenerateOrthonormalBasis00);
   tolua_function(tolua_S,"GenerateComplementBasis",tolua_PX2_AVector_GenerateComplementBasis00);
   tolua_variable(tolua_S,"ZERO",tolua_get_AVector_ZERO,NULL);
   tolua_variable(tolua_S,"UNIT_X",tolua_get_AVector_UNIT_X,NULL);
   tolua_variable(tolua_S,"UNIT_Y",tolua_get_AVector_UNIT_Y,NULL);
   tolua_variable(tolua_S,"UNIT_Z",tolua_get_AVector_UNIT_Z,NULL);
   tolua_variable(tolua_S,"UNIT",tolua_get_AVector_UNIT,NULL);
   tolua_function(tolua_S,"AnglesToDirection",tolua_PX2_AVector_AnglesToDirection00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"HPlane","HPlane","",tolua_collect_HPlane);
  #else
  tolua_cclass(tolua_S,"HPlane","HPlane","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"HPlane");
   tolua_function(tolua_S,"new",tolua_PX2_HPlane_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_HPlane_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_HPlane_new00_local);
   tolua_function(tolua_S,"new",tolua_PX2_HPlane_new01);
   tolua_function(tolua_S,"new_local",tolua_PX2_HPlane_new01_local);
   tolua_function(tolua_S,".call",tolua_PX2_HPlane_new01_local);
   tolua_function(tolua_S,"delete",tolua_PX2_HPlane_delete00);
   tolua_function(tolua_S,"new",tolua_PX2_HPlane_new02);
   tolua_function(tolua_S,"new_local",tolua_PX2_HPlane_new02_local);
   tolua_function(tolua_S,".call",tolua_PX2_HPlane_new02_local);
   tolua_function(tolua_S,"new",tolua_PX2_HPlane_new03);
   tolua_function(tolua_S,"new_local",tolua_PX2_HPlane_new03_local);
   tolua_function(tolua_S,".call",tolua_PX2_HPlane_new03_local);
   tolua_function(tolua_S,"new",tolua_PX2_HPlane_new04);
   tolua_function(tolua_S,"new_local",tolua_PX2_HPlane_new04_local);
   tolua_function(tolua_S,".call",tolua_PX2_HPlane_new04_local);
   tolua_function(tolua_S,"new",tolua_PX2_HPlane_new05);
   tolua_function(tolua_S,"new_local",tolua_PX2_HPlane_new05_local);
   tolua_function(tolua_S,".call",tolua_PX2_HPlane_new05_local);
   tolua_function(tolua_S,"new",tolua_PX2_HPlane_new06);
   tolua_function(tolua_S,"new_local",tolua_PX2_HPlane_new06_local);
   tolua_function(tolua_S,".call",tolua_PX2_HPlane_new06_local);
   tolua_function(tolua_S,"SetNormal",tolua_PX2_HPlane_SetNormal00);
   tolua_function(tolua_S,"SetConstant",tolua_PX2_HPlane_SetConstant00);
   tolua_function(tolua_S,"GetNormal",tolua_PX2_HPlane_GetNormal00);
   tolua_function(tolua_S,"GetConstant",tolua_PX2_HPlane_GetConstant00);
   tolua_function(tolua_S,"Normalize",tolua_PX2_HPlane_Normalize00);
   tolua_function(tolua_S,"DistanceTo",tolua_PX2_HPlane_DistanceTo00);
   tolua_function(tolua_S,"WhichSide",tolua_PX2_HPlane_WhichSide00);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"ICM_LINEAR",ICM_LINEAR);
  tolua_constant(tolua_S,"ICM_CONSTANT",ICM_CONSTANT);
  tolua_constant(tolua_S,"ICM_CURVE_AUTO",ICM_CURVE_AUTO);
  tolua_constant(tolua_S,"ICM_CURVE_AUTOCLAMPED",ICM_CURVE_AUTOCLAMPED);
  tolua_constant(tolua_S,"ICM_CURVE_USER",ICM_CURVE_USER);
  tolua_constant(tolua_S,"ICM_CURVE_BREAK",ICM_CURVE_BREAK);
  tolua_constant(tolua_S,"ICM_MAX_MODE",ICM_MAX_MODE);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Float2","Float2","",tolua_collect_Float2);
  #else
  tolua_cclass(tolua_S,"Float2","Float2","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Float2");
   tolua_function(tolua_S,"new",tolua_PX2_Float2_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Float2_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Float2_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Float2_delete00);
   tolua_function(tolua_S,"new",tolua_PX2_Float2_new01);
   tolua_function(tolua_S,"new_local",tolua_PX2_Float2_new01_local);
   tolua_function(tolua_S,".call",tolua_PX2_Float2_new01_local);
   tolua_function(tolua_S,"new",tolua_PX2_Float2_new02);
   tolua_function(tolua_S,"new_local",tolua_PX2_Float2_new02_local);
   tolua_function(tolua_S,".call",tolua_PX2_Float2_new02_local);
   tolua_function(tolua_S,"X",tolua_PX2_Float2_X00);
   tolua_function(tolua_S,"Y",tolua_PX2_Float2_Y00);
   tolua_variable(tolua_S,"ZERO",tolua_get_Float2_ZERO,NULL);
   tolua_variable(tolua_S,"UNIT",tolua_get_Float2_UNIT,NULL);
   tolua_variable(tolua_S,"HALFUNIT",tolua_get_Float2_HALFUNIT,NULL);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Float3","Float3","",tolua_collect_Float3);
  #else
  tolua_cclass(tolua_S,"Float3","Float3","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Float3");
   tolua_function(tolua_S,"new",tolua_PX2_Float3_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Float3_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Float3_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Float3_delete00);
   tolua_function(tolua_S,"new",tolua_PX2_Float3_new01);
   tolua_function(tolua_S,"new_local",tolua_PX2_Float3_new01_local);
   tolua_function(tolua_S,".call",tolua_PX2_Float3_new01_local);
   tolua_function(tolua_S,"new",tolua_PX2_Float3_new02);
   tolua_function(tolua_S,"new_local",tolua_PX2_Float3_new02_local);
   tolua_function(tolua_S,".call",tolua_PX2_Float3_new02_local);
   tolua_function(tolua_S,"X",tolua_PX2_Float3_X00);
   tolua_function(tolua_S,"Y",tolua_PX2_Float3_Y00);
   tolua_function(tolua_S,"Z",tolua_PX2_Float3_Z00);
   tolua_function(tolua_S,"MakeColor",tolua_PX2_Float3_MakeColor00);
   tolua_variable(tolua_S,"ZERO",tolua_get_Float3_ZERO,NULL);
   tolua_variable(tolua_S,"UNIT",tolua_get_Float3_UNIT,NULL);
   tolua_variable(tolua_S,"BLACK",tolua_get_Float3_BLACK,NULL);
   tolua_variable(tolua_S,"WHITE",tolua_get_Float3_WHITE,NULL);
   tolua_variable(tolua_S,"RED",tolua_get_Float3_RED,NULL);
   tolua_variable(tolua_S,"GREEN",tolua_get_Float3_GREEN,NULL);
   tolua_variable(tolua_S,"BLUE",tolua_get_Float3_BLUE,NULL);
   tolua_variable(tolua_S,"YELLOW",tolua_get_Float3_YELLOW,NULL);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Float4","Float4","",tolua_collect_Float4);
  #else
  tolua_cclass(tolua_S,"Float4","Float4","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Float4");
   tolua_function(tolua_S,"new",tolua_PX2_Float4_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Float4_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Float4_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Float4_delete00);
   tolua_function(tolua_S,"new",tolua_PX2_Float4_new01);
   tolua_function(tolua_S,"new_local",tolua_PX2_Float4_new01_local);
   tolua_function(tolua_S,".call",tolua_PX2_Float4_new01_local);
   tolua_function(tolua_S,"new",tolua_PX2_Float4_new02);
   tolua_function(tolua_S,"new_local",tolua_PX2_Float4_new02_local);
   tolua_function(tolua_S,".call",tolua_PX2_Float4_new02_local);
   tolua_function(tolua_S,"X",tolua_PX2_Float4_X00);
   tolua_function(tolua_S,"Y",tolua_PX2_Float4_Y00);
   tolua_function(tolua_S,"Z",tolua_PX2_Float4_Z00);
   tolua_function(tolua_S,"W",tolua_PX2_Float4_W00);
   tolua_function(tolua_S,"MakeColor",tolua_PX2_Float4_MakeColor00);
   tolua_variable(tolua_S,"ZERO",tolua_get_Float4_ZERO,NULL);
   tolua_variable(tolua_S,"UNIT",tolua_get_Float4_UNIT,NULL);
   tolua_variable(tolua_S,"BLACK",tolua_get_Float4_BLACK,NULL);
   tolua_variable(tolua_S,"WHITE",tolua_get_Float4_WHITE,NULL);
   tolua_variable(tolua_S,"RED",tolua_get_Float4_RED,NULL);
   tolua_variable(tolua_S,"GREEN",tolua_get_Float4_GREEN,NULL);
   tolua_variable(tolua_S,"BLUE",tolua_get_Float4_BLUE,NULL);
   tolua_variable(tolua_S,"YELLOW",tolua_get_Float4_YELLOW,NULL);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"HMatrix","HMatrix","",tolua_collect_HMatrix);
  #else
  tolua_cclass(tolua_S,"HMatrix","HMatrix","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"HMatrix");
   tolua_function(tolua_S,"new",tolua_PX2_HMatrix_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_HMatrix_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_HMatrix_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_HMatrix_delete00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Sizef","Sizef","",tolua_collect_Sizef);
  #else
  tolua_cclass(tolua_S,"Sizef","Sizef","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Sizef");
   tolua_variable(tolua_S,"Width",tolua_get_Sizef_Width,tolua_set_Sizef_Width);
   tolua_variable(tolua_S,"Height",tolua_get_Sizef_Height,tolua_set_Sizef_Height);
   tolua_function(tolua_S,"new",tolua_PX2_Sizef_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Sizef_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Sizef_new00_local);
   tolua_function(tolua_S,"new",tolua_PX2_Sizef_new01);
   tolua_function(tolua_S,"new_local",tolua_PX2_Sizef_new01_local);
   tolua_function(tolua_S,".call",tolua_PX2_Sizef_new01_local);
   tolua_function(tolua_S,"new",tolua_PX2_Sizef_new02);
   tolua_function(tolua_S,"new_local",tolua_PX2_Sizef_new02_local);
   tolua_function(tolua_S,".call",tolua_PX2_Sizef_new02_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Sizef_delete00);
   tolua_function(tolua_S,"Clear",tolua_PX2_Sizef_Clear00);
   tolua_function(tolua_S,"Set",tolua_PX2_Sizef_Set00);
   tolua_function(tolua_S,"Swap",tolua_PX2_Sizef_Swap00);
   tolua_function(tolua_S,"IsEmpty",tolua_PX2_Sizef_IsEmpty00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Rectf","Rectf","",tolua_collect_Rectf);
  #else
  tolua_cclass(tolua_S,"Rectf","Rectf","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Rectf");
   tolua_variable(tolua_S,"Left",tolua_get_Rectf_Left,tolua_set_Rectf_Left);
   tolua_variable(tolua_S,"Bottom",tolua_get_Rectf_Bottom,tolua_set_Rectf_Bottom);
   tolua_variable(tolua_S,"Right",tolua_get_Rectf_Right,tolua_set_Rectf_Right);
   tolua_variable(tolua_S,"Top",tolua_get_Rectf_Top,tolua_set_Rectf_Top);
   tolua_function(tolua_S,"new",tolua_PX2_Rectf_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Rectf_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Rectf_new00_local);
   tolua_function(tolua_S,"new",tolua_PX2_Rectf_new01);
   tolua_function(tolua_S,"new_local",tolua_PX2_Rectf_new01_local);
   tolua_function(tolua_S,".call",tolua_PX2_Rectf_new01_local);
   tolua_function(tolua_S,"new",tolua_PX2_Rectf_new02);
   tolua_function(tolua_S,"new_local",tolua_PX2_Rectf_new02_local);
   tolua_function(tolua_S,".call",tolua_PX2_Rectf_new02_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Rectf_delete00);
   tolua_function(tolua_S,"Width",tolua_PX2_Rectf_Width00);
   tolua_function(tolua_S,"Height",tolua_PX2_Rectf_Height00);
   tolua_function(tolua_S,"Clear",tolua_PX2_Rectf_Clear00);
   tolua_function(tolua_S,"Set",tolua_PX2_Rectf_Set00);
   tolua_function(tolua_S,"Swap",tolua_PX2_Rectf_Swap00);
   tolua_function(tolua_S,"IsEmpty",tolua_PX2_Rectf_IsEmpty00);
   tolua_function(tolua_S,"IsInSide",tolua_PX2_Rectf_IsInSide00);
   tolua_function(tolua_S,"IsIntersect",tolua_PX2_Rectf_IsIntersect00);
   tolua_function(tolua_S,"IsInsize",tolua_PX2_Rectf_IsInsize00);
   tolua_function(tolua_S,".sub",tolua_PX2_Rectf__sub00);
   tolua_function(tolua_S,".add",tolua_PX2_Rectf__add00);
   tolua_function(tolua_S,".eq",tolua_PX2_Rectf__eq00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Transform","Transform","",tolua_collect_Transform);
  #else
  tolua_cclass(tolua_S,"Transform","Transform","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Transform");
   tolua_function(tolua_S,"new",tolua_PX2_Transform_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Transform_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Transform_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Transform_delete00);
   tolua_function(tolua_S,"MakeIdentity",tolua_PX2_Transform_MakeIdentity00);
   tolua_function(tolua_S,"MakeUnitScale",tolua_PX2_Transform_MakeUnitScale00);
   tolua_function(tolua_S,"IsIdentity",tolua_PX2_Transform_IsIdentity00);
   tolua_function(tolua_S,"IsRSMatrix",tolua_PX2_Transform_IsRSMatrix00);
   tolua_function(tolua_S,"IsUniformScale",tolua_PX2_Transform_IsUniformScale00);
   tolua_function(tolua_S,"SetRotate",tolua_PX2_Transform_SetRotate00);
   tolua_function(tolua_S,"SetTranslate",tolua_PX2_Transform_SetTranslate00);
   tolua_function(tolua_S,"SetTranslate",tolua_PX2_Transform_SetTranslate01);
   tolua_function(tolua_S,"SetTranslateX",tolua_PX2_Transform_SetTranslateX00);
   tolua_function(tolua_S,"SetTranslateY",tolua_PX2_Transform_SetTranslateY00);
   tolua_function(tolua_S,"SetTranslateZ",tolua_PX2_Transform_SetTranslateZ00);
   tolua_function(tolua_S,"SetTranslateXZ",tolua_PX2_Transform_SetTranslateXZ00);
   tolua_function(tolua_S,"SetScale",tolua_PX2_Transform_SetScale00);
   tolua_function(tolua_S,"SetUniformScale",tolua_PX2_Transform_SetUniformScale00);
   tolua_function(tolua_S,"GetTranslate",tolua_PX2_Transform_GetTranslate00);
   tolua_function(tolua_S,"GetScale",tolua_PX2_Transform_GetScale00);
   tolua_function(tolua_S,"GetUniformScale",tolua_PX2_Transform_GetUniformScale00);
   tolua_function(tolua_S,"GetNorm",tolua_PX2_Transform_GetNorm00);
   tolua_function(tolua_S,".mul",tolua_PX2_Transform__mul00);
   tolua_function(tolua_S,".mul",tolua_PX2_Transform__mul01);
   tolua_function(tolua_S,".mul",tolua_PX2_Transform__mul02);
   tolua_function(tolua_S,"InverseTransform",tolua_PX2_Transform_InverseTransform00);
   tolua_variable(tolua_S,"IDENTITY",tolua_get_Transform_IDENTITY,NULL);
   tolua_function(tolua_S,"GetStreamingSize",tolua_PX2_Transform_GetStreamingSize00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Bound","Bound","",tolua_collect_Bound);
  #else
  tolua_cclass(tolua_S,"Bound","Bound","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Bound");
   tolua_function(tolua_S,"new",tolua_PX2_Bound_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Bound_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Bound_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Bound_delete00);
   tolua_function(tolua_S,"SetCenter",tolua_PX2_Bound_SetCenter00);
   tolua_function(tolua_S,"SetRadius",tolua_PX2_Bound_SetRadius00);
   tolua_function(tolua_S,"GetCenter",tolua_PX2_Bound_GetCenter00);
   tolua_function(tolua_S,"GetRadius",tolua_PX2_Bound_GetRadius00);
   tolua_function(tolua_S,"WhichSide",tolua_PX2_Bound_WhichSide00);
   tolua_function(tolua_S,"GrowToContain",tolua_PX2_Bound_GrowToContain00);
   tolua_function(tolua_S,"TransformBy",tolua_PX2_Bound_TransformBy00);
   tolua_function(tolua_S,"ComputeFromData",tolua_PX2_Bound_ComputeFromData00);
   tolua_function(tolua_S,"TestIntersection",tolua_PX2_Bound_TestIntersection00);
   tolua_function(tolua_S,"TestIntersection",tolua_PX2_Bound_TestIntersection01);
   tolua_function(tolua_S,"TestIntersection",tolua_PX2_Bound_TestIntersection02);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Controlledable","Controlledable","Object",tolua_collect_Controlledable);
  #else
  tolua_cclass(tolua_S,"Controlledable","Controlledable","Object",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Controlledable");
   tolua_function(tolua_S,"delete",tolua_PX2_Controlledable_delete00);
   tolua_function(tolua_S,"ResetPlay",tolua_PX2_Controlledable_ResetPlay00);
   tolua_function(tolua_S,"Play",tolua_PX2_Controlledable_Play00);
   tolua_function(tolua_S,"IsPlaying",tolua_PX2_Controlledable_IsPlaying00);
   tolua_function(tolua_S,"Stop",tolua_PX2_Controlledable_Stop00);
   tolua_function(tolua_S,"Reset",tolua_PX2_Controlledable_Reset00);
   tolua_function(tolua_S,"SetSelfCtrled",tolua_PX2_Controlledable_SetSelfCtrled00);
   tolua_function(tolua_S,"IsSelfCtrled",tolua_PX2_Controlledable_IsSelfCtrled00);
   tolua_function(tolua_S,"SetAutoPlay",tolua_PX2_Controlledable_SetAutoPlay00);
   tolua_function(tolua_S,"IsAutoPlay",tolua_PX2_Controlledable_IsAutoPlay00);
   tolua_function(tolua_S,"GetNumControllers",tolua_PX2_Controlledable_GetNumControllers00);
   tolua_function(tolua_S,"GetController",tolua_PX2_Controlledable_GetController00);
   tolua_function(tolua_S,"GetControllerByName",tolua_PX2_Controlledable_GetControllerByName00);
   tolua_function(tolua_S,"HasController",tolua_PX2_Controlledable_HasController00);
   tolua_function(tolua_S,"AttachController",tolua_PX2_Controlledable_AttachController00);
   tolua_function(tolua_S,"DetachController",tolua_PX2_Controlledable_DetachController00);
   tolua_function(tolua_S,"DetachAllControllers",tolua_PX2_Controlledable_DetachAllControllers00);
   tolua_function(tolua_S,"SortControls",tolua_PX2_Controlledable_SortControls00);
   tolua_function(tolua_S,"UpdateControllers",tolua_PX2_Controlledable_UpdateControllers00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Controller","Controller","Object",tolua_collect_Controller);
  #else
  tolua_cclass(tolua_S,"Controller","Controller","Object",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Controller");
   tolua_function(tolua_S,"delete",tolua_PX2_Controller_delete00);
   tolua_function(tolua_S,"SetPriority",tolua_PX2_Controller_SetPriority00);
   tolua_function(tolua_S,"GetPriority",tolua_PX2_Controller_GetPriority00);
   tolua_function(tolua_S,"ResetPlay",tolua_PX2_Controller_ResetPlay00);
   tolua_function(tolua_S,"Play",tolua_PX2_Controller_Play00);
   tolua_function(tolua_S,"IsPlaying",tolua_PX2_Controller_IsPlaying00);
   tolua_function(tolua_S,"Stop",tolua_PX2_Controller_Stop00);
   tolua_function(tolua_S,"Reset",tolua_PX2_Controller_Reset00);
   tolua_function(tolua_S,"SetMaxPlayTime",tolua_PX2_Controller_SetMaxPlayTime00);
   tolua_function(tolua_S,"GetMaxPlayTime",tolua_PX2_Controller_GetMaxPlayTime00);
   tolua_function(tolua_S,"SetDelayPlayTime",tolua_PX2_Controller_SetDelayPlayTime00);
   tolua_function(tolua_S,"GetDelayPlayTime",tolua_PX2_Controller_GetDelayPlayTime00);
   tolua_function(tolua_S,"GetPlayedTime",tolua_PX2_Controller_GetPlayedTime00);
   tolua_function(tolua_S,"GetPlayedTimeMinusDelay",tolua_PX2_Controller_GetPlayedTimeMinusDelay00);
   tolua_function(tolua_S,"SetPlayedDoDetach",tolua_PX2_Controller_SetPlayedDoDetach00);
   tolua_function(tolua_S,"IsPlayedDoDetach",tolua_PX2_Controller_IsPlayedDoDetach00);
   tolua_function(tolua_S,"GetControlledable",tolua_PX2_Controller_GetControlledable00);
   tolua_function(tolua_S,"Update",tolua_PX2_Controller_Update00);
   tolua_constant(tolua_S,"RT_NONE",Controller::RT_NONE);
   tolua_constant(tolua_S,"RT_CLAMP",Controller::RT_CLAMP);
   tolua_constant(tolua_S,"RT_WRAP",Controller::RT_WRAP);
   tolua_constant(tolua_S,"RT_CYCLE",Controller::RT_CYCLE);
   tolua_variable(tolua_S,"Repeat",tolua_get_Controller_Repeat,tolua_set_Controller_Repeat);
   tolua_variable(tolua_S,"MinTime",tolua_get_Controller_MinTime,tolua_set_Controller_MinTime);
   tolua_variable(tolua_S,"MaxTime",tolua_get_Controller_MaxTime,tolua_set_Controller_MaxTime);
   tolua_variable(tolua_S,"Phase",tolua_get_Controller_Phase,tolua_set_Controller_Phase);
   tolua_variable(tolua_S,"Frequency",tolua_get_Controller_Frequency,tolua_set_Controller_Frequency);
   tolua_variable(tolua_S,"Active",tolua_get_Controller_Active,tolua_set_Controller_Active);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"InterpCurveController","InterpCurveController","Controller",tolua_collect_InterpCurveController);
  #else
  tolua_cclass(tolua_S,"InterpCurveController","InterpCurveController","Controller",NULL);
  #endif
  tolua_beginmodule(tolua_S,"InterpCurveController");
   tolua_function(tolua_S,"new",tolua_PX2_InterpCurveController_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_InterpCurveController_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_InterpCurveController_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_InterpCurveController_delete00);
   tolua_function(tolua_S,"SetAttachUpdateInit",tolua_PX2_InterpCurveController_SetAttachUpdateInit00);
   tolua_function(tolua_S,"IsAttachUpdateInit",tolua_PX2_InterpCurveController_IsAttachUpdateInit00);
   tolua_function(tolua_S,"SetDetachResetInit",tolua_PX2_InterpCurveController_SetDetachResetInit00);
   tolua_function(tolua_S,"IsDetachResetInit",tolua_PX2_InterpCurveController_IsDetachResetInit00);
   tolua_function(tolua_S,"SetRelatively",tolua_PX2_InterpCurveController_SetRelatively00);
   tolua_function(tolua_S,"IsRelatively",tolua_PX2_InterpCurveController_IsRelatively00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"InterpCurveFloatController","InterpCurveFloatController","InterpCurveController",tolua_collect_InterpCurveFloatController);
  #else
  tolua_cclass(tolua_S,"InterpCurveFloatController","InterpCurveFloatController","InterpCurveController",NULL);
  #endif
  tolua_beginmodule(tolua_S,"InterpCurveFloatController");
   tolua_function(tolua_S,"new",tolua_PX2_InterpCurveFloatController_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_InterpCurveFloatController_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_InterpCurveFloatController_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_InterpCurveFloatController_delete00);
   tolua_function(tolua_S,"SetInitValue",tolua_PX2_InterpCurveFloatController_SetInitValue00);
   tolua_function(tolua_S,"GetInitValue",tolua_PX2_InterpCurveFloatController_GetInitValue00);
   tolua_function(tolua_S,"GetCurValueRaw",tolua_PX2_InterpCurveFloatController_GetCurValueRaw00);
   tolua_function(tolua_S,"GetCurValueRelatived",tolua_PX2_InterpCurveFloatController_GetCurValueRelatived00);
   tolua_function(tolua_S,"Clear",tolua_PX2_InterpCurveFloatController_Clear00);
   tolua_function(tolua_S,"AddPoint",tolua_PX2_InterpCurveFloatController_AddPoint00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"InterpCurveFloat3Controller","InterpCurveFloat3Controller","InterpCurveController",tolua_collect_InterpCurveFloat3Controller);
  #else
  tolua_cclass(tolua_S,"InterpCurveFloat3Controller","InterpCurveFloat3Controller","InterpCurveController",NULL);
  #endif
  tolua_beginmodule(tolua_S,"InterpCurveFloat3Controller");
   tolua_function(tolua_S,"new",tolua_PX2_InterpCurveFloat3Controller_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_InterpCurveFloat3Controller_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_InterpCurveFloat3Controller_new00_local);
   tolua_function(tolua_S,"new",tolua_PX2_InterpCurveFloat3Controller_new01);
   tolua_function(tolua_S,"new_local",tolua_PX2_InterpCurveFloat3Controller_new01_local);
   tolua_function(tolua_S,".call",tolua_PX2_InterpCurveFloat3Controller_new01_local);
   tolua_function(tolua_S,"delete",tolua_PX2_InterpCurveFloat3Controller_delete00);
   tolua_function(tolua_S,"SetInitValue",tolua_PX2_InterpCurveFloat3Controller_SetInitValue00);
   tolua_function(tolua_S,"GetInitValue",tolua_PX2_InterpCurveFloat3Controller_GetInitValue00);
   tolua_function(tolua_S,"GetCurValueRaw",tolua_PX2_InterpCurveFloat3Controller_GetCurValueRaw00);
   tolua_function(tolua_S,"GetCurValueRelatived",tolua_PX2_InterpCurveFloat3Controller_GetCurValueRelatived00);
   tolua_function(tolua_S,"Clear",tolua_PX2_InterpCurveFloat3Controller_Clear00);
   tolua_function(tolua_S,"AddPoint",tolua_PX2_InterpCurveFloat3Controller_AddPoint00);
   tolua_function(tolua_S,"AddPoint",tolua_PX2_InterpCurveFloat3Controller_AddPoint01);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"InterpCurveUniformScaleController","InterpCurveUniformScaleController","InterpCurveFloatController",tolua_collect_InterpCurveUniformScaleController);
  #else
  tolua_cclass(tolua_S,"InterpCurveUniformScaleController","InterpCurveUniformScaleController","InterpCurveFloatController",NULL);
  #endif
  tolua_beginmodule(tolua_S,"InterpCurveUniformScaleController");
   tolua_function(tolua_S,"new",tolua_PX2_InterpCurveUniformScaleController_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_InterpCurveUniformScaleController_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_InterpCurveUniformScaleController_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_InterpCurveUniformScaleController_delete00);
   tolua_function(tolua_S,"New",tolua_PX2_InterpCurveUniformScaleController_New00);
   tolua_function(tolua_S,"New",tolua_PX2_InterpCurveUniformScaleController_New01);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"InterpCurveAlphaController","InterpCurveAlphaController","InterpCurveFloatController",tolua_collect_InterpCurveAlphaController);
  #else
  tolua_cclass(tolua_S,"InterpCurveAlphaController","InterpCurveAlphaController","InterpCurveFloatController",NULL);
  #endif
  tolua_beginmodule(tolua_S,"InterpCurveAlphaController");
   tolua_function(tolua_S,"new",tolua_PX2_InterpCurveAlphaController_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_InterpCurveAlphaController_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_InterpCurveAlphaController_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_InterpCurveAlphaController_delete00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"InterpCurveScaleController","InterpCurveScaleController","InterpCurveFloat3Controller",tolua_collect_InterpCurveScaleController);
  #else
  tolua_cclass(tolua_S,"InterpCurveScaleController","InterpCurveScaleController","InterpCurveFloat3Controller",NULL);
  #endif
  tolua_beginmodule(tolua_S,"InterpCurveScaleController");
   tolua_function(tolua_S,"new",tolua_PX2_InterpCurveScaleController_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_InterpCurveScaleController_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_InterpCurveScaleController_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_InterpCurveScaleController_delete00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"InterpCurveRotateController","InterpCurveRotateController","InterpCurveFloat3Controller",tolua_collect_InterpCurveRotateController);
  #else
  tolua_cclass(tolua_S,"InterpCurveRotateController","InterpCurveRotateController","InterpCurveFloat3Controller",NULL);
  #endif
  tolua_beginmodule(tolua_S,"InterpCurveRotateController");
   tolua_function(tolua_S,"new",tolua_PX2_InterpCurveRotateController_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_InterpCurveRotateController_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_InterpCurveRotateController_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_InterpCurveRotateController_delete00);
   tolua_function(tolua_S,"New",tolua_PX2_InterpCurveRotateController_New00);
   tolua_function(tolua_S,"New",tolua_PX2_InterpCurveRotateController_New01);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"InterpCurveTranslateController","InterpCurveTranslateController","InterpCurveFloat3Controller",tolua_collect_InterpCurveTranslateController);
  #else
  tolua_cclass(tolua_S,"InterpCurveTranslateController","InterpCurveTranslateController","InterpCurveFloat3Controller",NULL);
  #endif
  tolua_beginmodule(tolua_S,"InterpCurveTranslateController");
   tolua_function(tolua_S,"new",tolua_PX2_InterpCurveTranslateController_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_InterpCurveTranslateController_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_InterpCurveTranslateController_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_InterpCurveTranslateController_delete00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"InterpCurveColorController","InterpCurveColorController","InterpCurveFloat3Controller",tolua_collect_InterpCurveColorController);
  #else
  tolua_cclass(tolua_S,"InterpCurveColorController","InterpCurveColorController","InterpCurveFloat3Controller",NULL);
  #endif
  tolua_beginmodule(tolua_S,"InterpCurveColorController");
   tolua_function(tolua_S,"new",tolua_PX2_InterpCurveColorController_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_InterpCurveColorController_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_InterpCurveColorController_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_InterpCurveColorController_delete00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Buffer","Buffer","Object",tolua_collect_Buffer);
  #else
  tolua_cclass(tolua_S,"Buffer","Buffer","Object",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Buffer");
   tolua_constant(tolua_S,"BU_STATIC",Buffer::BU_STATIC);
   tolua_constant(tolua_S,"BU_DYNAMIC",Buffer::BU_DYNAMIC);
   tolua_constant(tolua_S,"BU_RENDERTARGET",Buffer::BU_RENDERTARGET);
   tolua_constant(tolua_S,"BU_DEPTHSTENCIL",Buffer::BU_DEPTHSTENCIL);
   tolua_constant(tolua_S,"BU_TEXTURE",Buffer::BU_TEXTURE);
   tolua_constant(tolua_S,"BU_QUANTITY",Buffer::BU_QUANTITY);
   tolua_constant(tolua_S,"BL_READ_ONLY",Buffer::BL_READ_ONLY);
   tolua_constant(tolua_S,"BL_WRITE_ONLY",Buffer::BL_WRITE_ONLY);
   tolua_constant(tolua_S,"BL_READ_WRITE",Buffer::BL_READ_WRITE);
   tolua_constant(tolua_S,"BL_QUANTITY",Buffer::BL_QUANTITY);
   tolua_function(tolua_S,"delete",tolua_PX2_Buffer_delete00);
   tolua_function(tolua_S,"GetNumElements",tolua_PX2_Buffer_GetNumElements00);
   tolua_function(tolua_S,"GetElementSize",tolua_PX2_Buffer_GetElementSize00);
   tolua_function(tolua_S,"GetUsage",tolua_PX2_Buffer_GetUsage00);
   tolua_function(tolua_S,"SetNumElements",tolua_PX2_Buffer_SetNumElements00);
   tolua_function(tolua_S,"GetNumBytes",tolua_PX2_Buffer_GetNumBytes00);
   tolua_function(tolua_S,"ClearData",tolua_PX2_Buffer_ClearData00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Texture","Texture","Object",tolua_collect_Texture);
  #else
  tolua_cclass(tolua_S,"Texture","Texture","Object",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Texture");
   tolua_constant(tolua_S,"TF_NONE",Texture::TF_NONE);
   tolua_constant(tolua_S,"TF_R5G6B5",Texture::TF_R5G6B5);
   tolua_constant(tolua_S,"TF_A1R5G5B5",Texture::TF_A1R5G5B5);
   tolua_constant(tolua_S,"TF_A4R4G4B4",Texture::TF_A4R4G4B4);
   tolua_constant(tolua_S,"TF_A8",Texture::TF_A8);
   tolua_constant(tolua_S,"TF_L8",Texture::TF_L8);
   tolua_constant(tolua_S,"TF_A8L8",Texture::TF_A8L8);
   tolua_constant(tolua_S,"TF_R8G8B8",Texture::TF_R8G8B8);
   tolua_constant(tolua_S,"TF_A8R8G8B8",Texture::TF_A8R8G8B8);
   tolua_constant(tolua_S,"TF_A8B8G8R8",Texture::TF_A8B8G8R8);
   tolua_constant(tolua_S,"TF_L16",Texture::TF_L16);
   tolua_constant(tolua_S,"TF_G16R16",Texture::TF_G16R16);
   tolua_constant(tolua_S,"TF_A16B16G16R16",Texture::TF_A16B16G16R16);
   tolua_constant(tolua_S,"TF_R16F",Texture::TF_R16F);
   tolua_constant(tolua_S,"TF_G16R16F",Texture::TF_G16R16F);
   tolua_constant(tolua_S,"TF_A16B16G16R16F",Texture::TF_A16B16G16R16F);
   tolua_constant(tolua_S,"TF_R32F",Texture::TF_R32F);
   tolua_constant(tolua_S,"TF_G32R32F",Texture::TF_G32R32F);
   tolua_constant(tolua_S,"TF_A32B32G32R32F",Texture::TF_A32B32G32R32F);
   tolua_constant(tolua_S,"TF_DXT1",Texture::TF_DXT1);
   tolua_constant(tolua_S,"TF_DXT3",Texture::TF_DXT3);
   tolua_constant(tolua_S,"TF_DXT5",Texture::TF_DXT5);
   tolua_constant(tolua_S,"TF_D16",Texture::TF_D16);
   tolua_constant(tolua_S,"TF_D24S8",Texture::TF_D24S8);
   tolua_constant(tolua_S,"TF_RGB_PVRTC_4B",Texture::TF_RGB_PVRTC_4B);
   tolua_constant(tolua_S,"TF_RGB_PVRTC_2B",Texture::TF_RGB_PVRTC_2B);
   tolua_constant(tolua_S,"TF_RGBA_PVRTC_4B",Texture::TF_RGBA_PVRTC_4B);
   tolua_constant(tolua_S,"TF_RGBA_PVRTC_2B",Texture::TF_RGBA_PVRTC_2B);
   tolua_constant(tolua_S,"TF_RGB_ETC1",Texture::TF_RGB_ETC1);
   tolua_constant(tolua_S,"TF_QUANTITY",Texture::TF_QUANTITY);
   tolua_constant(tolua_S,"TT_1D",Texture::TT_1D);
   tolua_constant(tolua_S,"TT_2D",Texture::TT_2D);
   tolua_constant(tolua_S,"TT_3D",Texture::TT_3D);
   tolua_constant(tolua_S,"TT_CUBE",Texture::TT_CUBE);
   tolua_constant(tolua_S,"TT_QUANTITY",Texture::TT_QUANTITY);
   tolua_function(tolua_S,"delete",tolua_PX2_Texture_delete00);
   tolua_function(tolua_S,"GetFormat",tolua_PX2_Texture_GetFormat00);
   tolua_function(tolua_S,"GetTextureType",tolua_PX2_Texture_GetTextureType00);
   tolua_function(tolua_S,"GetUsage",tolua_PX2_Texture_GetUsage00);
   tolua_function(tolua_S,"GetNumLevels",tolua_PX2_Texture_GetNumLevels00);
   tolua_function(tolua_S,"GetNumDimensions",tolua_PX2_Texture_GetNumDimensions00);
   tolua_function(tolua_S,"GetDimension",tolua_PX2_Texture_GetDimension00);
   tolua_function(tolua_S,"GetNumLevelBytes",tolua_PX2_Texture_GetNumLevelBytes00);
   tolua_function(tolua_S,"GetNumTotalBytes",tolua_PX2_Texture_GetNumTotalBytes00);
   tolua_function(tolua_S,"GetLevelOffset",tolua_PX2_Texture_GetLevelOffset00);
   tolua_function(tolua_S,"GetPixelSize",tolua_PX2_Texture_GetPixelSize00);
   tolua_function(tolua_S,"IsCompressed",tolua_PX2_Texture_IsCompressed00);
   tolua_function(tolua_S,"IsMipmapable",tolua_PX2_Texture_IsMipmapable00);
   tolua_function(tolua_S,"IsDataNull",tolua_PX2_Texture_IsDataNull00);
   tolua_function(tolua_S,"SetBindDoClearData",tolua_PX2_Texture_SetBindDoClearData00);
   tolua_function(tolua_S,"IsBindDoClearData",tolua_PX2_Texture_IsBindDoClearData00);
   tolua_function(tolua_S,"ClearData",tolua_PX2_Texture_ClearData00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Texture2D","Texture2D","Texture",tolua_collect_Texture2D);
  #else
  tolua_cclass(tolua_S,"Texture2D","Texture2D","Texture",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Texture2D");
   tolua_function(tolua_S,"delete",tolua_PX2_Texture2D_delete00);
   tolua_function(tolua_S,"GetWidth",tolua_PX2_Texture2D_GetWidth00);
   tolua_function(tolua_S,"GetHeight",tolua_PX2_Texture2D_GetHeight00);
   tolua_function(tolua_S,"CanGenMinmaps",tolua_PX2_Texture2D_CanGenMinmaps00);
   tolua_function(tolua_S,"GenerateMipmaps",tolua_PX2_Texture2D_GenerateMipmaps00);
   tolua_function(tolua_S,"HasMipmaps",tolua_PX2_Texture2D_HasMipmaps00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Shine","Shine","Object",tolua_collect_Shine);
  #else
  tolua_cclass(tolua_S,"Shine","Shine","Object",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Shine");
   tolua_function(tolua_S,"new",tolua_PX2_Shine_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Shine_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Shine_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Shine_delete00);
   tolua_variable(tolua_S,"Emissive",tolua_get_Shine_Emissive,tolua_set_Shine_Emissive);
   tolua_variable(tolua_S,"Ambient",tolua_get_Shine_Ambient,tolua_set_Shine_Ambient);
   tolua_variable(tolua_S,"Diffuse",tolua_get_Shine_Diffuse,tolua_set_Shine_Diffuse);
   tolua_variable(tolua_S,"Specular",tolua_get_Shine_Specular,tolua_set_Shine_Specular);
   tolua_function(tolua_S,"ReCalTemp",tolua_PX2_Shine_ReCalTemp00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Material","Material","Object",tolua_collect_Material);
  #else
  tolua_cclass(tolua_S,"Material","Material","Object",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Material");
   tolua_function(tolua_S,"new",tolua_PX2_Material_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Material_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Material_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Material_delete00);
   tolua_function(tolua_S,"GetNumTechniques",tolua_PX2_Material_GetNumTechniques00);
   tolua_function(tolua_S,"GetTechnique",tolua_PX2_Material_GetTechnique00);
   tolua_function(tolua_S,"GetTechnique",tolua_PX2_Material_GetTechnique01);
   tolua_function(tolua_S,"GetNumPasses",tolua_PX2_Material_GetNumPasses00);
   tolua_function(tolua_S,"GetPass",tolua_PX2_Material_GetPass00);
   tolua_function(tolua_S,"GetVertexShader",tolua_PX2_Material_GetVertexShader00);
   tolua_function(tolua_S,"GetPixelShader",tolua_PX2_Material_GetPixelShader00);
   tolua_function(tolua_S,"GetAlphaProperty",tolua_PX2_Material_GetAlphaProperty00);
   tolua_function(tolua_S,"GetCullProperty",tolua_PX2_Material_GetCullProperty00);
   tolua_function(tolua_S,"GetDepthProperty",tolua_PX2_Material_GetDepthProperty00);
   tolua_function(tolua_S,"GetOffsetProperty",tolua_PX2_Material_GetOffsetProperty00);
   tolua_function(tolua_S,"GetStencilProperty",tolua_PX2_Material_GetStencilProperty00);
   tolua_function(tolua_S,"GetWireProperty",tolua_PX2_Material_GetWireProperty00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"MaterialInstance","MaterialInstance","Object",tolua_collect_MaterialInstance);
  #else
  tolua_cclass(tolua_S,"MaterialInstance","MaterialInstance","Object",NULL);
  #endif
  tolua_beginmodule(tolua_S,"MaterialInstance");
   tolua_function(tolua_S,"new",tolua_PX2_MaterialInstance_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_MaterialInstance_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_MaterialInstance_new00_local);
   tolua_function(tolua_S,"new",tolua_PX2_MaterialInstance_new01);
   tolua_function(tolua_S,"new_local",tolua_PX2_MaterialInstance_new01_local);
   tolua_function(tolua_S,".call",tolua_PX2_MaterialInstance_new01_local);
   tolua_function(tolua_S,"delete",tolua_PX2_MaterialInstance_delete00);
   tolua_function(tolua_S,"SetUseMaterial",tolua_PX2_MaterialInstance_SetUseMaterial00);
   tolua_function(tolua_S,"SetUseMaterialTechnique",tolua_PX2_MaterialInstance_SetUseMaterialTechnique00);
   tolua_function(tolua_S,"GetMaterialFilename",tolua_PX2_MaterialInstance_GetMaterialFilename00);
   tolua_function(tolua_S,"GetTechniqueName",tolua_PX2_MaterialInstance_GetTechniqueName00);
   tolua_function(tolua_S,"GetMaterial",tolua_PX2_MaterialInstance_GetMaterial00);
   tolua_function(tolua_S,"GetTechniqueIndex",tolua_PX2_MaterialInstance_GetTechniqueIndex00);
   tolua_function(tolua_S,"GetNumPasses",tolua_PX2_MaterialInstance_GetNumPasses00);
   tolua_function(tolua_S,"GetPass",tolua_PX2_MaterialInstance_GetPass00);
   tolua_function(tolua_S,"GetVertexParameters",tolua_PX2_MaterialInstance_GetVertexParameters00);
   tolua_function(tolua_S,"GetPixelParameters",tolua_PX2_MaterialInstance_GetPixelParameters00);
   tolua_function(tolua_S,"SetVertexConstant",tolua_PX2_MaterialInstance_SetVertexConstant00);
   tolua_function(tolua_S,"SetPixelConstant",tolua_PX2_MaterialInstance_SetPixelConstant00);
   tolua_function(tolua_S,"SetVertexTexture",tolua_PX2_MaterialInstance_SetVertexTexture00);
   tolua_function(tolua_S,"SetPixelTexture",tolua_PX2_MaterialInstance_SetPixelTexture00);
   tolua_function(tolua_S,"SetPixelTexture",tolua_PX2_MaterialInstance_SetPixelTexture01);
   tolua_function(tolua_S,"IsHasPixelSample",tolua_PX2_MaterialInstance_IsHasPixelSample00);
   tolua_function(tolua_S,"GetVertexConstant",tolua_PX2_MaterialInstance_GetVertexConstant00);
   tolua_function(tolua_S,"GetPixelConstant",tolua_PX2_MaterialInstance_GetPixelConstant00);
   tolua_function(tolua_S,"GetVertexTexture",tolua_PX2_MaterialInstance_GetVertexTexture00);
   tolua_function(tolua_S,"GetPixelTexture",tolua_PX2_MaterialInstance_GetPixelTexture00);
   tolua_function(tolua_S,"GetVertexConstant",tolua_PX2_MaterialInstance_GetVertexConstant01);
   tolua_function(tolua_S,"GetPixelConstant",tolua_PX2_MaterialInstance_GetPixelConstant01);
   tolua_function(tolua_S,"GetVertexTexture",tolua_PX2_MaterialInstance_GetVertexTexture01);
   tolua_function(tolua_S,"GetPixelTexture",tolua_PX2_MaterialInstance_GetPixelTexture01);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Movable","Movable","Controlledable",tolua_collect_Movable);
  #else
  tolua_cclass(tolua_S,"Movable","Movable","Controlledable",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Movable");
   tolua_function(tolua_S,"delete",tolua_PX2_Movable_delete00);
   tolua_variable(tolua_S,"LocalTransform",tolua_get_Movable_LocalTransform,tolua_set_Movable_LocalTransform);
   tolua_variable(tolua_S,"WorldTransform",tolua_get_Movable_WorldTransform,tolua_set_Movable_WorldTransform);
   tolua_variable(tolua_S,"WorldTransformIsCurrent",tolua_get_Movable_WorldTransformIsCurrent,tolua_set_Movable_WorldTransformIsCurrent);
   tolua_variable(tolua_S,"IsSkinCtrlSetWroldTrans",tolua_get_Movable_IsSkinCtrlSetWroldTrans,tolua_set_Movable_IsSkinCtrlSetWroldTrans);
   tolua_variable(tolua_S,"BoundWorldTransform",tolua_get_Movable_BoundWorldTransform,tolua_set_Movable_BoundWorldTransform);
   tolua_variable(tolua_S,"WorldBound",tolua_get_Movable_WorldBound,tolua_set_Movable_WorldBound);
   tolua_variable(tolua_S,"WorldBoundIsCurrent",tolua_get_Movable_WorldBoundIsCurrent,tolua_set_Movable_WorldBoundIsCurrent);
   tolua_constant(tolua_S,"CULL_DYNAMIC",Movable::CULL_DYNAMIC);
   tolua_constant(tolua_S,"CULL_ALWAYS",Movable::CULL_ALWAYS);
   tolua_constant(tolua_S,"CULL_NEVER",Movable::CULL_NEVER);
   tolua_variable(tolua_S,"Culling",tolua_get_Movable_Culling,tolua_set_Movable_Culling);
   tolua_function(tolua_S,"Show",tolua_PX2_Movable_Show00);
   tolua_function(tolua_S,"IsShow",tolua_PX2_Movable_IsShow00);
   tolua_function(tolua_S,"SetColorSelfCtrled",tolua_PX2_Movable_SetColorSelfCtrled00);
   tolua_function(tolua_S,"IsColorSelfCtrled",tolua_PX2_Movable_IsColorSelfCtrled00);
   tolua_function(tolua_S,"SetColor",tolua_PX2_Movable_SetColor00);
   tolua_function(tolua_S,"GetColor",tolua_PX2_Movable_GetColor00);
   tolua_function(tolua_S,"SetAlphaSelfCtrled",tolua_PX2_Movable_SetAlphaSelfCtrled00);
   tolua_function(tolua_S,"IsAlphaSelfCtrled",tolua_PX2_Movable_IsAlphaSelfCtrled00);
   tolua_function(tolua_S,"SetAlpha",tolua_PX2_Movable_SetAlpha00);
   tolua_function(tolua_S,"GetAlpha",tolua_PX2_Movable_GetAlpha00);
   tolua_function(tolua_S,"SetBrightnessSelfCtrled",tolua_PX2_Movable_SetBrightnessSelfCtrled00);
   tolua_function(tolua_S,"IsBrightnessSelfCtrled",tolua_PX2_Movable_IsBrightnessSelfCtrled00);
   tolua_function(tolua_S,"SetBrightness",tolua_PX2_Movable_SetBrightness00);
   tolua_function(tolua_S,"GetBrightness",tolua_PX2_Movable_GetBrightness00);
   tolua_function(tolua_S,"GetLastColor",tolua_PX2_Movable_GetLastColor00);
   tolua_function(tolua_S,"GetLastAlpha",tolua_PX2_Movable_GetLastAlpha00);
   tolua_function(tolua_S,"GetLastBrightness",tolua_PX2_Movable_GetLastBrightness00);
   tolua_function(tolua_S,"GetParent",tolua_PX2_Movable_GetParent00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"VertexFormat","VertexFormat","Object",tolua_collect_VertexFormat);
  #else
  tolua_cclass(tolua_S,"VertexFormat","VertexFormat","Object",NULL);
  #endif
  tolua_beginmodule(tolua_S,"VertexFormat");
   tolua_function(tolua_S,"delete",tolua_PX2_VertexFormat_delete00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Renderable","Renderable","Movable",tolua_collect_Renderable);
  #else
  tolua_cclass(tolua_S,"Renderable","Renderable","Movable",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Renderable");
   tolua_function(tolua_S,"delete",tolua_PX2_Renderable_delete00);
   tolua_constant(tolua_S,"PT_NONE",Renderable::PT_NONE);
   tolua_constant(tolua_S,"PT_POLYPOINT",Renderable::PT_POLYPOINT);
   tolua_constant(tolua_S,"PT_POLYSEGMENTS_DISJOINT",Renderable::PT_POLYSEGMENTS_DISJOINT);
   tolua_constant(tolua_S,"PT_POLYSEGMENTS_CONTIGUOUS",Renderable::PT_POLYSEGMENTS_CONTIGUOUS);
   tolua_constant(tolua_S,"PT_TRIANGLES",Renderable::PT_TRIANGLES);
   tolua_constant(tolua_S,"PT_TRIMESH",Renderable::PT_TRIMESH);
   tolua_constant(tolua_S,"PT_TRISTRIP",Renderable::PT_TRISTRIP);
   tolua_constant(tolua_S,"PT_TRIFAN",Renderable::PT_TRIFAN);
   tolua_constant(tolua_S,"PT_MAX_QUANTITY",Renderable::PT_MAX_QUANTITY);
   tolua_function(tolua_S,"GetPrimitiveType",tolua_PX2_Renderable_GetPrimitiveType00);
   tolua_function(tolua_S,"GetMaterialInstance",tolua_PX2_Renderable_GetMaterialInstance00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Triangles","Triangles","Renderable",tolua_collect_Triangles);
  #else
  tolua_cclass(tolua_S,"Triangles","Triangles","Renderable",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Triangles");
   tolua_function(tolua_S,"delete",tolua_PX2_Triangles_delete00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"TriMesh","TriMesh","Triangles",tolua_collect_TriMesh);
  #else
  tolua_cclass(tolua_S,"TriMesh","TriMesh","Triangles",NULL);
  #endif
  tolua_beginmodule(tolua_S,"TriMesh");
   tolua_function(tolua_S,"delete",tolua_PX2_TriMesh_delete00);
   tolua_function(tolua_S,"GetNumTriangles",tolua_PX2_TriMesh_GetNumTriangles00);
   tolua_function(tolua_S,"GetTriangle",tolua_PX2_TriMesh_GetTriangle00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Node","Node","Movable",tolua_collect_Node);
  #else
  tolua_cclass(tolua_S,"Node","Node","Movable",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Node");
   tolua_function(tolua_S,"new",tolua_PX2_Node_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Node_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Node_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Node_delete00);
   tolua_function(tolua_S,"New",tolua_PX2_Node_New00);
   tolua_function(tolua_S,"New",tolua_PX2_Node_New01);
   tolua_function(tolua_S,"Play",tolua_PX2_Node_Play00);
   tolua_function(tolua_S,"IsPlaying",tolua_PX2_Node_IsPlaying00);
   tolua_function(tolua_S,"Stop",tolua_PX2_Node_Stop00);
   tolua_function(tolua_S,"Reset",tolua_PX2_Node_Reset00);
   tolua_function(tolua_S,"GetNumChildren",tolua_PX2_Node_GetNumChildren00);
   tolua_function(tolua_S,"GetNumValidChildren",tolua_PX2_Node_GetNumValidChildren00);
   tolua_function(tolua_S,"AttachChild",tolua_PX2_Node_AttachChild00);
   tolua_function(tolua_S,"InsertChild",tolua_PX2_Node_InsertChild00);
   tolua_function(tolua_S,"DetachChild",tolua_PX2_Node_DetachChild00);
   tolua_function(tolua_S,"DetachChildByName",tolua_PX2_Node_DetachChildByName00);
   tolua_function(tolua_S,"DetachAllChildren",tolua_PX2_Node_DetachAllChildren00);
   tolua_function(tolua_S,"Enable",tolua_PX2_Node_Enable00);
   tolua_function(tolua_S,"SetCastShadow",tolua_PX2_Node_SetCastShadow00);
   tolua_function(tolua_S,"SetReceiveShadow",tolua_PX2_Node_SetReceiveShadow00);
   tolua_function(tolua_S,"SetDoPickPriority",tolua_PX2_Node_SetDoPickPriority00);
   tolua_function(tolua_S,"IsDoPickPriority",tolua_PX2_Node_IsDoPickPriority00);
   tolua_function(tolua_S,"OnNotPicked",tolua_PX2_Node_OnNotPicked00);
   tolua_function(tolua_S,"SetNeedCalUpdateChild",tolua_PX2_Node_SetNeedCalUpdateChild00);
   tolua_function(tolua_S,"IsNeedCalUpdateChild",tolua_PX2_Node_IsNeedCalUpdateChild00);
   tolua_function(tolua_S,"SetAnchorID",tolua_PX2_Node_SetAnchorID00);
   tolua_function(tolua_S,"GetAnchorID",tolua_PX2_Node_GetAnchorID00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"SizeNode","SizeNode","Node",tolua_collect_SizeNode);
  #else
  tolua_cclass(tolua_S,"SizeNode","SizeNode","Node",NULL);
  #endif
  tolua_beginmodule(tolua_S,"SizeNode");
   tolua_function(tolua_S,"new",tolua_PX2_SizeNode_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_SizeNode_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_SizeNode_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_SizeNode_delete00);
   tolua_function(tolua_S,"SetSize",tolua_PX2_SizeNode_SetSize00);
   tolua_function(tolua_S,"SetSize",tolua_PX2_SizeNode_SetSize01);
   tolua_function(tolua_S,"GetSize",tolua_PX2_SizeNode_GetSize00);
   tolua_function(tolua_S,"SetWidth",tolua_PX2_SizeNode_SetWidth00);
   tolua_function(tolua_S,"GetWidth",tolua_PX2_SizeNode_GetWidth00);
   tolua_function(tolua_S,"SetHeight",tolua_PX2_SizeNode_SetHeight00);
   tolua_function(tolua_S,"GetHeight",tolua_PX2_SizeNode_GetHeight00);
   tolua_function(tolua_S,"SetPivot",tolua_PX2_SizeNode_SetPivot00);
   tolua_function(tolua_S,"SetPivot",tolua_PX2_SizeNode_SetPivot01);
   tolua_function(tolua_S,"GetPivot",tolua_PX2_SizeNode_GetPivot00);
   tolua_function(tolua_S,"EnableAnchorLayout",tolua_PX2_SizeNode_EnableAnchorLayout00);
   tolua_function(tolua_S,"IsAnchorLayoutEnable",tolua_PX2_SizeNode_IsAnchorLayoutEnable00);
   tolua_function(tolua_S,"SetAnchorHor",tolua_PX2_SizeNode_SetAnchorHor00);
   tolua_function(tolua_S,"SetAnchorHor",tolua_PX2_SizeNode_SetAnchorHor01);
   tolua_function(tolua_S,"GetAnchorHor",tolua_PX2_SizeNode_GetAnchorHor00);
   tolua_function(tolua_S,"SetAnchorParamHor",tolua_PX2_SizeNode_SetAnchorParamHor00);
   tolua_function(tolua_S,"SetAnchorParamHor",tolua_PX2_SizeNode_SetAnchorParamHor01);
   tolua_function(tolua_S,"GetAnchorParamHor",tolua_PX2_SizeNode_GetAnchorParamHor00);
   tolua_function(tolua_S,"SetAnchorVer",tolua_PX2_SizeNode_SetAnchorVer00);
   tolua_function(tolua_S,"SetAnchorVer",tolua_PX2_SizeNode_SetAnchorVer01);
   tolua_function(tolua_S,"GetAnchorVer",tolua_PX2_SizeNode_GetAnchorVer00);
   tolua_function(tolua_S,"SetAnchorParamVer",tolua_PX2_SizeNode_SetAnchorParamVer00);
   tolua_function(tolua_S,"SetAnchorParamVer",tolua_PX2_SizeNode_SetAnchorParamVer01);
   tolua_function(tolua_S,"GetAnchorParamVer",tolua_PX2_SizeNode_GetAnchorParamVer00);
   tolua_function(tolua_S,"SetWidget",tolua_PX2_SizeNode_SetWidget00);
   tolua_function(tolua_S,"IsWidget",tolua_PX2_SizeNode_IsWidget00);
   tolua_function(tolua_S,"SetSelfPickSizeExtend",tolua_PX2_SizeNode_SetSelfPickSizeExtend00);
   tolua_function(tolua_S,"GetSelfPickSizeExtend",tolua_PX2_SizeNode_GetSelfPickSizeExtend00);
   tolua_function(tolua_S,"SetChildPickOnlyInSizeRange",tolua_PX2_SizeNode_SetChildPickOnlyInSizeRange00);
   tolua_function(tolua_S,"IsChildPickOnlyInSizeRange",tolua_PX2_SizeNode_IsChildPickOnlyInSizeRange00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"SwitchNode","SwitchNode","Node",tolua_collect_SwitchNode);
  #else
  tolua_cclass(tolua_S,"SwitchNode","SwitchNode","Node",NULL);
  #endif
  tolua_beginmodule(tolua_S,"SwitchNode");
   tolua_function(tolua_S,"new",tolua_PX2_SwitchNode_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_SwitchNode_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_SwitchNode_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_SwitchNode_delete00);
   tolua_function(tolua_S,"Create",tolua_PX2_SwitchNode_Create00);
   tolua_function(tolua_S,"SetActiveChild",tolua_PX2_SwitchNode_SetActiveChild00);
   tolua_function(tolua_S,"GetActiveChild",tolua_PX2_SwitchNode_GetActiveChild00);
   tolua_function(tolua_S,"DisableAllChildren",tolua_PX2_SwitchNode_DisableAllChildren00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Camera","Camera","Object",tolua_collect_Camera);
  #else
  tolua_cclass(tolua_S,"Camera","Camera","Object",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Camera");
   tolua_function(tolua_S,"new",tolua_PX2_Camera_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Camera_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Camera_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Camera_delete00);
   tolua_function(tolua_S,"SetCameraNode",tolua_PX2_Camera_SetCameraNode00);
   tolua_function(tolua_S,"GetCameraNode",tolua_PX2_Camera_GetCameraNode00);
   tolua_function(tolua_S,"SetFrame",tolua_PX2_Camera_SetFrame00);
   tolua_function(tolua_S,"SetPosition",tolua_PX2_Camera_SetPosition00);
   tolua_function(tolua_S,"SetAxes",tolua_PX2_Camera_SetAxes00);
   tolua_function(tolua_S,"GetPosition",tolua_PX2_Camera_GetPosition00);
   tolua_function(tolua_S,"GetDVector",tolua_PX2_Camera_GetDVector00);
   tolua_function(tolua_S,"GetUVector",tolua_PX2_Camera_GetUVector00);
   tolua_function(tolua_S,"GetRVector",tolua_PX2_Camera_GetRVector00);
   tolua_function(tolua_S,"GetViewMatrix",tolua_PX2_Camera_GetViewMatrix00);
   tolua_constant(tolua_S,"VF_DMIN",Camera::VF_DMIN);
   tolua_constant(tolua_S,"VF_DMAX",Camera::VF_DMAX);
   tolua_constant(tolua_S,"VF_UMIN",Camera::VF_UMIN);
   tolua_constant(tolua_S,"VF_UMAX",Camera::VF_UMAX);
   tolua_constant(tolua_S,"VF_RMIN",Camera::VF_RMIN);
   tolua_constant(tolua_S,"VF_RMAX",Camera::VF_RMAX);
   tolua_constant(tolua_S,"VF_QUANTITY",Camera::VF_QUANTITY);
   tolua_function(tolua_S,"SetPerspective",tolua_PX2_Camera_SetPerspective00);
   tolua_function(tolua_S,"IsPerspective",tolua_PX2_Camera_IsPerspective00);
   tolua_function(tolua_S,"SetFrustum",tolua_PX2_Camera_SetFrustum00);
   tolua_function(tolua_S,"SetFrustum",tolua_PX2_Camera_SetFrustum01);
   tolua_function(tolua_S,"GetFrustum",tolua_PX2_Camera_GetFrustum00);
   tolua_function(tolua_S,"GetFrustum",tolua_PX2_Camera_GetFrustum01);
   tolua_function(tolua_S,"GetDMin",tolua_PX2_Camera_GetDMin00);
   tolua_function(tolua_S,"GetDMax",tolua_PX2_Camera_GetDMax00);
   tolua_function(tolua_S,"GetUMin",tolua_PX2_Camera_GetUMin00);
   tolua_function(tolua_S,"GetUMax",tolua_PX2_Camera_GetUMax00);
   tolua_function(tolua_S,"GetRMin",tolua_PX2_Camera_GetRMin00);
   tolua_function(tolua_S,"GetRMax",tolua_PX2_Camera_GetRMax00);
   tolua_constant(tolua_S,"PM_DEPTH_ZERO_TO_ONE",Camera::PM_DEPTH_ZERO_TO_ONE);
   tolua_constant(tolua_S,"PM_DEPTH_MINUS_ONE_TO_ONE",Camera::PM_DEPTH_MINUS_ONE_TO_ONE);
   tolua_constant(tolua_S,"PM_DEPTH_QUANTITY",Camera::PM_DEPTH_QUANTITY);
   tolua_function(tolua_S,"GetDepthType",tolua_PX2_Camera_GetDepthType00);
   tolua_function(tolua_S,"GetProjectionMatrix",tolua_PX2_Camera_GetProjectionMatrix00);
   tolua_function(tolua_S,"GetProjectionViewMatrix",tolua_PX2_Camera_GetProjectionViewMatrix00);
   tolua_function(tolua_S,"SetPreViewMatrix",tolua_PX2_Camera_SetPreViewMatrix00);
   tolua_function(tolua_S,"GetPreViewMatrix",tolua_PX2_Camera_GetPreViewMatrix00);
   tolua_function(tolua_S,"PreViewIsIdentity",tolua_PX2_Camera_PreViewIsIdentity00);
   tolua_function(tolua_S,"SetPostProjectionMatrix",tolua_PX2_Camera_SetPostProjectionMatrix00);
   tolua_function(tolua_S,"GetPostProjectionMatrix",tolua_PX2_Camera_GetPostProjectionMatrix00);
   tolua_function(tolua_S,"PostProjectionIsIdentity",tolua_PX2_Camera_PostProjectionIsIdentity00);
   tolua_function(tolua_S,"SetClearColor",tolua_PX2_Camera_SetClearColor00);
   tolua_function(tolua_S,"GetClearColor",tolua_PX2_Camera_GetClearColor00);
   tolua_function(tolua_S,"SetClearDepth",tolua_PX2_Camera_SetClearDepth00);
   tolua_function(tolua_S,"GetClearDepth",tolua_PX2_Camera_GetClearDepth00);
   tolua_function(tolua_S,"SetClearStencil",tolua_PX2_Camera_SetClearStencil00);
   tolua_function(tolua_S,"GetClearStencil",tolua_PX2_Camera_GetClearStencil00);
   tolua_function(tolua_S,"SetClearFlag",tolua_PX2_Camera_SetClearFlag00);
   tolua_function(tolua_S,"GetClearFlag",tolua_PX2_Camera_GetClearFlag00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CameraNode","CameraNode","Node",tolua_collect_CameraNode);
  #else
  tolua_cclass(tolua_S,"CameraNode","CameraNode","Node",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CameraNode");
   tolua_function(tolua_S,"new",tolua_PX2_CameraNode_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_CameraNode_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_CameraNode_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_CameraNode_delete00);
   tolua_function(tolua_S,"SetCamera",tolua_PX2_CameraNode_SetCamera00);
   tolua_function(tolua_S,"GetCamera",tolua_PX2_CameraNode_GetCamera00);
   tolua_function(tolua_S,"EnableUpdate",tolua_PX2_CameraNode_EnableUpdate00);
   tolua_function(tolua_S,"IsEnableUpdate",tolua_PX2_CameraNode_IsEnableUpdate00);
   tolua_function(tolua_S,"LookAt",tolua_PX2_CameraNode_LookAt00);
   tolua_function(tolua_S,"LookAt",tolua_PX2_CameraNode_LookAt01);
   tolua_function(tolua_S,"LookAt",tolua_PX2_CameraNode_LookAt02);
   tolua_function(tolua_S,"LookAt",tolua_PX2_CameraNode_LookAt03);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Renderer","Renderer","",NULL);
  tolua_beginmodule(tolua_S,"Renderer");
   tolua_function(tolua_S,"GetWidth",tolua_PX2_Renderer_GetWidth00);
   tolua_function(tolua_S,"GetHeight",tolua_PX2_Renderer_GetHeight00);
   tolua_function(tolua_S,"GetNumMultisamples",tolua_PX2_Renderer_GetNumMultisamples00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Canvas","Canvas","SizeNode",tolua_collect_Canvas);
  #else
  tolua_cclass(tolua_S,"Canvas","Canvas","SizeNode",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Canvas");
   tolua_function(tolua_S,"new",tolua_PX2_Canvas_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Canvas_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Canvas_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Canvas_delete00);
   tolua_function(tolua_S,"New",tolua_PX2_Canvas_New00);
   tolua_function(tolua_S,"New",tolua_PX2_Canvas_New01);
   tolua_function(tolua_S,"CreateUICameraNode",tolua_PX2_Canvas_CreateUICameraNode00);
   tolua_function(tolua_S,"GetUICameraNode",tolua_PX2_Canvas_GetUICameraNode00);
   tolua_function(tolua_S,"SetClearColor",tolua_PX2_Canvas_SetClearColor00);
   tolua_function(tolua_S,"GetClearColor",tolua_PX2_Canvas_GetClearColor00);
   tolua_function(tolua_S,"SetClearDepth",tolua_PX2_Canvas_SetClearDepth00);
   tolua_function(tolua_S,"GetClearDepth",tolua_PX2_Canvas_GetClearDepth00);
   tolua_function(tolua_S,"SetClearStencil",tolua_PX2_Canvas_SetClearStencil00);
   tolua_function(tolua_S,"GetClearStencil",tolua_PX2_Canvas_GetClearStencil00);
   tolua_function(tolua_S,"SetClearFlag",tolua_PX2_Canvas_SetClearFlag00);
   tolua_function(tolua_S,"GetClearFlag",tolua_PX2_Canvas_GetClearFlag00);
   tolua_function(tolua_S,"SetOverWireframe",tolua_PX2_Canvas_SetOverWireframe00);
   tolua_function(tolua_S,"IsOverWireframe",tolua_PX2_Canvas_IsOverWireframe00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"TexPackElement","TexPackElement","",tolua_collect_TexPackElement);
  #else
  tolua_cclass(tolua_S,"TexPackElement","TexPackElement","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"TexPackElement");
   tolua_function(tolua_S,"new",tolua_PX2_TexPackElement_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_TexPackElement_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_TexPackElement_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_TexPackElement_delete00);
   tolua_function(tolua_S,"IsValid",tolua_PX2_TexPackElement_IsValid00);
   tolua_variable(tolua_S,"X",tolua_get_TexPackElement_X,tolua_set_TexPackElement_X);
   tolua_variable(tolua_S,"Y",tolua_get_TexPackElement_Y,tolua_set_TexPackElement_Y);
   tolua_variable(tolua_S,"W",tolua_get_TexPackElement_W,tolua_set_TexPackElement_W);
   tolua_variable(tolua_S,"H",tolua_get_TexPackElement_H,tolua_set_TexPackElement_H);
   tolua_variable(tolua_S,"OX",tolua_get_TexPackElement_OX,tolua_set_TexPackElement_OX);
   tolua_variable(tolua_S,"OY",tolua_get_TexPackElement_OY,tolua_set_TexPackElement_OY);
   tolua_variable(tolua_S,"OW",tolua_get_TexPackElement_OW,tolua_set_TexPackElement_OW);
   tolua_variable(tolua_S,"OH",tolua_get_TexPackElement_OH,tolua_set_TexPackElement_OH);
   tolua_variable(tolua_S,"Rolated",tolua_get_TexPackElement_Rolated,tolua_set_TexPackElement_Rolated);
   tolua_variable(tolua_S,"TexWidth",tolua_get_TexPackElement_TexWidth,tolua_set_TexPackElement_TexWidth);
   tolua_variable(tolua_S,"TexHeight",tolua_get_TexPackElement_TexHeight,tolua_set_TexPackElement_TexHeight);
   tolua_variable(tolua_S,"ElementName",tolua_get_TexPackElement_ElementName,tolua_set_TexPackElement_ElementName);
   tolua_variable(tolua_S,"ImagePathFull",tolua_get_TexPackElement_ImagePathFull,tolua_set_TexPackElement_ImagePathFull);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"TexPack","TexPack","",tolua_collect_TexPack);
  #else
  tolua_cclass(tolua_S,"TexPack","TexPack","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"TexPack");
   tolua_function(tolua_S,"new",tolua_PX2_TexPack_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_TexPack_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_TexPack_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_TexPack_delete00);
   tolua_function(tolua_S,"IsValid",tolua_PX2_TexPack_IsValid00);
   tolua_variable(tolua_S,"ImageFullPath",tolua_get_TexPack_ImageFullPath,tolua_set_TexPack_ImageFullPath);
   tolua_variable(tolua_S,"ImagePath",tolua_get_TexPack_ImagePath,tolua_set_TexPack_ImagePath);
   tolua_variable(tolua_S,"Width",tolua_get_TexPack_Width,tolua_set_TexPack_Width);
   tolua_variable(tolua_S,"Height",tolua_get_TexPack_Height,tolua_set_TexPack_Height);
   tolua_variable(tolua_S,"IsHasUpdate",tolua_get_TexPack_IsHasUpdate,tolua_set_TexPack_IsHasUpdate);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Animation","Animation","Object",NULL);
  tolua_beginmodule(tolua_S,"Animation");
   tolua_constant(tolua_S,"AT_2DFRAMES",Animation::AT_2DFRAMES);
   tolua_constant(tolua_S,"AT_2DSKELETON",Animation::AT_2DSKELETON);
   tolua_constant(tolua_S,"AT_3DSKELETON",Animation::AT_3DSKELETON);
   tolua_constant(tolua_S,"AT_MAX_TYPE",Animation::AT_MAX_TYPE);
   tolua_function(tolua_S,"GetAnimType",tolua_PX2_Animation_GetAnimType00);
   tolua_function(tolua_S,"SetFilename",tolua_PX2_Animation_SetFilename00);
   tolua_function(tolua_S,"GetFilename",tolua_PX2_Animation_GetFilename00);
   tolua_function(tolua_S,"SetNormalTime",tolua_PX2_Animation_SetNormalTime00);
   tolua_function(tolua_S,"GetNormalTime",tolua_PX2_Animation_GetNormalTime00);
   tolua_function(tolua_S,"SetTime",tolua_PX2_Animation_SetTime00);
   tolua_function(tolua_S,"GetTime",tolua_PX2_Animation_GetTime00);
   tolua_function(tolua_S,"SetFrequency",tolua_PX2_Animation_SetFrequency00);
   tolua_function(tolua_S,"GetFrequency",tolua_PX2_Animation_GetFrequency00);
   tolua_function(tolua_S,"SetPlayOnce",tolua_PX2_Animation_SetPlayOnce00);
   tolua_function(tolua_S,"IsPlayOnce",tolua_PX2_Animation_IsPlayOnce00);
   tolua_function(tolua_S,"SetPlayedKeepPlaying",tolua_PX2_Animation_SetPlayedKeepPlaying00);
   tolua_function(tolua_S,"IsPlayedKeepPlaying",tolua_PX2_Animation_IsPlayedKeepPlaying00);
   tolua_function(tolua_S,"SetUseBlend",tolua_PX2_Animation_SetUseBlend00);
   tolua_function(tolua_S,"IsUseBlend",tolua_PX2_Animation_IsUseBlend00);
   tolua_function(tolua_S,"LetCharacterPlay",tolua_PX2_Animation_LetCharacterPlay00);
   tolua_function(tolua_S,"IsPlaying",tolua_PX2_Animation_IsPlaying00);
   tolua_function(tolua_S,"Stop",tolua_PX2_Animation_Stop00);
   tolua_function(tolua_S,"GetCharacter",tolua_PX2_Animation_GetCharacter00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"AnimationFrames","AnimationFrames","Animation",tolua_collect_AnimationFrames);
  #else
  tolua_cclass(tolua_S,"AnimationFrames","AnimationFrames","Animation",NULL);
  #endif
  tolua_beginmodule(tolua_S,"AnimationFrames");
   tolua_function(tolua_S,"new",tolua_PX2_AnimationFrames_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_AnimationFrames_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_AnimationFrames_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_AnimationFrames_delete00);
   tolua_function(tolua_S,"New",tolua_PX2_AnimationFrames_New00);
   tolua_function(tolua_S,"New",tolua_PX2_AnimationFrames_New01);
   tolua_function(tolua_S,"SetFilename",tolua_PX2_AnimationFrames_SetFilename00);
   tolua_function(tolua_S,"SetPlayOnce",tolua_PX2_AnimationFrames_SetPlayOnce00);
   tolua_function(tolua_S,"IsPlaying",tolua_PX2_AnimationFrames_IsPlaying00);
   tolua_function(tolua_S,"Stop",tolua_PX2_AnimationFrames_Stop00);
   tolua_function(tolua_S,"SetWorldRunDir",tolua_PX2_AnimationFrames_SetWorldRunDir00);
   tolua_function(tolua_S,"GetWorldRunDir",tolua_PX2_AnimationFrames_GetWorldRunDir00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Animation3DSkeleton","Animation3DSkeleton","Animation",tolua_collect_Animation3DSkeleton);
  #else
  tolua_cclass(tolua_S,"Animation3DSkeleton","Animation3DSkeleton","Animation",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Animation3DSkeleton");
   tolua_function(tolua_S,"new",tolua_PX2_Animation3DSkeleton_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Animation3DSkeleton_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Animation3DSkeleton_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Animation3DSkeleton_delete00);
   tolua_function(tolua_S,"New",tolua_PX2_Animation3DSkeleton_New00);
   tolua_function(tolua_S,"New",tolua_PX2_Animation3DSkeleton_New01);
   tolua_function(tolua_S,"SetFilename",tolua_PX2_Animation3DSkeleton_SetFilename00);
   tolua_function(tolua_S,"SetFrequency",tolua_PX2_Animation3DSkeleton_SetFrequency00);
   tolua_function(tolua_S,"SetPlayOnce",tolua_PX2_Animation3DSkeleton_SetPlayOnce00);
   tolua_function(tolua_S,"SetMovingScale",tolua_PX2_Animation3DSkeleton_SetMovingScale00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ModelController","ModelController","Controller",tolua_collect_ModelController);
  #else
  tolua_cclass(tolua_S,"ModelController","ModelController","Controller",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ModelController");
   tolua_function(tolua_S,"new",tolua_PX2_ModelController_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_ModelController_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_ModelController_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_ModelController_delete00);
   tolua_function(tolua_S,"New",tolua_PX2_ModelController_New00);
   tolua_function(tolua_S,"New",tolua_PX2_ModelController_New01);
   tolua_function(tolua_S,"SetMovableFilename",tolua_PX2_ModelController_SetMovableFilename00);
   tolua_function(tolua_S,"GetMovableFilename",tolua_PX2_ModelController_GetMovableFilename00);
   tolua_function(tolua_S,"IsShareVI",tolua_PX2_ModelController_IsShareVI00);
   tolua_function(tolua_S,"SetMovable",tolua_PX2_ModelController_SetMovable00);
   tolua_function(tolua_S,"GetMovable",tolua_PX2_ModelController_GetMovable00);
   tolua_function(tolua_S,"SetHeading",tolua_PX2_ModelController_SetHeading00);
   tolua_function(tolua_S,"GetHeading",tolua_PX2_ModelController_GetHeading00);
   tolua_function(tolua_S,"SetMovableUseAutoWorldBound",tolua_PX2_ModelController_SetMovableUseAutoWorldBound00);
   tolua_function(tolua_S,"IsMovableUseAutoWorldBound",tolua_PX2_ModelController_IsMovableUseAutoWorldBound00);
   tolua_function(tolua_S,"SetMovableAutoWorldBoundRadius",tolua_PX2_ModelController_SetMovableAutoWorldBoundRadius00);
   tolua_function(tolua_S,"GetMovableAutoWorldBoundRadius",tolua_PX2_ModelController_GetMovableAutoWorldBoundRadius00);
   tolua_function(tolua_S,"CollectAnchors",tolua_PX2_ModelController_CollectAnchors00);
   tolua_function(tolua_S,"GetAnchorPos",tolua_PX2_ModelController_GetAnchorPos00);
   tolua_function(tolua_S,"GetAnchor",tolua_PX2_ModelController_GetAnchor00);
   tolua_constant(tolua_S,"AT_NONE",ModelController::AT_NONE);
   tolua_constant(tolua_S,"AT_FRAMES",ModelController::AT_FRAMES);
   tolua_constant(tolua_S,"AT_SKELETON",ModelController::AT_SKELETON);
   tolua_constant(tolua_S,"AT_MAX_TYPE",ModelController::AT_MAX_TYPE);
   tolua_function(tolua_S,"SetAnimType",tolua_PX2_ModelController_SetAnimType00);
   tolua_function(tolua_S,"GetAnimType",tolua_PX2_ModelController_GetAnimType00);
   tolua_function(tolua_S,"AddAnim",tolua_PX2_ModelController_AddAnim00);
   tolua_function(tolua_S,"HasAnim",tolua_PX2_ModelController_HasAnim00);
   tolua_function(tolua_S,"HasAnim",tolua_PX2_ModelController_HasAnim01);
   tolua_function(tolua_S,"RemoveAnim",tolua_PX2_ModelController_RemoveAnim00);
   tolua_function(tolua_S,"RemoveAnim",tolua_PX2_ModelController_RemoveAnim01);
   tolua_function(tolua_S,"RemoveAllAnims",tolua_PX2_ModelController_RemoveAllAnims00);
   tolua_function(tolua_S,"GetNumAnims",tolua_PX2_ModelController_GetNumAnims00);
   tolua_function(tolua_S,"GetAnimsMap",tolua_PX2_ModelController_GetAnimsMap00);
   tolua_function(tolua_S,"GetAnimByName",tolua_PX2_ModelController_GetAnimByName00);
   tolua_function(tolua_S,"SetDefaultAnim",tolua_PX2_ModelController_SetDefaultAnim00);
   tolua_function(tolua_S,"GetDefaultAnimName",tolua_PX2_ModelController_GetDefaultAnimName00);
   tolua_function(tolua_S,"GetDefaultAnim",tolua_PX2_ModelController_GetDefaultAnim00);
   tolua_function(tolua_S,"PlayAnim",tolua_PX2_ModelController_PlayAnim00);
   tolua_function(tolua_S,"PlayAnimByName",tolua_PX2_ModelController_PlayAnimByName00);
   tolua_function(tolua_S,"StopAnim",tolua_PX2_ModelController_StopAnim00);
   tolua_function(tolua_S,"StopCurAnim",tolua_PX2_ModelController_StopCurAnim00);
   tolua_function(tolua_S,"PlayCurAnim",tolua_PX2_ModelController_PlayCurAnim00);
   tolua_function(tolua_S,"GetCurPlayingAnim",tolua_PX2_ModelController_GetCurPlayingAnim00);
   tolua_function(tolua_S,"IsHasAnimPlaying",tolua_PX2_ModelController_IsHasAnimPlaying00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"RenderWindow","RenderWindow","Object",tolua_collect_RenderWindow);
  #else
  tolua_cclass(tolua_S,"RenderWindow","RenderWindow","Object",NULL);
  #endif
  tolua_beginmodule(tolua_S,"RenderWindow");
   tolua_function(tolua_S,"new",tolua_PX2_RenderWindow_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_RenderWindow_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_RenderWindow_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_RenderWindow_delete00);
   tolua_function(tolua_S,"GetWindowHandle",tolua_PX2_RenderWindow_GetWindowHandle00);
   tolua_function(tolua_S,"IsMain",tolua_PX2_RenderWindow_IsMain00);
   tolua_function(tolua_S,"SetTitle",tolua_PX2_RenderWindow_SetTitle00);
   tolua_function(tolua_S,"GetTitle",tolua_PX2_RenderWindow_GetTitle00);
   tolua_function(tolua_S,"SetFloat",tolua_PX2_RenderWindow_SetFloat00);
   tolua_function(tolua_S,"IsFloat",tolua_PX2_RenderWindow_IsFloat00);
   tolua_function(tolua_S,"Centre",tolua_PX2_RenderWindow_Centre00);
   tolua_function(tolua_S,"SetPosition",tolua_PX2_RenderWindow_SetPosition00);
   tolua_function(tolua_S,"GetPosition",tolua_PX2_RenderWindow_GetPosition00);
   tolua_function(tolua_S,"SetScreenSize",tolua_PX2_RenderWindow_SetScreenSize00);
   tolua_function(tolua_S,"GetScreenSize",tolua_PX2_RenderWindow_GetScreenSize00);
   tolua_function(tolua_S,"MaxSize",tolua_PX2_RenderWindow_MaxSize00);
   tolua_function(tolua_S,"IsMaxSize",tolua_PX2_RenderWindow_IsMaxSize00);
   tolua_function(tolua_S,"Show",tolua_PX2_RenderWindow_Show00);
   tolua_function(tolua_S,"IsShow",tolua_PX2_RenderWindow_IsShow00);
   tolua_function(tolua_S,"ShowCursor",tolua_PX2_RenderWindow_ShowCursor00);
   tolua_function(tolua_S,"IsShowCursor",tolua_PX2_RenderWindow_IsShowCursor00);
   tolua_function(tolua_S,"CaptureMouse",tolua_PX2_RenderWindow_CaptureMouse00);
   tolua_function(tolua_S,"IsCaptureMouse",tolua_PX2_RenderWindow_IsCaptureMouse00);
   tolua_function(tolua_S,"GetParentRenderWindow",tolua_PX2_RenderWindow_GetParentRenderWindow00);
   tolua_function(tolua_S,"GetMainCanvas",tolua_PX2_RenderWindow_GetMainCanvas00);
   tolua_function(tolua_S,"GetEngineCanvas",tolua_PX2_RenderWindow_GetEngineCanvas00);
   tolua_constant(tolua_S,"CT_CURSOR_NONE",RenderWindow::CT_CURSOR_NONE);
   tolua_constant(tolua_S,"CT_CURSOR_ARROW",RenderWindow::CT_CURSOR_ARROW);
   tolua_constant(tolua_S,"CT_CURSOR_RIGHT_ARROW",RenderWindow::CT_CURSOR_RIGHT_ARROW);
   tolua_constant(tolua_S,"CT_CURSOR_BULLSEYE",RenderWindow::CT_CURSOR_BULLSEYE);
   tolua_constant(tolua_S,"CT_CURSOR_CHAR",RenderWindow::CT_CURSOR_CHAR);
   tolua_constant(tolua_S,"CT_CURSOR_CROSS",RenderWindow::CT_CURSOR_CROSS);
   tolua_constant(tolua_S,"CT_CURSOR_HAND",RenderWindow::CT_CURSOR_HAND);
   tolua_constant(tolua_S,"CT_CURSOR_IBEAM",RenderWindow::CT_CURSOR_IBEAM);
   tolua_constant(tolua_S,"CT_CURSOR_LEFT_BUTTON",RenderWindow::CT_CURSOR_LEFT_BUTTON);
   tolua_constant(tolua_S,"CT_CURSOR_MAGNIFIER",RenderWindow::CT_CURSOR_MAGNIFIER);
   tolua_constant(tolua_S,"CT_CURSOR_MIDDLE_BUTTON",RenderWindow::CT_CURSOR_MIDDLE_BUTTON);
   tolua_constant(tolua_S,"CT_CURSOR_NO_ENTRY",RenderWindow::CT_CURSOR_NO_ENTRY);
   tolua_constant(tolua_S,"CT_CURSOR_PAINT_BRUSH",RenderWindow::CT_CURSOR_PAINT_BRUSH);
   tolua_constant(tolua_S,"CT_CURSOR_PENCIL",RenderWindow::CT_CURSOR_PENCIL);
   tolua_constant(tolua_S,"CT_CURSOR_POINT_LEFT",RenderWindow::CT_CURSOR_POINT_LEFT);
   tolua_constant(tolua_S,"CT_CURSOR_POINT_RIGHT",RenderWindow::CT_CURSOR_POINT_RIGHT);
   tolua_constant(tolua_S,"CT_CURSOR_QUESTION_ARROW",RenderWindow::CT_CURSOR_QUESTION_ARROW);
   tolua_constant(tolua_S,"CT_CURSOR_RIGHT_BUTTON",RenderWindow::CT_CURSOR_RIGHT_BUTTON);
   tolua_constant(tolua_S,"CT_CURSOR_SIZENESW",RenderWindow::CT_CURSOR_SIZENESW);
   tolua_constant(tolua_S,"CT_CURSOR_SIZENS",RenderWindow::CT_CURSOR_SIZENS);
   tolua_constant(tolua_S,"CT_CURSOR_SIZENWSE",RenderWindow::CT_CURSOR_SIZENWSE);
   tolua_constant(tolua_S,"CT_CURSOR_SIZEWE",RenderWindow::CT_CURSOR_SIZEWE);
   tolua_constant(tolua_S,"CT_CURSOR_SIZING",RenderWindow::CT_CURSOR_SIZING);
   tolua_constant(tolua_S,"CT_CURSOR_SPRAYCAN",RenderWindow::CT_CURSOR_SPRAYCAN);
   tolua_constant(tolua_S,"CT_CURSOR_WAIT",RenderWindow::CT_CURSOR_WAIT);
   tolua_constant(tolua_S,"CT_CURSOR_WATCH",RenderWindow::CT_CURSOR_WATCH);
   tolua_constant(tolua_S,"CT_CURSOR_BLANK",RenderWindow::CT_CURSOR_BLANK);
   tolua_constant(tolua_S,"CT_CURSOR_MAX_TYPE",RenderWindow::CT_CURSOR_MAX_TYPE);
   tolua_function(tolua_S,"SetCursorType",tolua_PX2_RenderWindow_SetCursorType00);
   tolua_function(tolua_S,"GetCursorType",tolua_PX2_RenderWindow_GetCursorType00);
   tolua_function(tolua_S,"SetCursorPos",tolua_PX2_RenderWindow_SetCursorPos00);
   tolua_function(tolua_S,"GetCursorPos",tolua_PX2_RenderWindow_GetCursorPos00);
   tolua_function(tolua_S,"GetDeskScreenSize",tolua_PX2_RenderWindow_GetDeskScreenSize00);
   tolua_constant(tolua_S,"SDT_NONE",RenderWindow::SDT_NONE);
   tolua_constant(tolua_S,"SDT_LEFT",RenderWindow::SDT_LEFT);
   tolua_constant(tolua_S,"SDT_MIDDLE",RenderWindow::SDT_MIDDLE);
   tolua_constant(tolua_S,"SDT_RIGHT",RenderWindow::SDT_RIGHT);
   tolua_constant(tolua_S,"SDT_MAX_TYPE",RenderWindow::SDT_MAX_TYPE);
   tolua_function(tolua_S,"SetScreenDragType",tolua_PX2_RenderWindow_SetScreenDragType00);
   tolua_function(tolua_S,"GetScreenDragType",tolua_PX2_RenderWindow_GetScreenDragType00);
   tolua_function(tolua_S,"IsScreenDrag",tolua_PX2_RenderWindow_IsScreenDrag00);
   tolua_function(tolua_S,"IsMouseDown",tolua_PX2_RenderWindow_IsMouseDown00);
   tolua_function(tolua_S,"GetCurCursorPos",tolua_PX2_RenderWindow_GetCurCursorPos00);
   tolua_function(tolua_S,"GetLastCursorPos",tolua_PX2_RenderWindow_GetLastCursorPos00);
   tolua_function(tolua_S,"GetMoveDelta",tolua_PX2_RenderWindow_GetMoveDelta00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"GraphicsRoot","GraphicsRoot","",NULL);
  tolua_beginmodule(tolua_S,"GraphicsRoot");
   tolua_function(tolua_S,"SetInEditor",tolua_PX2_GraphicsRoot_SetInEditor00);
   tolua_function(tolua_S,"IsInEditor",tolua_PX2_GraphicsRoot_IsInEditor00);
   tolua_function(tolua_S,"SetUIShareDraw",tolua_PX2_GraphicsRoot_SetUIShareDraw00);
   tolua_function(tolua_S,"IsUIShareDraw",tolua_PX2_GraphicsRoot_IsUIShareDraw00);
   tolua_function(tolua_S,"AddRenderWindow",tolua_PX2_GraphicsRoot_AddRenderWindow00);
   tolua_function(tolua_S,"IsHasRenderWindow",tolua_PX2_GraphicsRoot_IsHasRenderWindow00);
   tolua_function(tolua_S,"RemoveRenderWindow",tolua_PX2_GraphicsRoot_RemoveRenderWindow00);
   tolua_function(tolua_S,"GetRenderWindow",tolua_PX2_GraphicsRoot_GetRenderWindow00);
   tolua_function(tolua_S,"GetMainWindow",tolua_PX2_GraphicsRoot_GetMainWindow00);
   tolua_constant(tolua_S,"PT_NONE",GraphicsRoot::PT_NONE);
   tolua_constant(tolua_S,"PT_SIMULATE",GraphicsRoot::PT_SIMULATE);
   tolua_constant(tolua_S,"PT_PLAY",GraphicsRoot::PT_PLAY);
   tolua_constant(tolua_S,"PT_MAX_TYPE",GraphicsRoot::PT_MAX_TYPE);
   tolua_function(tolua_S,"GetPlayType",tolua_PX2_GraphicsRoot_GetPlayType00);
   tolua_constant(tolua_S,"VFT_P",GraphicsRoot::VFT_P);
   tolua_constant(tolua_S,"VFT_PC",GraphicsRoot::VFT_PC);
   tolua_constant(tolua_S,"VFT_PT1",GraphicsRoot::VFT_PT1);
   tolua_constant(tolua_S,"VFT_PT2",GraphicsRoot::VFT_PT2);
   tolua_constant(tolua_S,"VFT_PCT1",GraphicsRoot::VFT_PCT1);
   tolua_constant(tolua_S,"VFT_PCT2",GraphicsRoot::VFT_PCT2);
   tolua_constant(tolua_S,"VFT_PN",GraphicsRoot::VFT_PN);
   tolua_constant(tolua_S,"VFT_PNT1",GraphicsRoot::VFT_PNT1);
   tolua_constant(tolua_S,"VFT_PNT2",GraphicsRoot::VFT_PNT2);
   tolua_constant(tolua_S,"VFT_PCN",GraphicsRoot::VFT_PCN);
   tolua_constant(tolua_S,"VFT_PCNT1",GraphicsRoot::VFT_PCNT1);
   tolua_constant(tolua_S,"VFT_PCNT2",GraphicsRoot::VFT_PCNT2);
   tolua_constant(tolua_S,"VFT_PNT1TB",GraphicsRoot::VFT_PNT1TB);
   tolua_constant(tolua_S,"VFT_MAX_TYPE",GraphicsRoot::VFT_MAX_TYPE);
   tolua_function(tolua_S,"GetVertexFormat",tolua_PX2_GraphicsRoot_GetVertexFormat00);
   tolua_function(tolua_S,"GetXYPlane",tolua_PX2_GraphicsRoot_GetXYPlane00);
   tolua_function(tolua_S,"GetXZPlane",tolua_PX2_GraphicsRoot_GetXZPlane00);
   tolua_function(tolua_S,"GetYZPlane",tolua_PX2_GraphicsRoot_GetYZPlane00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"ResourceManager","ResourceManager","",NULL);
  tolua_beginmodule(tolua_S,"ResourceManager");
   tolua_constant(tolua_S,"LS_UNLOADED",ResourceManager::LS_UNLOADED);
   tolua_constant(tolua_S,"LS_LOADQUE",ResourceManager::LS_LOADQUE);
   tolua_constant(tolua_S,"LS_LOADING",ResourceManager::LS_LOADING);
   tolua_constant(tolua_S,"LS_LOADED",ResourceManager::LS_LOADED);
   tolua_constant(tolua_S,"LS_MAX_STATE",ResourceManager::LS_MAX_STATE);
   tolua_function(tolua_S,"Clear",tolua_PX2_ResourceManager_Clear00);
   tolua_function(tolua_S,"ClearRes",tolua_PX2_ResourceManager_ClearRes00);
   tolua_function(tolua_S,"BlockLoad",tolua_PX2_ResourceManager_BlockLoad00);
   tolua_function(tolua_S,"BlockLoadCopy",tolua_PX2_ResourceManager_BlockLoadCopy00);
   tolua_function(tolua_S,"BlockLoadShareCopy",tolua_PX2_ResourceManager_BlockLoadShareCopy00);
   tolua_function(tolua_S,"LoadBuffer",tolua_PX2_ResourceManager_LoadBuffer00);
   tolua_function(tolua_S,"ShareCopyVB_IB",tolua_PX2_ResourceManager_ShareCopyVB_IB00);
   tolua_function(tolua_S,"ShareCopyVB_IB_MI",tolua_PX2_ResourceManager_ShareCopyVB_IB_MI00);
   tolua_function(tolua_S,"ShareCopyMI",tolua_PX2_ResourceManager_ShareCopyMI00);
   tolua_function(tolua_S,"ShareCopy",tolua_PX2_ResourceManager_ShareCopy00);
   tolua_function(tolua_S,"Dump",tolua_PX2_ResourceManager_Dump00);
   tolua_function(tolua_S,"BeginDumpDiff",tolua_PX2_ResourceManager_BeginDumpDiff00);
   tolua_function(tolua_S,"EndDumpDiff",tolua_PX2_ResourceManager_EndDumpDiff00);
   tolua_function(tolua_S,"SetUseGarbageCollect",tolua_PX2_ResourceManager_SetUseGarbageCollect00);
   tolua_function(tolua_S,"IsUseGarbageCollect",tolua_PX2_ResourceManager_IsUseGarbageCollect00);
   tolua_function(tolua_S,"SetGarbageCollectTime",tolua_PX2_ResourceManager_SetGarbageCollectTime00);
   tolua_function(tolua_S,"GetGarbageCollectTime",tolua_PX2_ResourceManager_GetGarbageCollectTime00);
   tolua_function(tolua_S,"CreateFloder",tolua_PX2_ResourceManager_CreateFloder00);
   tolua_function(tolua_S,"IsFileFloderExist",tolua_PX2_ResourceManager_IsFileFloderExist00);
   tolua_function(tolua_S,"IsTexPack",tolua_PX2_ResourceManager_IsTexPack00);
   tolua_function(tolua_S,"AddTexPack",tolua_PX2_ResourceManager_AddTexPack00);
   tolua_function(tolua_S,"GetTexPack",tolua_PX2_ResourceManager_GetTexPack00);
   tolua_function(tolua_S,"GetTexPackElement",tolua_PX2_ResourceManager_GetTexPackElement00);
   tolua_function(tolua_S,"GetWriteablePath",tolua_PX2_ResourceManager_GetWriteablePath00);
   tolua_function(tolua_S,"GetResourcePath",tolua_PX2_ResourceManager_GetResourcePath00);
   tolua_function(tolua_S,"SaveTex2DPNG",tolua_PX2_ResourceManager_SaveTex2DPNG00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"LanguagePackage","LanguagePackage","",tolua_collect_LanguagePackage);
  #else
  tolua_cclass(tolua_S,"LanguagePackage","LanguagePackage","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"LanguagePackage");
   tolua_function(tolua_S,"new",tolua_PX2_LanguagePackage_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_LanguagePackage_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_LanguagePackage_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_LanguagePackage_delete00);
   tolua_function(tolua_S,"Load",tolua_PX2_LanguagePackage_Load00);
   tolua_function(tolua_S,"Add",tolua_PX2_LanguagePackage_Add00);
   tolua_function(tolua_S,"AddItem",tolua_PX2_LanguagePackage_AddItem00);
   tolua_function(tolua_S,"AddItem1",tolua_PX2_LanguagePackage_AddItem100);
   tolua_function(tolua_S,"SetLanguage",tolua_PX2_LanguagePackage_SetLanguage00);
   tolua_function(tolua_S,"HasValue",tolua_PX2_LanguagePackage_HasValue00);
   tolua_function(tolua_S,"GetValue",tolua_PX2_LanguagePackage_GetValue00);
   tolua_function(tolua_S,"GetValue",tolua_PX2_LanguagePackage_GetValue01);
   tolua_function(tolua_S,"V",tolua_PX2_LanguagePackage_V00);
   tolua_function(tolua_S,"V",tolua_PX2_LanguagePackage_V01);
   tolua_function(tolua_S,"Clear",tolua_PX2_LanguagePackage_Clear00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"LanguageManager","LanguageManager","",tolua_collect_LanguageManager);
  #else
  tolua_cclass(tolua_S,"LanguageManager","LanguageManager","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"LanguageManager");
   tolua_function(tolua_S,"new",tolua_PX2_LanguageManager_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_LanguageManager_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_LanguageManager_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_LanguageManager_delete00);
   tolua_function(tolua_S,"GetPackageEditor",tolua_PX2_LanguageManager_GetPackageEditor00);
   tolua_function(tolua_S,"GetPackageApp",tolua_PX2_LanguageManager_GetPackageApp00);
   tolua_function(tolua_S,"GetPackageApp1",tolua_PX2_LanguageManager_GetPackageApp100);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ScriptContext","ScriptContext","RefObject",tolua_collect_ScriptContext);
  #else
  tolua_cclass(tolua_S,"ScriptContext","ScriptContext","RefObject",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ScriptContext");
   tolua_constant(tolua_S,"CT_NONE",ScriptContext::CT_NONE);
   tolua_constant(tolua_S,"CT_LUA",ScriptContext::CT_LUA);
   tolua_constant(tolua_S,"CT_MAX_TYPE",ScriptContext::CT_MAX_TYPE);
   tolua_function(tolua_S,"delete",tolua_PX2_ScriptContext_delete00);
   tolua_function(tolua_S,"CallString",tolua_PX2_ScriptContext_CallString00);
   tolua_function(tolua_S,"CallFile",tolua_PX2_ScriptContext_CallFile00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"LuaContext","LuaContext","ScriptContext",tolua_collect_LuaContext);
  #else
  tolua_cclass(tolua_S,"LuaContext","LuaContext","ScriptContext",NULL);
  #endif
  tolua_beginmodule(tolua_S,"LuaContext");
   tolua_function(tolua_S,"delete",tolua_PX2_LuaContext_delete00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"ScriptManager","ScriptManager","",NULL);
  tolua_beginmodule(tolua_S,"ScriptManager");
   tolua_function(tolua_S,"GetContext",tolua_PX2_ScriptManager_GetContext00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ScriptController","ScriptController","Controller",tolua_collect_ScriptController);
  #else
  tolua_cclass(tolua_S,"ScriptController","ScriptController","Controller",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ScriptController");
   tolua_function(tolua_S,"new",tolua_PX2_ScriptController_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_ScriptController_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_ScriptController_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_ScriptController_delete00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"LuaScriptController","LuaScriptController","ScriptController",tolua_collect_LuaScriptController);
  #else
  tolua_cclass(tolua_S,"LuaScriptController","LuaScriptController","ScriptController",NULL);
  #endif
  tolua_beginmodule(tolua_S,"LuaScriptController");
   tolua_function(tolua_S,"new",tolua_PX2_LuaScriptController_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_LuaScriptController_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_LuaScriptController_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_LuaScriptController_delete00);
   tolua_function(tolua_S,"SelfP",tolua_PX2_LuaScriptController_SelfP00);
   tolua_function(tolua_S,"SetVal",tolua_PX2_LuaScriptController_SetVal00);
   tolua_function(tolua_S,"SetVal",tolua_PX2_LuaScriptController_SetVal01);
   tolua_function(tolua_S,"SetVal",tolua_PX2_LuaScriptController_SetVal02);
   tolua_function(tolua_S,"SetVal",tolua_PX2_LuaScriptController_SetVal03);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Selection","Selection","",tolua_collect_Selection);
  #else
  tolua_cclass(tolua_S,"Selection","Selection","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Selection");
   tolua_function(tolua_S,"new",tolua_PX2_Selection_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Selection_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Selection_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Selection_delete00);
   tolua_function(tolua_S,"AddObject",tolua_PX2_Selection_AddObject00);
   tolua_function(tolua_S,"RemoveObject",tolua_PX2_Selection_RemoveObject00);
   tolua_function(tolua_S,"GetObjectAt",tolua_PX2_Selection_GetObjectAt00);
   tolua_function(tolua_S,"GetNumObjects",tolua_PX2_Selection_GetNumObjects00);
   tolua_function(tolua_S,"IsObjectIn",tolua_PX2_Selection_IsObjectIn00);
   tolua_function(tolua_S,"Clear",tolua_PX2_Selection_Clear00);
   tolua_function(tolua_S,"GetFirstObject",tolua_PX2_Selection_GetFirstObject00);
   tolua_function(tolua_S,"Translate",tolua_PX2_Selection_Translate00);
   tolua_function(tolua_S,"TranslateTo",tolua_PX2_Selection_TranslateTo00);
   tolua_function(tolua_S,"AddRolate",tolua_PX2_Selection_AddRolate00);
   tolua_function(tolua_S,"AddScale",tolua_PX2_Selection_AddScale00);
   tolua_function(tolua_S,"GetCenter",tolua_PX2_Selection_GetCenter00);
   tolua_function(tolua_S,"GetRadius",tolua_PX2_Selection_GetRadius00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"SelectionManager","SelectionManager","",NULL);
  tolua_beginmodule(tolua_S,"SelectionManager");
   tolua_function(tolua_S,"Clear",tolua_PX2_SelectionManager_Clear00);
   tolua_function(tolua_S,"CreateAddSelection",tolua_PX2_SelectionManager_CreateAddSelection00);
   tolua_function(tolua_S,"DestorySelecton",tolua_PX2_SelectionManager_DestorySelecton00);
   tolua_function(tolua_S,"GetSelecton",tolua_PX2_SelectionManager_GetSelecton00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"GPIO","GPIO","",tolua_collect_GPIO);
  #else
  tolua_cclass(tolua_S,"GPIO","GPIO","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"GPIO");
   tolua_function(tolua_S,"new",tolua_PX2_GPIO_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_GPIO_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_GPIO_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_GPIO_delete00);
   tolua_function(tolua_S,"Export",tolua_PX2_GPIO_Export00);
   tolua_function(tolua_S,"Unexport",tolua_PX2_GPIO_Unexport00);
   tolua_function(tolua_S,"SetDriection",tolua_PX2_GPIO_SetDriection00);
   tolua_function(tolua_S,"SetValue",tolua_PX2_GPIO_SetValue00);
   tolua_function(tolua_S,"GetValue",tolua_PX2_GPIO_GetValue00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Bluetooth","Bluetooth","",NULL);
  tolua_beginmodule(tolua_S,"Bluetooth");
   tolua_function(tolua_S,"IsAvailable",tolua_PX2_Bluetooth_IsAvailable00);
   tolua_function(tolua_S,"IsConnected",tolua_PX2_Bluetooth_IsConnected00);
   tolua_function(tolua_S,"GetPairedDevices",tolua_PX2_Bluetooth_GetPairedDevices00);
   tolua_function(tolua_S,"DisConnect",tolua_PX2_Bluetooth_DisConnect00);
   tolua_function(tolua_S,"Connect",tolua_PX2_Bluetooth_Connect00);
   tolua_function(tolua_S,"Send",tolua_PX2_Bluetooth_Send00);
   tolua_function(tolua_S,"DoDiscovery",tolua_PX2_Bluetooth_DoDiscovery00);
   tolua_function(tolua_S,"CancelDiscovery",tolua_PX2_Bluetooth_CancelDiscovery00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Effectable","Effectable","TriMesh",tolua_collect_Effectable);
  #else
  tolua_cclass(tolua_S,"Effectable","Effectable","TriMesh",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Effectable");
   tolua_function(tolua_S,"delete",tolua_PX2_Effectable_delete00);
   tolua_function(tolua_S,"GetEffectableController",tolua_PX2_Effectable_GetEffectableController00);
   tolua_function(tolua_S,"SetFixedBound",tolua_PX2_Effectable_SetFixedBound00);
   tolua_function(tolua_S,"IsFixedBound",tolua_PX2_Effectable_IsFixedBound00);
   tolua_function(tolua_S,"SetFixedBoundCenter",tolua_PX2_Effectable_SetFixedBoundCenter00);
   tolua_function(tolua_S,"GetFixedBoundCenter",tolua_PX2_Effectable_GetFixedBoundCenter00);
   tolua_function(tolua_S,"SetFixedBoundRadius",tolua_PX2_Effectable_SetFixedBoundRadius00);
   tolua_function(tolua_S,"GetFixedBoundRadius",tolua_PX2_Effectable_GetFixedBoundRadius00);
   tolua_function(tolua_S,"SetLocal",tolua_PX2_Effectable_SetLocal00);
   tolua_function(tolua_S,"IsLocal",tolua_PX2_Effectable_IsLocal00);
   tolua_function(tolua_S,"SetEmitSizeX",tolua_PX2_Effectable_SetEmitSizeX00);
   tolua_function(tolua_S,"GetEmitSizeX",tolua_PX2_Effectable_GetEmitSizeX00);
   tolua_function(tolua_S,"SetEmitSizeY",tolua_PX2_Effectable_SetEmitSizeY00);
   tolua_function(tolua_S,"GetEmitSizeY",tolua_PX2_Effectable_GetEmitSizeY00);
   tolua_function(tolua_S,"SetEmitSizeZ",tolua_PX2_Effectable_SetEmitSizeZ00);
   tolua_function(tolua_S,"GetEmitSizeZ",tolua_PX2_Effectable_GetEmitSizeZ00);
   tolua_function(tolua_S,"SetEmitSizeXYZ",tolua_PX2_Effectable_SetEmitSizeXYZ00);
   tolua_function(tolua_S,"SetEmitColor",tolua_PX2_Effectable_SetEmitColor00);
   tolua_function(tolua_S,"GetEmitColor",tolua_PX2_Effectable_GetEmitColor00);
   tolua_function(tolua_S,"SetEmitAlpha",tolua_PX2_Effectable_SetEmitAlpha00);
   tolua_function(tolua_S,"GetEmitAlpha",tolua_PX2_Effectable_GetEmitAlpha00);
   tolua_function(tolua_S,"SetEmitLife",tolua_PX2_Effectable_SetEmitLife00);
   tolua_function(tolua_S,"GetEmitLife",tolua_PX2_Effectable_GetEmitLife00);
   tolua_constant(tolua_S,"FT_X",Effectable::FT_X);
   tolua_constant(tolua_S,"FT_NX",Effectable::FT_NX);
   tolua_constant(tolua_S,"FT_Y",Effectable::FT_Y);
   tolua_constant(tolua_S,"FT_NY",Effectable::FT_NY);
   tolua_constant(tolua_S,"FT_Z",Effectable::FT_Z);
   tolua_constant(tolua_S,"FT_NZ",Effectable::FT_NZ);
   tolua_constant(tolua_S,"FT_CAMERA",Effectable::FT_CAMERA);
   tolua_constant(tolua_S,"FT_SPEEDDIR",Effectable::FT_SPEEDDIR);
   tolua_constant(tolua_S,"FT_FREE",Effectable::FT_FREE);
   tolua_constant(tolua_S,"FT_CAMERA_ZUP",Effectable::FT_CAMERA_ZUP);
   tolua_constant(tolua_S,"FT_CAMERA_ALIGN_EMITDIR",Effectable::FT_CAMERA_ALIGN_EMITDIR);
   tolua_constant(tolua_S,"FT_MAX_TYPE",Effectable::FT_MAX_TYPE);
   tolua_function(tolua_S,"SetFaceType",tolua_PX2_Effectable_SetFaceType00);
   tolua_function(tolua_S,"GetFaceType",tolua_PX2_Effectable_GetFaceType00);
   tolua_constant(tolua_S,"MT_TEX",Effectable::MT_TEX);
   tolua_constant(tolua_S,"MT_TEX_MASK_MULTIPLY",Effectable::MT_TEX_MASK_MULTIPLY);
   tolua_constant(tolua_S,"MT_TEX_MASK_ADD",Effectable::MT_TEX_MASK_ADD);
   tolua_constant(tolua_S,"MT_MAX_TYPE",Effectable::MT_MAX_TYPE);
   tolua_function(tolua_S,"SetMaterialType",tolua_PX2_Effectable_SetMaterialType00);
   tolua_function(tolua_S,"GetMaterialType",tolua_PX2_Effectable_GetMaterialType00);
   tolua_function(tolua_S,"SetBackCull",tolua_PX2_Effectable_SetBackCull00);
   tolua_function(tolua_S,"IsBackCull",tolua_PX2_Effectable_IsBackCull00);
   tolua_constant(tolua_S,"BM_NONE",Effectable::BM_NONE);
   tolua_constant(tolua_S,"BM_ALPHATEST85",Effectable::BM_ALPHATEST85);
   tolua_constant(tolua_S,"BM_BLEND_SCRCALPHA_DSTONEMIUSSRCALPHA",Effectable::BM_BLEND_SCRCALPHA_DSTONEMIUSSRCALPHA);
   tolua_constant(tolua_S,"BM_BLEND_SRCALPHA_DSTONE",Effectable::BM_BLEND_SRCALPHA_DSTONE);
   tolua_constant(tolua_S,"BM_BLEND_SRCCOLOR_DSTONEMIUSSRCCOLOR",Effectable::BM_BLEND_SRCCOLOR_DSTONEMIUSSRCCOLOR);
   tolua_constant(tolua_S,"BM_BLEND_SRCCOLOR_DSTONE",Effectable::BM_BLEND_SRCCOLOR_DSTONE);
   tolua_constant(tolua_S,"BM_BLEND_SRCONE_DSTONE",Effectable::BM_BLEND_SRCONE_DSTONE);
   tolua_constant(tolua_S,"BM_BLEND_SRCONE_DSTONEMIUSSRCALPHA",Effectable::BM_BLEND_SRCONE_DSTONEMIUSSRCALPHA);
   tolua_constant(tolua_S,"BM_BLEND_SRCONE_DSTONEMIUSSRCCOLOR",Effectable::BM_BLEND_SRCONE_DSTONEMIUSSRCCOLOR);
   tolua_constant(tolua_S,"BM_MAX_MODE",Effectable::BM_MAX_MODE);
   tolua_function(tolua_S,"SetBlendMode",tolua_PX2_Effectable_SetBlendMode00);
   tolua_function(tolua_S,"GetBlendMode",tolua_PX2_Effectable_GetBlendMode00);
   tolua_constant(tolua_S,"TM_TEX",Effectable::TM_TEX);
   tolua_constant(tolua_S,"TM_TEXPACK_ELE",Effectable::TM_TEXPACK_ELE);
   tolua_constant(tolua_S,"TM_TEX_ANIM",Effectable::TM_TEX_ANIM);
   tolua_constant(tolua_S,"TM_TEXS_ANIM",Effectable::TM_TEXS_ANIM);
   tolua_constant(tolua_S,"TM_TEXPACK_ANIM",Effectable::TM_TEXPACK_ANIM);
   tolua_constant(tolua_S,"TM_MAX_MODE",Effectable::TM_MAX_MODE);
   tolua_function(tolua_S,"SetTexMode",tolua_PX2_Effectable_SetTexMode00);
   tolua_function(tolua_S,"GetTexMode",tolua_PX2_Effectable_GetTexMode00);
   tolua_function(tolua_S,"SetTex",tolua_PX2_Effectable_SetTex00);
   tolua_function(tolua_S,"GetTex",tolua_PX2_Effectable_GetTex00);
   tolua_function(tolua_S,"SetTexPack_Ele",tolua_PX2_Effectable_SetTexPack_Ele00);
   tolua_function(tolua_S,"GetTexPack_Ele",tolua_PX2_Effectable_GetTexPack_Ele00);
   tolua_function(tolua_S,"SetTexAnim",tolua_PX2_Effectable_SetTexAnim00);
   tolua_function(tolua_S,"GetTexAnim",tolua_PX2_Effectable_GetTexAnim00);
   tolua_function(tolua_S,"SetTexAnim_Repeat",tolua_PX2_Effectable_SetTexAnim_Repeat00);
   tolua_function(tolua_S,"GetTexAnim_Repeat",tolua_PX2_Effectable_GetTexAnim_Repeat00);
   tolua_function(tolua_S,"AddTexsAnim_Frame",tolua_PX2_Effectable_AddTexsAnim_Frame00);
   tolua_function(tolua_S,"SetTexPackAnim",tolua_PX2_Effectable_SetTexPackAnim00);
   tolua_function(tolua_S,"GetTexPackAnim",tolua_PX2_Effectable_GetTexPackAnim00);
   tolua_function(tolua_S,"AddTexPackAnim_Frame",tolua_PX2_Effectable_AddTexPackAnim_Frame00);
   tolua_function(tolua_S,"GetNumTexAnimTexPackAnimFrames",tolua_PX2_Effectable_GetNumTexAnimTexPackAnimFrames00);
   tolua_function(tolua_S,"ClearTexAnimTexPackAnimFrames",tolua_PX2_Effectable_ClearTexAnimTexPackAnimFrames00);
   tolua_function(tolua_S,"SetAnimInterval",tolua_PX2_Effectable_SetAnimInterval00);
   tolua_function(tolua_S,"GetAnimInterval",tolua_PX2_Effectable_GetAnimInterval00);
   tolua_function(tolua_S,"SetAnimStartDoRandom",tolua_PX2_Effectable_SetAnimStartDoRandom00);
   tolua_function(tolua_S,"IsAnimStartDoRandom",tolua_PX2_Effectable_IsAnimStartDoRandom00);
   tolua_function(tolua_S,"SetUserNumAnimFrames",tolua_PX2_Effectable_SetUserNumAnimFrames00);
   tolua_function(tolua_S,"GetUserNumAnimFrames",tolua_PX2_Effectable_GetUserNumAnimFrames00);
   tolua_function(tolua_S,"GetNumAnimFrames",tolua_PX2_Effectable_GetNumAnimFrames00);
   tolua_function(tolua_S,"SetAnimFramesPlayOnce",tolua_PX2_Effectable_SetAnimFramesPlayOnce00);
   tolua_function(tolua_S,"IsAnimFramesPlayOnce",tolua_PX2_Effectable_IsAnimFramesPlayOnce00);
   tolua_function(tolua_S,"SetMaskTex",tolua_PX2_Effectable_SetMaskTex00);
   tolua_function(tolua_S,"GetMaskTex",tolua_PX2_Effectable_GetMaskTex00);
   tolua_function(tolua_S,"SetEmitUV0_Offset",tolua_PX2_Effectable_SetEmitUV0_Offset00);
   tolua_function(tolua_S,"GetEmitUV0_Offset",tolua_PX2_Effectable_GetEmitUV0_Offset00);
   tolua_function(tolua_S,"SetEmitUV0_Speed",tolua_PX2_Effectable_SetEmitUV0_Speed00);
   tolua_function(tolua_S,"GetEmitUV0_Speed",tolua_PX2_Effectable_GetEmitUV0_Speed00);
   tolua_function(tolua_S,"SetEmitUV0_Repeat",tolua_PX2_Effectable_SetEmitUV0_Repeat00);
   tolua_function(tolua_S,"GetEmitUV0_Repeat",tolua_PX2_Effectable_GetEmitUV0_Repeat00);
   tolua_function(tolua_S,"SetUV1_Offset",tolua_PX2_Effectable_SetUV1_Offset00);
   tolua_function(tolua_S,"GetUV1_Offset",tolua_PX2_Effectable_GetUV1_Offset00);
   tolua_function(tolua_S,"SetUV1_Repeat",tolua_PX2_Effectable_SetUV1_Repeat00);
   tolua_function(tolua_S,"GetUV1_Repeat",tolua_PX2_Effectable_GetUV1_Repeat00);
   tolua_function(tolua_S,"SetUV1_Speed",tolua_PX2_Effectable_SetUV1_Speed00);
   tolua_function(tolua_S,"GetUV1_Speed",tolua_PX2_Effectable_GetUV1_Speed00);
   tolua_constant(tolua_S,"CT_CLAMP",Effectable::CT_CLAMP);
   tolua_constant(tolua_S,"CT_REPEAT",Effectable::CT_REPEAT);
   tolua_constant(tolua_S,"CT_MAX_TYPE",Effectable::CT_MAX_TYPE);
   tolua_function(tolua_S,"SetCoordinateType0",tolua_PX2_Effectable_SetCoordinateType000);
   tolua_function(tolua_S,"GetCoordinateType0",tolua_PX2_Effectable_GetCoordinateType000);
   tolua_function(tolua_S,"SetCoordinateType1",tolua_PX2_Effectable_SetCoordinateType100);
   tolua_function(tolua_S,"GetCoordinateType1",tolua_PX2_Effectable_GetCoordinateType100);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"BeamEmitter","BeamEmitter","Effectable",tolua_collect_BeamEmitter);
  #else
  tolua_cclass(tolua_S,"BeamEmitter","BeamEmitter","Effectable",NULL);
  #endif
  tolua_beginmodule(tolua_S,"BeamEmitter");
   tolua_function(tolua_S,"new",tolua_PX2_BeamEmitter_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_BeamEmitter_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_BeamEmitter_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_BeamEmitter_delete00);
   tolua_function(tolua_S,"SetNumMaxBeams",tolua_PX2_BeamEmitter_SetNumMaxBeams00);
   tolua_function(tolua_S,"GetNumMaxBeams",tolua_PX2_BeamEmitter_GetNumMaxBeams00);
   tolua_function(tolua_S,"SetEmitRate",tolua_PX2_BeamEmitter_SetEmitRate00);
   tolua_function(tolua_S,"GetEmitRate",tolua_PX2_BeamEmitter_GetEmitRate00);
   tolua_function(tolua_S,"SetEmitStartPos",tolua_PX2_BeamEmitter_SetEmitStartPos00);
   tolua_function(tolua_S,"GetEmitStartPos",tolua_PX2_BeamEmitter_GetEmitStartPos00);
   tolua_function(tolua_S,"SetEmitEndPos",tolua_PX2_BeamEmitter_SetEmitEndPos00);
   tolua_function(tolua_S,"GetEmitEndPos",tolua_PX2_BeamEmitter_GetEmitEndPos00);
   tolua_function(tolua_S,"SetStartPosUseLocal",tolua_PX2_BeamEmitter_SetStartPosUseLocal00);
   tolua_function(tolua_S,"IsStartPosUseLocal",tolua_PX2_BeamEmitter_IsStartPosUseLocal00);
   tolua_function(tolua_S,"SetSimpleLineWave",tolua_PX2_BeamEmitter_SetSimpleLineWave00);
   tolua_function(tolua_S,"IsSimpleLineWave",tolua_PX2_BeamEmitter_IsSimpleLineWave00);
   tolua_function(tolua_S,"SetSimpleLineDoAlphaDisAfterStopSpeed",tolua_PX2_BeamEmitter_SetSimpleLineDoAlphaDisAfterStopSpeed00);
   tolua_function(tolua_S,"GetSimpleLineDoAlphaDisAfterStopSpeed",tolua_PX2_BeamEmitter_GetSimpleLineDoAlphaDisAfterStopSpeed00);
   tolua_constant(tolua_S,"WT_RANDOM",BeamEmitter::WT_RANDOM);
   tolua_constant(tolua_S,"WT_SIN",BeamEmitter::WT_SIN);
   tolua_constant(tolua_S,"WT_LINE",BeamEmitter::WT_LINE);
   tolua_constant(tolua_S,"WT_MAX_TYPE",BeamEmitter::WT_MAX_TYPE);
   tolua_function(tolua_S,"SetWaveTypeUp",tolua_PX2_BeamEmitter_SetWaveTypeUp00);
   tolua_function(tolua_S,"GetWaveTypeUp",tolua_PX2_BeamEmitter_GetWaveTypeUp00);
   tolua_function(tolua_S,"SetWaveTypeExtend",tolua_PX2_BeamEmitter_SetWaveTypeExtend00);
   tolua_function(tolua_S,"GetWaveTypeExtend",tolua_PX2_BeamEmitter_GetWaveTypeExtend00);
   tolua_function(tolua_S,"SetNumLowFrequency",tolua_PX2_BeamEmitter_SetNumLowFrequency00);
   tolua_function(tolua_S,"GetNumLowFrequency",tolua_PX2_BeamEmitter_GetNumLowFrequency00);
   tolua_function(tolua_S,"SetNumHighFrequency",tolua_PX2_BeamEmitter_SetNumHighFrequency00);
   tolua_function(tolua_S,"GetNumHighFrequency",tolua_PX2_BeamEmitter_GetNumHighFrequency00);
   tolua_function(tolua_S,"SetLowFrequencyRangeUp",tolua_PX2_BeamEmitter_SetLowFrequencyRangeUp00);
   tolua_function(tolua_S,"SetLowFrequencyRangeExtend",tolua_PX2_BeamEmitter_SetLowFrequencyRangeExtend00);
   tolua_function(tolua_S,"GetLowFrequencyRangeUp",tolua_PX2_BeamEmitter_GetLowFrequencyRangeUp00);
   tolua_function(tolua_S,"GetLowFrequencyRangeExtend",tolua_PX2_BeamEmitter_GetLowFrequencyRangeExtend00);
   tolua_function(tolua_S,"SetHighFrequencyRangeUp",tolua_PX2_BeamEmitter_SetHighFrequencyRangeUp00);
   tolua_function(tolua_S,"SetHighFrequencyRangeExtend",tolua_PX2_BeamEmitter_SetHighFrequencyRangeExtend00);
   tolua_function(tolua_S,"GetHighFrequencyRangeUp",tolua_PX2_BeamEmitter_GetHighFrequencyRangeUp00);
   tolua_function(tolua_S,"GetHighFrequencyRangeExtend",tolua_PX2_BeamEmitter_GetHighFrequencyRangeExtend00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Billboard","Billboard","Effectable",tolua_collect_Billboard);
  #else
  tolua_cclass(tolua_S,"Billboard","Billboard","Effectable",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Billboard");
   tolua_function(tolua_S,"new",tolua_PX2_Billboard_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Billboard_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Billboard_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Billboard_delete00);
   tolua_function(tolua_S,"SetDynamic",tolua_PX2_Billboard_SetDynamic00);
   tolua_function(tolua_S,"IsDynamic",tolua_PX2_Billboard_IsDynamic00);
   tolua_function(tolua_S,"SetPivot",tolua_PX2_Billboard_SetPivot00);
   tolua_function(tolua_S,"SetPivot",tolua_PX2_Billboard_SetPivot01);
   tolua_function(tolua_S,"GetPivot",tolua_PX2_Billboard_GetPivot00);
   tolua_function(tolua_S,"SetUseTexAsSize",tolua_PX2_Billboard_SetUseTexAsSize00);
   tolua_function(tolua_S,"IsUseTexAsSize",tolua_PX2_Billboard_IsUseTexAsSize00);
   tolua_function(tolua_S,"SetUseTrim",tolua_PX2_Billboard_SetUseTrim00);
   tolua_function(tolua_S,"IsUseTrim",tolua_PX2_Billboard_IsUseTrim00);
   tolua_function(tolua_S,"SetDoAlphaDisAfterStop",tolua_PX2_Billboard_SetDoAlphaDisAfterStop00);
   tolua_function(tolua_S,"IsDoAlphaDisAfterStop",tolua_PX2_Billboard_IsDoAlphaDisAfterStop00);
   tolua_function(tolua_S,"SetDoAlphaDisAfterStopSpeed",tolua_PX2_Billboard_SetDoAlphaDisAfterStopSpeed00);
   tolua_function(tolua_S,"GetDoAlphaDisAfterStopSpeed",tolua_PX2_Billboard_GetDoAlphaDisAfterStopSpeed00);
   tolua_function(tolua_S,"SetSizeImmediate",tolua_PX2_Billboard_SetSizeImmediate00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CameraShake","CameraShake","Effectable",tolua_collect_CameraShake);
  #else
  tolua_cclass(tolua_S,"CameraShake","CameraShake","Effectable",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CameraShake");
   tolua_function(tolua_S,"new",tolua_PX2_CameraShake_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_CameraShake_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_CameraShake_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_CameraShake_delete00);
   tolua_function(tolua_S,"Play",tolua_PX2_CameraShake_Play00);
   tolua_function(tolua_S,"Stop",tolua_PX2_CameraShake_Stop00);
   tolua_function(tolua_S,"SetUseX",tolua_PX2_CameraShake_SetUseX00);
   tolua_function(tolua_S,"IsUseX",tolua_PX2_CameraShake_IsUseX00);
   tolua_function(tolua_S,"SetUseY",tolua_PX2_CameraShake_SetUseY00);
   tolua_function(tolua_S,"IsUseY",tolua_PX2_CameraShake_IsUseY00);
   tolua_function(tolua_S,"SetUseZ",tolua_PX2_CameraShake_SetUseZ00);
   tolua_function(tolua_S,"IsUseZ",tolua_PX2_CameraShake_IsUseZ00);
   tolua_function(tolua_S,"SetMaxDistance",tolua_PX2_CameraShake_SetMaxDistance00);
   tolua_function(tolua_S,"GetMaxDistance",tolua_PX2_CameraShake_GetMaxDistance00);
   tolua_function(tolua_S,"SetEmitStrength",tolua_PX2_CameraShake_SetEmitStrength00);
   tolua_function(tolua_S,"GetEmitStrength",tolua_PX2_CameraShake_GetEmitStrength00);
   tolua_function(tolua_S,"GetShakeChannel",tolua_PX2_CameraShake_GetShakeChannel00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"EffectModel","EffectModel","Effectable",tolua_collect_EffectModel);
  #else
  tolua_cclass(tolua_S,"EffectModel","EffectModel","Effectable",NULL);
  #endif
  tolua_beginmodule(tolua_S,"EffectModel");
   tolua_function(tolua_S,"new",tolua_PX2_EffectModel_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_EffectModel_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_EffectModel_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_EffectModel_delete00);
   tolua_function(tolua_S,"Reset",tolua_PX2_EffectModel_Reset00);
   tolua_constant(tolua_S,"MT_SPHERE",EffectModel::MT_SPHERE);
   tolua_constant(tolua_S,"MT_CYLINDEROPEN",EffectModel::MT_CYLINDEROPEN);
   tolua_constant(tolua_S,"MT_MODEL",EffectModel::MT_MODEL);
   tolua_constant(tolua_S,"MT_MAX_TYPE",EffectModel::MT_MAX_TYPE);
   tolua_function(tolua_S,"SetModelType",tolua_PX2_EffectModel_SetModelType00);
   tolua_function(tolua_S,"GetModelType",tolua_PX2_EffectModel_GetModelType00);
   tolua_function(tolua_S,"SetRadiusSample",tolua_PX2_EffectModel_SetRadiusSample00);
   tolua_function(tolua_S,"GetRadiusSample",tolua_PX2_EffectModel_GetRadiusSample00);
   tolua_function(tolua_S,"SetZSample",tolua_PX2_EffectModel_SetZSample00);
   tolua_function(tolua_S,"GetZSample",tolua_PX2_EffectModel_GetZSample00);
   tolua_constant(tolua_S,"HAT_NORMAL",EffectModel::HAT_NORMAL);
   tolua_constant(tolua_S,"HAT_H2L_APPEAR",EffectModel::HAT_H2L_APPEAR);
   tolua_constant(tolua_S,"HAT_H2L_DISAPPEAR",EffectModel::HAT_H2L_DISAPPEAR);
   tolua_constant(tolua_S,"HAT_H2L_APPEAR_DISAPPEAR",EffectModel::HAT_H2L_APPEAR_DISAPPEAR);
   tolua_constant(tolua_S,"HAT_H2L_DISAPPEAR_APPEAR",EffectModel::HAT_H2L_DISAPPEAR_APPEAR);
   tolua_constant(tolua_S,"HAT_MAX_TYPE",EffectModel::HAT_MAX_TYPE);
   tolua_function(tolua_S,"SetHeightAlphaType",tolua_PX2_EffectModel_SetHeightAlphaType00);
   tolua_function(tolua_S,"GetHeightAlphaType",tolua_PX2_EffectModel_GetHeightAlphaType00);
   tolua_function(tolua_S,"SetModelFilename",tolua_PX2_EffectModel_SetModelFilename00);
   tolua_function(tolua_S,"GetModelFilename",tolua_PX2_EffectModel_GetModelFilename00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"EffectModelNode","EffectModelNode","Node",tolua_collect_EffectModelNode);
  #else
  tolua_cclass(tolua_S,"EffectModelNode","EffectModelNode","Node",NULL);
  #endif
  tolua_beginmodule(tolua_S,"EffectModelNode");
   tolua_function(tolua_S,"new",tolua_PX2_EffectModelNode_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_EffectModelNode_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_EffectModelNode_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_EffectModelNode_delete00);
   tolua_function(tolua_S,"SetModelFilename",tolua_PX2_EffectModelNode_SetModelFilename00);
   tolua_function(tolua_S,"GetModelFilename",tolua_PX2_EffectModelNode_GetModelFilename00);
   tolua_function(tolua_S,"SetUVSpeed",tolua_PX2_EffectModelNode_SetUVSpeed00);
   tolua_function(tolua_S,"GetUVSpeed",tolua_PX2_EffectModelNode_GetUVSpeed00);
   tolua_function(tolua_S,"SetTextureFilename",tolua_PX2_EffectModelNode_SetTextureFilename00);
   tolua_function(tolua_S,"GetTextureFilename",tolua_PX2_EffectModelNode_GetTextureFilename00);
   tolua_function(tolua_S,"Reset",tolua_PX2_EffectModelNode_Reset00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ParticleEmitter","ParticleEmitter","Effectable",tolua_collect_ParticleEmitter);
  #else
  tolua_cclass(tolua_S,"ParticleEmitter","ParticleEmitter","Effectable",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ParticleEmitter");
   tolua_function(tolua_S,"new",tolua_PX2_ParticleEmitter_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_ParticleEmitter_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_ParticleEmitter_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_ParticleEmitter_delete00);
   tolua_function(tolua_S,"SetMaxNumParticles",tolua_PX2_ParticleEmitter_SetMaxNumParticles00);
   tolua_function(tolua_S,"GetMaxNumParticles",tolua_PX2_ParticleEmitter_GetMaxNumParticles00);
   tolua_function(tolua_S,"SetBlast",tolua_PX2_ParticleEmitter_SetBlast00);
   tolua_function(tolua_S,"IsBlast",tolua_PX2_ParticleEmitter_IsBlast00);
   tolua_constant(tolua_S,"DT_NORMAL",ParticleEmitter::DT_NORMAL);
   tolua_constant(tolua_S,"DT_MODEL",ParticleEmitter::DT_MODEL);
   tolua_constant(tolua_S,"DT_MAX_TYPE",ParticleEmitter::DT_MAX_TYPE);
   tolua_function(tolua_S,"SetDrawType",tolua_PX2_ParticleEmitter_SetDrawType00);
   tolua_function(tolua_S,"GetDrawType",tolua_PX2_ParticleEmitter_GetDrawType00);
   tolua_function(tolua_S,"SetModelFilename",tolua_PX2_ParticleEmitter_SetModelFilename00);
   tolua_function(tolua_S,"GetModelFilename",tolua_PX2_ParticleEmitter_GetModelFilename00);
   tolua_function(tolua_S,"SetPivot",tolua_PX2_ParticleEmitter_SetPivot00);
   tolua_function(tolua_S,"GetPivot",tolua_PX2_ParticleEmitter_GetPivot00);
   tolua_function(tolua_S,"SetEmitRate",tolua_PX2_ParticleEmitter_SetEmitRate00);
   tolua_function(tolua_S,"GetEmitRate",tolua_PX2_ParticleEmitter_GetEmitRate00);
   tolua_function(tolua_S,"SetEmitDirDynamic",tolua_PX2_ParticleEmitter_SetEmitDirDynamic00);
   tolua_function(tolua_S,"IsEmitDirDynamic",tolua_PX2_ParticleEmitter_IsEmitDirDynamic00);
   tolua_function(tolua_S,"SetEmitDir",tolua_PX2_ParticleEmitter_SetEmitDir00);
   tolua_function(tolua_S,"GetEmitDir",tolua_PX2_ParticleEmitter_GetEmitDir00);
   tolua_function(tolua_S,"SetEmitDirLocal",tolua_PX2_ParticleEmitter_SetEmitDirLocal00);
   tolua_function(tolua_S,"IsEmitDirLocal",tolua_PX2_ParticleEmitter_IsEmitDirLocal00);
   tolua_constant(tolua_S,"EST_NORMAL",ParticleEmitter::EST_NORMAL);
   tolua_constant(tolua_S,"EST_TOATTRACTPOINT",ParticleEmitter::EST_TOATTRACTPOINT);
   tolua_constant(tolua_S,"EST_LEVELATTRACTPOINT",ParticleEmitter::EST_LEVELATTRACTPOINT);
   tolua_constant(tolua_S,"EST_MAX_TYPE",ParticleEmitter::EST_MAX_TYPE);
   tolua_function(tolua_S,"SetEmitDirType",tolua_PX2_ParticleEmitter_SetEmitDirType00);
   tolua_function(tolua_S,"GetEmitDirType",tolua_PX2_ParticleEmitter_GetEmitDirType00);
   tolua_function(tolua_S,"SetEmitSpeed",tolua_PX2_ParticleEmitter_SetEmitSpeed00);
   tolua_function(tolua_S,"GetEmitSpeed",tolua_PX2_ParticleEmitter_GetEmitSpeed00);
   tolua_function(tolua_S,"SetEmitAccelerateDir",tolua_PX2_ParticleEmitter_SetEmitAccelerateDir00);
   tolua_function(tolua_S,"GetEmitAccelerateDir",tolua_PX2_ParticleEmitter_GetEmitAccelerateDir00);
   tolua_function(tolua_S,"SetEmitAccelerate",tolua_PX2_ParticleEmitter_SetEmitAccelerate00);
   tolua_function(tolua_S,"GetEmitAccelerate",tolua_PX2_ParticleEmitter_GetEmitAccelerate00);
   tolua_function(tolua_S,"SetEmitAttractPoint",tolua_PX2_ParticleEmitter_SetEmitAttractPoint00);
   tolua_function(tolua_S,"GetEmitAttactPoint",tolua_PX2_ParticleEmitter_GetEmitAttactPoint00);
   tolua_function(tolua_S,"SetEmitAttactStrength",tolua_PX2_ParticleEmitter_SetEmitAttactStrength00);
   tolua_function(tolua_S,"GetEmitAttackStrength",tolua_PX2_ParticleEmitter_GetEmitAttackStrength00);
   tolua_function(tolua_S,"SetObstruct",tolua_PX2_ParticleEmitter_SetObstruct00);
   tolua_function(tolua_S,"GetObstruct",tolua_PX2_ParticleEmitter_GetObstruct00);
   tolua_constant(tolua_S,"RAT_D",ParticleEmitter::RAT_D);
   tolua_constant(tolua_S,"RAT_U",ParticleEmitter::RAT_U);
   tolua_constant(tolua_S,"RAT_R",ParticleEmitter::RAT_R);
   tolua_constant(tolua_S,"RAT_FREE",ParticleEmitter::RAT_FREE);
   tolua_constant(tolua_S,"RAT_MAX_TYPE",ParticleEmitter::RAT_MAX_TYPE);
   tolua_function(tolua_S,"SetRotateAxisType",tolua_PX2_ParticleEmitter_SetRotateAxisType00);
   tolua_function(tolua_S,"GetRotateAxisType",tolua_PX2_ParticleEmitter_GetRotateAxisType00);
   tolua_function(tolua_S,"SetEmitRotateAxis",tolua_PX2_ParticleEmitter_SetEmitRotateAxis00);
   tolua_function(tolua_S,"GetEmitRotateAxis",tolua_PX2_ParticleEmitter_GetEmitRotateAxis00);
   tolua_function(tolua_S,"SetEmitRotateDegree",tolua_PX2_ParticleEmitter_SetEmitRotateDegree00);
   tolua_function(tolua_S,"GetEmitRotateDegree",tolua_PX2_ParticleEmitter_GetEmitRotateDegree00);
   tolua_function(tolua_S,"SetEmitRotateSpeed",tolua_PX2_ParticleEmitter_SetEmitRotateSpeed00);
   tolua_function(tolua_S,"GetEmitRotateSpeed",tolua_PX2_ParticleEmitter_GetEmitRotateSpeed00);
   tolua_constant(tolua_S,"CT_NONE",ParticleEmitter::CT_NONE);
   tolua_constant(tolua_S,"CT_FACE_HEIGHTUP",ParticleEmitter::CT_FACE_HEIGHTUP);
   tolua_constant(tolua_S,"CT_MAX_TYPE",ParticleEmitter::CT_MAX_TYPE);
   tolua_function(tolua_S,"SetCollisionType",tolua_PX2_ParticleEmitter_SetCollisionType00);
   tolua_function(tolua_S,"GetCollisionType",tolua_PX2_ParticleEmitter_GetCollisionType00);
   tolua_constant(tolua_S,"CO_REFLECT",ParticleEmitter::CO_REFLECT);
   tolua_constant(tolua_S,"CO_DEAD",ParticleEmitter::CO_DEAD);
   tolua_constant(tolua_S,"CO_MAX_TYPE",ParticleEmitter::CO_MAX_TYPE);
   tolua_function(tolua_S,"SetCollisionOption",tolua_PX2_ParticleEmitter_SetCollisionOption00);
   tolua_function(tolua_S,"GetCollisionOption",tolua_PX2_ParticleEmitter_GetCollisionOption00);
   tolua_function(tolua_S,"SetCollisionFaceHeight",tolua_PX2_ParticleEmitter_SetCollisionFaceHeight00);
   tolua_function(tolua_S,"GetCollisionFaceHeight",tolua_PX2_ParticleEmitter_GetCollisionFaceHeight00);
   tolua_function(tolua_S,"SetCollisionSpeedPercent",tolua_PX2_ParticleEmitter_SetCollisionSpeedPercent00);
   tolua_function(tolua_S,"GetCollisionSpeedPercent",tolua_PX2_ParticleEmitter_GetCollisionSpeedPercent00);
   tolua_constant(tolua_S,"PT_BOX",ParticleEmitter::PT_BOX);
   tolua_constant(tolua_S,"PT_SPHERE",ParticleEmitter::PT_SPHERE);
   tolua_constant(tolua_S,"PT_COLUMN",ParticleEmitter::PT_COLUMN);
   tolua_constant(tolua_S,"PT_MAX_TYPE",ParticleEmitter::PT_MAX_TYPE);
   tolua_function(tolua_S,"SetPlacerType",tolua_PX2_ParticleEmitter_SetPlacerType00);
   tolua_function(tolua_S,"GetPlacerType",tolua_PX2_ParticleEmitter_GetPlacerType00);
   tolua_function(tolua_S,"SetPlacerInLength",tolua_PX2_ParticleEmitter_SetPlacerInLength00);
   tolua_function(tolua_S,"SetPlacerOutLength",tolua_PX2_ParticleEmitter_SetPlacerOutLength00);
   tolua_function(tolua_S,"SetPlacerInWidth",tolua_PX2_ParticleEmitter_SetPlacerInWidth00);
   tolua_function(tolua_S,"SetPlacerOutWidth",tolua_PX2_ParticleEmitter_SetPlacerOutWidth00);
   tolua_function(tolua_S,"SetPlacerInHeight",tolua_PX2_ParticleEmitter_SetPlacerInHeight00);
   tolua_function(tolua_S,"SetPlacerOutHeight",tolua_PX2_ParticleEmitter_SetPlacerOutHeight00);
   tolua_function(tolua_S,"GetPlacerInLength",tolua_PX2_ParticleEmitter_GetPlacerInLength00);
   tolua_function(tolua_S,"GetPlacerOutLength",tolua_PX2_ParticleEmitter_GetPlacerOutLength00);
   tolua_function(tolua_S,"GetPlacerInWidth",tolua_PX2_ParticleEmitter_GetPlacerInWidth00);
   tolua_function(tolua_S,"GetPlacerOutWidth",tolua_PX2_ParticleEmitter_GetPlacerOutWidth00);
   tolua_function(tolua_S,"GetPlacerInHeight",tolua_PX2_ParticleEmitter_GetPlacerInHeight00);
   tolua_function(tolua_S,"GetPlacerOutHeight",tolua_PX2_ParticleEmitter_GetPlacerOutHeight00);
   tolua_function(tolua_S,"GetPlacerAPoint",tolua_PX2_ParticleEmitter_GetPlacerAPoint00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"RibbonEmitter","RibbonEmitter","Effectable",tolua_collect_RibbonEmitter);
  #else
  tolua_cclass(tolua_S,"RibbonEmitter","RibbonEmitter","Effectable",NULL);
  #endif
  tolua_beginmodule(tolua_S,"RibbonEmitter");
   tolua_function(tolua_S,"new",tolua_PX2_RibbonEmitter_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_RibbonEmitter_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_RibbonEmitter_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_RibbonEmitter_delete00);
   tolua_function(tolua_S,"SetLength",tolua_PX2_RibbonEmitter_SetLength00);
   tolua_function(tolua_S,"GetLength",tolua_PX2_RibbonEmitter_GetLength00);
   tolua_function(tolua_S,"SetSegLength",tolua_PX2_RibbonEmitter_SetSegLength00);
   tolua_function(tolua_S,"GetSegLength",tolua_PX2_RibbonEmitter_GetSegLength00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Soundable","Soundable","Effectable",tolua_collect_Soundable);
  #else
  tolua_cclass(tolua_S,"Soundable","Soundable","Effectable",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Soundable");
   tolua_function(tolua_S,"new",tolua_PX2_Soundable_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Soundable_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Soundable_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Soundable_delete00);
   tolua_constant(tolua_S,"ST_SOUND",Soundable::ST_SOUND);
   tolua_constant(tolua_S,"ST_MUSIC",Soundable::ST_MUSIC);
   tolua_constant(tolua_S,"ST_MAX_TYPE",Soundable::ST_MAX_TYPE);
   tolua_function(tolua_S,"SetSourceType",tolua_PX2_Soundable_SetSourceType00);
   tolua_function(tolua_S,"GetSourceType",tolua_PX2_Soundable_GetSourceType00);
   tolua_function(tolua_S,"SetMusicChannel",tolua_PX2_Soundable_SetMusicChannel00);
   tolua_function(tolua_S,"GetMusicChannel",tolua_PX2_Soundable_GetMusicChannel00);
   tolua_function(tolua_S,"Reset",tolua_PX2_Soundable_Reset00);
   tolua_function(tolua_S,"Play",tolua_PX2_Soundable_Play00);
   tolua_function(tolua_S,"Stop",tolua_PX2_Soundable_Stop00);
   tolua_function(tolua_S,"SetIngoreStopSound",tolua_PX2_Soundable_SetIngoreStopSound00);
   tolua_function(tolua_S,"IsIngoreStopSound",tolua_PX2_Soundable_IsIngoreStopSound00);
   tolua_function(tolua_S,"SetSoundFilename",tolua_PX2_Soundable_SetSoundFilename00);
   tolua_function(tolua_S,"GetSoundFilename",tolua_PX2_Soundable_GetSoundFilename00);
   tolua_function(tolua_S,"Set3D",tolua_PX2_Soundable_Set3D00);
   tolua_function(tolua_S,"Is3D",tolua_PX2_Soundable_Is3D00);
   tolua_function(tolua_S,"SetVolume",tolua_PX2_Soundable_SetVolume00);
   tolua_function(tolua_S,"GetVolume",tolua_PX2_Soundable_GetVolume00);
   tolua_function(tolua_S,"SetVelocity",tolua_PX2_Soundable_SetVelocity00);
   tolua_function(tolua_S,"GetVelocity",tolua_PX2_Soundable_GetVelocity00);
   tolua_function(tolua_S,"SetDistance",tolua_PX2_Soundable_SetDistance00);
   tolua_function(tolua_S,"SetMinDistance",tolua_PX2_Soundable_SetMinDistance00);
   tolua_function(tolua_S,"SetMaxDistance",tolua_PX2_Soundable_SetMaxDistance00);
   tolua_function(tolua_S,"GetMinDistance",tolua_PX2_Soundable_GetMinDistance00);
   tolua_function(tolua_S,"GetMaxDistance",tolua_PX2_Soundable_GetMaxDistance00);
   tolua_function(tolua_S,"SetLoop",tolua_PX2_Soundable_SetLoop00);
   tolua_function(tolua_S,"IsLoop",tolua_PX2_Soundable_IsLoop00);
   tolua_function(tolua_S,"SetDistanceUseX",tolua_PX2_Soundable_SetDistanceUseX00);
   tolua_function(tolua_S,"IsDistanceUseX",tolua_PX2_Soundable_IsDistanceUseX00);
   tolua_function(tolua_S,"SetDistanceUseY",tolua_PX2_Soundable_SetDistanceUseY00);
   tolua_function(tolua_S,"IsDistanceUseY",tolua_PX2_Soundable_IsDistanceUseY00);
   tolua_function(tolua_S,"SetDistanceUseZ",tolua_PX2_Soundable_SetDistanceUseZ00);
   tolua_function(tolua_S,"IsDistanceUseZ",tolua_PX2_Soundable_IsDistanceUseZ00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"EffectableController","EffectableController","Controller",tolua_collect_EffectableController);
  #else
  tolua_cclass(tolua_S,"EffectableController","EffectableController","Controller",NULL);
  #endif
  tolua_beginmodule(tolua_S,"EffectableController");
   tolua_function(tolua_S,"new",tolua_PX2_EffectableController_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_EffectableController_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_EffectableController_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_EffectableController_delete00);
   tolua_function(tolua_S,"Reset",tolua_PX2_EffectableController_Reset00);
   tolua_function(tolua_S,"AddModule",tolua_PX2_EffectableController_AddModule00);
   tolua_function(tolua_S,"RemoveModule",tolua_PX2_EffectableController_RemoveModule00);
   tolua_function(tolua_S,"GetModule",tolua_PX2_EffectableController_GetModule00);
   tolua_function(tolua_S,"GetModuleByRttiName",tolua_PX2_EffectableController_GetModuleByRttiName00);
   tolua_function(tolua_S,"GetModuleByTypeName",tolua_PX2_EffectableController_GetModuleByTypeName00);
   tolua_function(tolua_S,"GetNumModules",tolua_PX2_EffectableController_GetNumModules00);
   tolua_function(tolua_S,"IsHasModule",tolua_PX2_EffectableController_IsHasModule00);
   tolua_function(tolua_S,"IsHasModuleByTypeName",tolua_PX2_EffectableController_IsHasModuleByTypeName00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"EffectModule","EffectModule","Object",tolua_collect_EffectModule);
  #else
  tolua_cclass(tolua_S,"EffectModule","EffectModule","Object",NULL);
  #endif
  tolua_beginmodule(tolua_S,"EffectModule");
   tolua_constant(tolua_S,"MT_FLOAT",EffectModule::MT_FLOAT);
   tolua_constant(tolua_S,"MT_FLOAT2",EffectModule::MT_FLOAT2);
   tolua_constant(tolua_S,"MT_FLOAT3",EffectModule::MT_FLOAT3);
   tolua_constant(tolua_S,"MT_FLOAT3COLOR",EffectModule::MT_FLOAT3COLOR);
   tolua_constant(tolua_S,"MT_MAX_TYPE",EffectModule::MT_MAX_TYPE);
   tolua_function(tolua_S,"new",tolua_PX2_EffectModule_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_EffectModule_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_EffectModule_new00_local);
   tolua_function(tolua_S,"new",tolua_PX2_EffectModule_new01);
   tolua_function(tolua_S,"new_local",tolua_PX2_EffectModule_new01_local);
   tolua_function(tolua_S,".call",tolua_PX2_EffectModule_new01_local);
   tolua_function(tolua_S,"delete",tolua_PX2_EffectModule_delete00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Terrain","Terrain","Node",tolua_collect_Terrain);
  #else
  tolua_cclass(tolua_S,"Terrain","Terrain","Node",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Terrain");
   tolua_function(tolua_S,"delete",tolua_PX2_Terrain_delete00);
   tolua_function(tolua_S,"GetRowQuantity",tolua_PX2_Terrain_GetRowQuantity00);
   tolua_function(tolua_S,"GetColQuantity",tolua_PX2_Terrain_GetColQuantity00);
   tolua_function(tolua_S,"GetNumVertexPage",tolua_PX2_Terrain_GetNumVertexPage00);
   tolua_function(tolua_S,"GetSpacing",tolua_PX2_Terrain_GetSpacing00);
   tolua_function(tolua_S,"GetHeight",tolua_PX2_Terrain_GetHeight00);
   tolua_function(tolua_S,"GetTerrainShine",tolua_PX2_Terrain_GetTerrainShine00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"RawTerrain","RawTerrain","Terrain",tolua_collect_RawTerrain);
  #else
  tolua_cclass(tolua_S,"RawTerrain","RawTerrain","Terrain",NULL);
  #endif
  tolua_beginmodule(tolua_S,"RawTerrain");
   tolua_function(tolua_S,"new",tolua_PX2_RawTerrain_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_RawTerrain_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_RawTerrain_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_RawTerrain_delete00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"LODTerrain","LODTerrain","Terrain",tolua_collect_LODTerrain);
  #else
  tolua_cclass(tolua_S,"LODTerrain","LODTerrain","Terrain",NULL);
  #endif
  tolua_beginmodule(tolua_S,"LODTerrain");
   tolua_function(tolua_S,"new",tolua_PX2_LODTerrain_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_LODTerrain_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_LODTerrain_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_LODTerrain_delete00);
   tolua_function(tolua_S,"SetPixelTolerance",tolua_PX2_LODTerrain_SetPixelTolerance00);
   tolua_function(tolua_S,"GetPixelTolerance",tolua_PX2_LODTerrain_GetPixelTolerance00);
   tolua_function(tolua_S,"SetCloseAssumption",tolua_PX2_LODTerrain_SetCloseAssumption00);
   tolua_function(tolua_S,"IsCloseAssumption",tolua_PX2_LODTerrain_IsCloseAssumption00);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"UICT_NONE",UICT_NONE);
  tolua_constant(tolua_S,"UICT_PRESSED",UICT_PRESSED);
  tolua_constant(tolua_S,"UICT_RELEASED",UICT_RELEASED);
  tolua_constant(tolua_S,"UICT_DOUBLE_PRESSED",UICT_DOUBLE_PRESSED);
  tolua_constant(tolua_S,"UICT_PRESSED_NOTPICK",UICT_PRESSED_NOTPICK);
  tolua_constant(tolua_S,"UICT_RELEASED_NOTPICK",UICT_RELEASED_NOTPICK);
  tolua_constant(tolua_S,"UICT_PROGRESSCHANGED",UICT_PROGRESSCHANGED);
  tolua_constant(tolua_S,"UICT_SLIDERCHANGED",UICT_SLIDERCHANGED);
  tolua_constant(tolua_S,"UICT_EDITBOX_ATTACHWITHIME",UICT_EDITBOX_ATTACHWITHIME);
  tolua_constant(tolua_S,"UICT_EDITBOX_DETACHWITHIME",UICT_EDITBOX_DETACHWITHIME);
  tolua_constant(tolua_S,"UICT_EDITBOX_TEXTCHANGED",UICT_EDITBOX_TEXTCHANGED);
  tolua_constant(tolua_S,"UICT_EDITBOX_ENTER",UICT_EDITBOX_ENTER);
  tolua_constant(tolua_S,"UICT_EDITBOX_LEFT",UICT_EDITBOX_LEFT);
  tolua_constant(tolua_S,"UICT_EDITBOX_RIGHT",UICT_EDITBOX_RIGHT);
  tolua_constant(tolua_S,"UICT_CHECKED",UICT_CHECKED);
  tolua_constant(tolua_S,"UICT_DISCHECKED",UICT_DISCHECKED);
  tolua_constant(tolua_S,"UICT_LIST_SELECTED",UICT_LIST_SELECTED);
  tolua_constant(tolua_S,"UICT_TABFRAME_DRAG_BEGIN",UICT_TABFRAME_DRAG_BEGIN);
  tolua_constant(tolua_S,"UICT_TABFRAME_DRAG_END",UICT_TABFRAME_DRAG_END);
  tolua_constant(tolua_S,"UICT_COMBOBOX_OPEN",UICT_COMBOBOX_OPEN);
  tolua_constant(tolua_S,"UICT_COMBOBOX_CLOSE",UICT_COMBOBOX_CLOSE);
  tolua_constant(tolua_S,"UICT_COMBOBOX_CHOOSED",UICT_COMBOBOX_CHOOSED);
  tolua_constant(tolua_S,"UICT_TREE_SELECTED",UICT_TREE_SELECTED);
  tolua_constant(tolua_S,"UICT_TREE_DOUBLE_SELECTED",UICT_TREE_DOUBLE_SELECTED);
  tolua_constant(tolua_S,"UICT_TABFRAME_SETACTIVE",UICT_TABFRAME_SETACTIVE);
  tolua_constant(tolua_S,"UICT_SPLITTER_DRAGING",UICT_SPLITTER_DRAGING);
  tolua_constant(tolua_S,"UICT_ROUND_PRESSED",UICT_ROUND_PRESSED);
  tolua_constant(tolua_S,"UICT_ROUND_RELEASED",UICT_ROUND_RELEASED);
  tolua_constant(tolua_S,"UICT_ROUND_RELEASEDNOTPICK",UICT_ROUND_RELEASEDNOTPICK);
  tolua_constant(tolua_S,"UICT_ROUND_DRAG",UICT_ROUND_DRAG);
  tolua_constant(tolua_S,"UICT_COLOR_SELECT",UICT_COLOR_SELECT);
  tolua_constant(tolua_S,"UICT_MAX_TYPE",UICT_MAX_TYPE);
  tolua_constant(tolua_S,"UILPT_LEFT",UILPT_LEFT);
  tolua_constant(tolua_S,"UILPT_RIGHT",UILPT_RIGHT);
  tolua_constant(tolua_S,"UILPT_BOTTOM",UILPT_BOTTOM);
  tolua_constant(tolua_S,"UILPT_TOP",UILPT_TOP);
  tolua_constant(tolua_S,"UILPT_CENTER",UILPT_CENTER);
  tolua_constant(tolua_S,"UILPT_ALL",UILPT_ALL);
  tolua_constant(tolua_S,"UILPT_MAX_TYPE",UILPT_MAX_TYPE);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIFrame","UIFrame","SizeNode",tolua_collect_UIFrame);
  #else
  tolua_cclass(tolua_S,"UIFrame","UIFrame","SizeNode",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIFrame");
   tolua_function(tolua_S,"new",tolua_PX2_UIFrame_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UIFrame_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UIFrame_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UIFrame_delete00);
   tolua_function(tolua_S,"New",tolua_PX2_UIFrame_New00);
   tolua_function(tolua_S,"New",tolua_PX2_UIFrame_New01);
   tolua_function(tolua_S,"CreateAddBackgroundPicBox",tolua_PX2_UIFrame_CreateAddBackgroundPicBox00);
   tolua_function(tolua_S,"CreateAddBackgroundPicBox",tolua_PX2_UIFrame_CreateAddBackgroundPicBox01);
   tolua_function(tolua_S,"GetBackgroundPicBox",tolua_PX2_UIFrame_GetBackgroundPicBox00);
   tolua_function(tolua_S,"DestoryBackgroundPicBox",tolua_PX2_UIFrame_DestoryBackgroundPicBox00);
   tolua_function(tolua_S,"SetActivateColor",tolua_PX2_UIFrame_SetActivateColor00);
   tolua_function(tolua_S,"GetActivateColor",tolua_PX2_UIFrame_GetActivateColor00);
   tolua_function(tolua_S,"SetActivateAlpha",tolua_PX2_UIFrame_SetActivateAlpha00);
   tolua_function(tolua_S,"GetActivateAlpha",tolua_PX2_UIFrame_GetActivateAlpha00);
   tolua_function(tolua_S,"SetActivateBrightness",tolua_PX2_UIFrame_SetActivateBrightness00);
   tolua_function(tolua_S,"GetActivateBrightness",tolua_PX2_UIFrame_GetActivateBrightness00);
   tolua_function(tolua_S,"SetScriptHandler",tolua_PX2_UIFrame_SetScriptHandler00);
   tolua_function(tolua_S,"GetScriptHandler",tolua_PX2_UIFrame_GetScriptHandler00);
   tolua_function(tolua_S,"CreateAddMask",tolua_PX2_UIFrame_CreateAddMask00);
   tolua_function(tolua_S,"SetMaskVal",tolua_PX2_UIFrame_SetMaskVal00);
   tolua_function(tolua_S,"GetMaskVal",tolua_PX2_UIFrame_GetMaskVal00);
   tolua_function(tolua_S,"GetMask",tolua_PX2_UIFrame_GetMask00);
   tolua_function(tolua_S,"DestoryMask",tolua_PX2_UIFrame_DestoryMask00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIPicBox","UIPicBox","TriMesh",tolua_collect_UIPicBox);
  #else
  tolua_cclass(tolua_S,"UIPicBox","UIPicBox","TriMesh",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIPicBox");
   tolua_function(tolua_S,"New",tolua_PX2_UIPicBox_New00);
   tolua_function(tolua_S,"New",tolua_PX2_UIPicBox_New01);
   tolua_function(tolua_S,"new",tolua_PX2_UIPicBox_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UIPicBox_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UIPicBox_new00_local);
   tolua_function(tolua_S,"new",tolua_PX2_UIPicBox_new01);
   tolua_function(tolua_S,"new_local",tolua_PX2_UIPicBox_new01_local);
   tolua_function(tolua_S,".call",tolua_PX2_UIPicBox_new01_local);
   tolua_function(tolua_S,"new",tolua_PX2_UIPicBox_new02);
   tolua_function(tolua_S,"new_local",tolua_PX2_UIPicBox_new02_local);
   tolua_function(tolua_S,".call",tolua_PX2_UIPicBox_new02_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UIPicBox_delete00);
   tolua_constant(tolua_S,"PBT_NORMAL",UIPicBox::PBT_NORMAL);
   tolua_constant(tolua_S,"PBT_NINE",UIPicBox::PBT_NINE);
   tolua_constant(tolua_S,"PBT_NORAML_UVREVERSE",UIPicBox::PBT_NORAML_UVREVERSE);
   tolua_constant(tolua_S,"PBT_MAX_TYPE",UIPicBox::PBT_MAX_TYPE);
   tolua_function(tolua_S,"SetPicBoxType",tolua_PX2_UIPicBox_SetPicBoxType00);
   tolua_function(tolua_S,"GetPicBoxType",tolua_PX2_UIPicBox_GetPicBoxType00);
   tolua_function(tolua_S,"SetPivot",tolua_PX2_UIPicBox_SetPivot00);
   tolua_function(tolua_S,"SetPivot",tolua_PX2_UIPicBox_SetPivot01);
   tolua_function(tolua_S,"GetPivot",tolua_PX2_UIPicBox_GetPivot00);
   tolua_function(tolua_S,"GetPivot",tolua_PX2_UIPicBox_GetPivot01);
   tolua_function(tolua_S,"SetSize",tolua_PX2_UIPicBox_SetSize00);
   tolua_function(tolua_S,"SetSize",tolua_PX2_UIPicBox_SetSize01);
   tolua_function(tolua_S,"GetSize",tolua_PX2_UIPicBox_GetSize00);
   tolua_function(tolua_S,"SetWidth",tolua_PX2_UIPicBox_SetWidth00);
   tolua_function(tolua_S,"GetWidth",tolua_PX2_UIPicBox_GetWidth00);
   tolua_function(tolua_S,"SetHeight",tolua_PX2_UIPicBox_SetHeight00);
   tolua_function(tolua_S,"GetHeight",tolua_PX2_UIPicBox_GetHeight00);
   tolua_function(tolua_S,"MakeSizeWithTex",tolua_PX2_UIPicBox_MakeSizeWithTex00);
   tolua_function(tolua_S,"SetTexCornerSize",tolua_PX2_UIPicBox_SetTexCornerSize00);
   tolua_function(tolua_S,"SetTexCornerSize",tolua_PX2_UIPicBox_SetTexCornerSize01);
   tolua_function(tolua_S,"SetTexCornerSizeLB",tolua_PX2_UIPicBox_SetTexCornerSizeLB00);
   tolua_function(tolua_S,"SetTexCornerSizeRT",tolua_PX2_UIPicBox_SetTexCornerSizeRT00);
   tolua_function(tolua_S,"GetTexCornerSizeLB",tolua_PX2_UIPicBox_GetTexCornerSizeLB00);
   tolua_function(tolua_S,"GetTexCornerSizeLB",tolua_PX2_UIPicBox_GetTexCornerSizeLB01);
   tolua_function(tolua_S,"GetTexCornerSizeRT",tolua_PX2_UIPicBox_GetTexCornerSizeRT00);
   tolua_function(tolua_S,"GetTexCornerSizeRT",tolua_PX2_UIPicBox_GetTexCornerSizeRT01);
   tolua_function(tolua_S,"SetAlpha",tolua_PX2_UIPicBox_SetAlpha00);
   tolua_constant(tolua_S,"PBTM_TEX",UIPicBox::PBTM_TEX);
   tolua_constant(tolua_S,"PBTM_TEXPACK_ELE",UIPicBox::PBTM_TEXPACK_ELE);
   tolua_constant(tolua_S,"PBTM_MAX_MODE",UIPicBox::PBTM_MAX_MODE);
   tolua_function(tolua_S,"GetPicBoxTexMode",tolua_PX2_UIPicBox_GetPicBoxTexMode00);
   tolua_function(tolua_S,"SetTexture",tolua_PX2_UIPicBox_SetTexture00);
   tolua_function(tolua_S,"SetTexture",tolua_PX2_UIPicBox_SetTexture01);
   tolua_function(tolua_S,"SetTexture",tolua_PX2_UIPicBox_SetTexture02);
   tolua_function(tolua_S,"GetTexture",tolua_PX2_UIPicBox_GetTexture00);
   tolua_function(tolua_S,"GetTextureFilename",tolua_PX2_UIPicBox_GetTextureFilename00);
   tolua_function(tolua_S,"GetTexturePackName",tolua_PX2_UIPicBox_GetTexturePackName00);
   tolua_function(tolua_S,"GetElementName",tolua_PX2_UIPicBox_GetElementName00);
   tolua_function(tolua_S,"SetUVRepeat",tolua_PX2_UIPicBox_SetUVRepeat00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIButtonBase","UIButtonBase","UIFrame",tolua_collect_UIButtonBase);
  #else
  tolua_cclass(tolua_S,"UIButtonBase","UIButtonBase","UIFrame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIButtonBase");
   tolua_function(tolua_S,"delete",tolua_PX2_UIButtonBase_delete00);
   tolua_constant(tolua_S,"BT_COLOR",UIButtonBase::BT_COLOR);
   tolua_constant(tolua_S,"BT_PICBOXSWAP",UIButtonBase::BT_PICBOXSWAP);
   tolua_constant(tolua_S,"BT_MAX_TYPE",UIButtonBase::BT_MAX_TYPE);
   tolua_function(tolua_S,"SetButType",tolua_PX2_UIButtonBase_SetButType00);
   tolua_function(tolua_S,"GetButType",tolua_PX2_UIButtonBase_GetButType00);
   tolua_constant(tolua_S,"BS_NORMAL",UIButtonBase::BS_NORMAL);
   tolua_constant(tolua_S,"BS_HOVERED",UIButtonBase::BS_HOVERED);
   tolua_constant(tolua_S,"BS_PRESSED",UIButtonBase::BS_PRESSED);
   tolua_constant(tolua_S,"BS_DISABLED",UIButtonBase::BS_DISABLED);
   tolua_constant(tolua_S,"BS_MAX_STATE",UIButtonBase::BS_MAX_STATE);
   tolua_function(tolua_S,"SetButtonState",tolua_PX2_UIButtonBase_SetButtonState00);
   tolua_function(tolua_S,"GetButtonState",tolua_PX2_UIButtonBase_GetButtonState00);
   tolua_function(tolua_S,"SetPicBox",tolua_PX2_UIButtonBase_SetPicBox00);
   tolua_function(tolua_S,"GetPicBoxAtState",tolua_PX2_UIButtonBase_GetPicBoxAtState00);
   tolua_function(tolua_S,"SetStateColor",tolua_PX2_UIButtonBase_SetStateColor00);
   tolua_function(tolua_S,"GetStateColor",tolua_PX2_UIButtonBase_GetStateColor00);
   tolua_function(tolua_S,"SetStateAlpha",tolua_PX2_UIButtonBase_SetStateAlpha00);
   tolua_function(tolua_S,"GetStateAlpha",tolua_PX2_UIButtonBase_GetStateAlpha00);
   tolua_function(tolua_S,"SetStateBrightness",tolua_PX2_UIButtonBase_SetStateBrightness00);
   tolua_function(tolua_S,"GetStateBrightness",tolua_PX2_UIButtonBase_GetStateBrightness00);
   tolua_function(tolua_S,"SetActivate",tolua_PX2_UIButtonBase_SetActivate00);
   tolua_function(tolua_S,"CreateAddText",tolua_PX2_UIButtonBase_CreateAddText00);
   tolua_function(tolua_S,"CreateAddText",tolua_PX2_UIButtonBase_CreateAddText01);
   tolua_function(tolua_S,"CreateAddText",tolua_PX2_UIButtonBase_CreateAddText02);
   tolua_function(tolua_S,"GetFText",tolua_PX2_UIButtonBase_GetFText00);
   tolua_function(tolua_S,"GetText",tolua_PX2_UIButtonBase_GetText00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIButton","UIButton","UIButtonBase",tolua_collect_UIButton);
  #else
  tolua_cclass(tolua_S,"UIButton","UIButton","UIButtonBase",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIButton");
   tolua_function(tolua_S,"new",tolua_PX2_UIButton_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UIButton_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UIButton_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UIButton_delete00);
   tolua_function(tolua_S,"New",tolua_PX2_UIButton_New00);
   tolua_function(tolua_S,"New",tolua_PX2_UIButton_New01);
   tolua_function(tolua_S,"Enable",tolua_PX2_UIButton_Enable00);
   tolua_constant(tolua_S,"ART_NORMAL",UIButton::ART_NORMAL);
   tolua_constant(tolua_S,"ART_DISABLE",UIButton::ART_DISABLE);
   tolua_constant(tolua_S,"ART_DISABLE_RECOVER",UIButton::ART_DISABLE_RECOVER);
   tolua_constant(tolua_S,"ART_MAX_TYPE",UIButton::ART_MAX_TYPE);
   tolua_function(tolua_S,"SetAfterReleasedType",tolua_PX2_UIButton_SetAfterReleasedType00);
   tolua_function(tolua_S,"GetAfterReleasedType",tolua_PX2_UIButton_GetAfterReleasedType00);
   tolua_function(tolua_S,"SetAfterReleasedRecoverTime",tolua_PX2_UIButton_SetAfterReleasedRecoverTime00);
   tolua_function(tolua_S,"GetAfterReleasedRecoverTime",tolua_PX2_UIButton_GetAfterReleasedRecoverTime00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIItem","UIItem","UIFrame",tolua_collect_UIItem);
  #else
  tolua_cclass(tolua_S,"UIItem","UIItem","UIFrame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIItem");
   tolua_function(tolua_S,"new",tolua_PX2_UIItem_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UIItem_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UIItem_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UIItem_delete00);
   tolua_function(tolua_S,"SetRootItem",tolua_PX2_UIItem_SetRootItem00);
   tolua_function(tolua_S,"IsRootItem",tolua_PX2_UIItem_IsRootItem00);
   tolua_function(tolua_S,"ShowItem",tolua_PX2_UIItem_ShowItem00);
   tolua_function(tolua_S,"IsShowItem",tolua_PX2_UIItem_IsShowItem00);
   tolua_function(tolua_S,"AddItem",tolua_PX2_UIItem_AddItem00);
   tolua_function(tolua_S,"OnChildAttached",tolua_PX2_UIItem_OnChildAttached00);
   tolua_function(tolua_S,"RemoveItem",tolua_PX2_UIItem_RemoveItem00);
   tolua_function(tolua_S,"RemoveAllChildItems",tolua_PX2_UIItem_RemoveAllChildItems00);
   tolua_function(tolua_S,"OnChildDetach",tolua_PX2_UIItem_OnChildDetach00);
   tolua_function(tolua_S,"GetNumChildItem",tolua_PX2_UIItem_GetNumChildItem00);
   tolua_function(tolua_S,"SetItemObject",tolua_PX2_UIItem_SetItemObject00);
   tolua_function(tolua_S,"GetItemObject",tolua_PX2_UIItem_GetItemObject00);
   tolua_function(tolua_S,"GetItemByObject",tolua_PX2_UIItem_GetItemByObject00);
   tolua_function(tolua_S,"CreateButArrow",tolua_PX2_UIItem_CreateButArrow00);
   tolua_function(tolua_S,"GetButArrow",tolua_PX2_UIItem_GetButArrow00);
   tolua_function(tolua_S,"DestoryArrowBut",tolua_PX2_UIItem_DestoryArrowBut00);
   tolua_function(tolua_S,"Expand",tolua_PX2_UIItem_Expand00);
   tolua_function(tolua_S,"IsExpand",tolua_PX2_UIItem_IsExpand00);
   tolua_function(tolua_S,"GetNumAllChildsExpand",tolua_PX2_UIItem_GetNumAllChildsExpand00);
   tolua_function(tolua_S,"SetLabel",tolua_PX2_UIItem_SetLabel00);
   tolua_function(tolua_S,"GetLabel",tolua_PX2_UIItem_GetLabel00);
   tolua_constant(tolua_S,"IAS_NONE",UIItem::IAS_NONE);
   tolua_constant(tolua_S,"IAS_ARROW0",UIItem::IAS_ARROW0);
   tolua_constant(tolua_S,"IAS_ARROW1",UIItem::IAS_ARROW1);
   tolua_constant(tolua_S,"IAS_MAX_STATE",UIItem::IAS_MAX_STATE);
   tolua_function(tolua_S,"SetIconArrowState",tolua_PX2_UIItem_SetIconArrowState00);
   tolua_function(tolua_S,"GetIconArrowState",tolua_PX2_UIItem_GetIconArrowState00);
   tolua_function(tolua_S,"GetButBack",tolua_PX2_UIItem_GetButBack00);
   tolua_function(tolua_S,"GetIcon",tolua_PX2_UIItem_GetIcon00);
   tolua_function(tolua_S,"GetFText",tolua_PX2_UIItem_GetFText00);
   tolua_function(tolua_S,"Select",tolua_PX2_UIItem_Select00);
   tolua_function(tolua_S,"IsSelected",tolua_PX2_UIItem_IsSelected00);
   tolua_function(tolua_S,"OnSizeChanged",tolua_PX2_UIItem_OnSizeChanged00);
   tolua_function(tolua_S,"SetLevelAdjust",tolua_PX2_UIItem_SetLevelAdjust00);
   tolua_function(tolua_S,"GetLevelAdjust",tolua_PX2_UIItem_GetLevelAdjust00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIList","UIList","UIFrame",tolua_collect_UIList);
  #else
  tolua_cclass(tolua_S,"UIList","UIList","UIFrame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIList");
   tolua_function(tolua_S,"new",tolua_PX2_UIList_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UIList_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UIList_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UIList_delete00);
   tolua_function(tolua_S,"SetSliderSize",tolua_PX2_UIList_SetSliderSize00);
   tolua_function(tolua_S,"GetSliderSize",tolua_PX2_UIList_GetSliderSize00);
   tolua_function(tolua_S,"SetItemHeight",tolua_PX2_UIList_SetItemHeight00);
   tolua_function(tolua_S,"GetItemHeight",tolua_PX2_UIList_GetItemHeight00);
   tolua_function(tolua_S,"AddItem",tolua_PX2_UIList_AddItem00);
   tolua_function(tolua_S,"RemoveAllItems",tolua_PX2_UIList_RemoveAllItems00);
   tolua_function(tolua_S,"GetContentHeight",tolua_PX2_UIList_GetContentHeight00);
   tolua_function(tolua_S,"AddSelectItem",tolua_PX2_UIList_AddSelectItem00);
   tolua_function(tolua_S,"ClearAllSelectItems",tolua_PX2_UIList_ClearAllSelectItems00);
   tolua_function(tolua_S,"GetSelectedItem",tolua_PX2_UIList_GetSelectedItem00);
   tolua_function(tolua_S,"OnSelected",tolua_PX2_UIList_OnSelected00);
   tolua_function(tolua_S,"GetSelectIndex",tolua_PX2_UIList_GetSelectIndex00);
   tolua_function(tolua_S,"SetTextColor",tolua_PX2_UIList_SetTextColor00);
   tolua_function(tolua_S,"GetTextColor",tolua_PX2_UIList_GetTextColor00);
   tolua_function(tolua_S,"OnSizeChanged",tolua_PX2_UIList_OnSizeChanged00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIComboBox","UIComboBox","UIFrame",tolua_collect_UIComboBox);
  #else
  tolua_cclass(tolua_S,"UIComboBox","UIComboBox","UIFrame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIComboBox");
   tolua_function(tolua_S,"new",tolua_PX2_UIComboBox_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UIComboBox_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UIComboBox_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UIComboBox_delete00);
   tolua_function(tolua_S,"AddChooseStr",tolua_PX2_UIComboBox_AddChooseStr00);
   tolua_function(tolua_S,"RemoveAllChooseStr",tolua_PX2_UIComboBox_RemoveAllChooseStr00);
   tolua_function(tolua_S,"GetNumChooseStr",tolua_PX2_UIComboBox_GetNumChooseStr00);
   tolua_function(tolua_S,"GetChooseStrByIndex",tolua_PX2_UIComboBox_GetChooseStrByIndex00);
   tolua_function(tolua_S,"SetChooseListHeightSameWithChooses",tolua_PX2_UIComboBox_SetChooseListHeightSameWithChooses00);
   tolua_function(tolua_S,"Choose",tolua_PX2_UIComboBox_Choose00);
   tolua_function(tolua_S,"GetChoose",tolua_PX2_UIComboBox_GetChoose00);
   tolua_function(tolua_S,"GetChooseStr",tolua_PX2_UIComboBox_GetChooseStr00);
   tolua_function(tolua_S,"GetSelectButton",tolua_PX2_UIComboBox_GetSelectButton00);
   tolua_function(tolua_S,"GetChooseList",tolua_PX2_UIComboBox_GetChooseList00);
   tolua_function(tolua_S,"SetTextColor",tolua_PX2_UIComboBox_SetTextColor00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIFPicBox","UIFPicBox","UIFrame",tolua_collect_UIFPicBox);
  #else
  tolua_cclass(tolua_S,"UIFPicBox","UIFPicBox","UIFrame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIFPicBox");
   tolua_function(tolua_S,"New",tolua_PX2_UIFPicBox_New00);
   tolua_function(tolua_S,"New",tolua_PX2_UIFPicBox_New01);
   tolua_function(tolua_S,"new",tolua_PX2_UIFPicBox_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UIFPicBox_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UIFPicBox_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UIFPicBox_delete00);
   tolua_function(tolua_S,"MakeSizeWithTex",tolua_PX2_UIFPicBox_MakeSizeWithTex00);
   tolua_function(tolua_S,"GetUIPicBox",tolua_PX2_UIFPicBox_GetUIPicBox00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIText","UIText","TriMesh",tolua_collect_UIText);
  #else
  tolua_cclass(tolua_S,"UIText","UIText","TriMesh",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIText");
   tolua_function(tolua_S,"new",tolua_PX2_UIText_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UIText_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UIText_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UIText_delete00);
   tolua_function(tolua_S,"New",tolua_PX2_UIText_New00);
   tolua_function(tolua_S,"New",tolua_PX2_UIText_New01);
   tolua_constant(tolua_S,"FT_FREETYPE",UIText::FT_FREETYPE);
   tolua_constant(tolua_S,"FT_BITMAP",UIText::FT_BITMAP);
   tolua_constant(tolua_S,"FT_MAXTYPE",UIText::FT_MAXTYPE);
   tolua_function(tolua_S,"GetFontType",tolua_PX2_UIText_GetFontType00);
   tolua_function(tolua_S,"SetFont",tolua_PX2_UIText_SetFont00);
   tolua_function(tolua_S,"SetFontBimMap",tolua_PX2_UIText_SetFontBimMap00);
   tolua_function(tolua_S,"GetFont",tolua_PX2_UIText_GetFont00);
   tolua_function(tolua_S,"SetText",tolua_PX2_UIText_SetText00);
   tolua_function(tolua_S,"GetText",tolua_PX2_UIText_GetText00);
   tolua_function(tolua_S,"SetKey",tolua_PX2_UIText_SetKey00);
   tolua_function(tolua_S,"GetKey",tolua_PX2_UIText_GetKey00);
   tolua_function(tolua_S,"SetFontStyle",tolua_PX2_UIText_SetFontStyle00);
   tolua_function(tolua_S,"GetFontStyle",tolua_PX2_UIText_GetFontStyle00);
   tolua_function(tolua_S,"IsItalic",tolua_PX2_UIText_IsItalic00);
   tolua_function(tolua_S,"IsUnderLine",tolua_PX2_UIText_IsUnderLine00);
   tolua_function(tolua_S,"SetDrawStyle",tolua_PX2_UIText_SetDrawStyle00);
   tolua_function(tolua_S,"GetDrawStyle",tolua_PX2_UIText_GetDrawStyle00);
   tolua_function(tolua_S,"SetFontColor",tolua_PX2_UIText_SetFontColor00);
   tolua_function(tolua_S,"GetFontColor",tolua_PX2_UIText_GetFontColor00);
   tolua_function(tolua_S,"SetFontAlpha",tolua_PX2_UIText_SetFontAlpha00);
   tolua_function(tolua_S,"GetFontAlpha",tolua_PX2_UIText_GetFontAlpha00);
   tolua_function(tolua_S,"SetBorderShadowColor",tolua_PX2_UIText_SetBorderShadowColor00);
   tolua_function(tolua_S,"GetBorderShadowColor",tolua_PX2_UIText_GetBorderShadowColor00);
   tolua_function(tolua_S,"SetBorderShadowAlpha",tolua_PX2_UIText_SetBorderShadowAlpha00);
   tolua_function(tolua_S,"GetBorderShadowAlpha",tolua_PX2_UIText_GetBorderShadowAlpha00);
   tolua_function(tolua_S,"SetShadowBorderSize",tolua_PX2_UIText_SetShadowBorderSize00);
   tolua_function(tolua_S,"GetShadowBorderSize",tolua_PX2_UIText_GetShadowBorderSize00);
   tolua_constant(tolua_S,"RU_NONE",UIText::RU_NONE);
   tolua_constant(tolua_S,"RU_ALIGNS",UIText::RU_ALIGNS);
   tolua_constant(tolua_S,"RU_CLIPWARP",UIText::RU_CLIPWARP);
   tolua_function(tolua_S,"SetRectUseage",tolua_PX2_UIText_SetRectUseage00);
   tolua_function(tolua_S,"GetRectUseage",tolua_PX2_UIText_GetRectUseage00);
   tolua_function(tolua_S,"SetRect",tolua_PX2_UIText_SetRect00);
   tolua_function(tolua_S,"GetRect",tolua_PX2_UIText_GetRect00);
   tolua_function(tolua_S,"SetOffset",tolua_PX2_UIText_SetOffset00);
   tolua_function(tolua_S,"GetOffset",tolua_PX2_UIText_GetOffset00);
   tolua_function(tolua_S,"SetSpace",tolua_PX2_UIText_SetSpace00);
   tolua_function(tolua_S,"GetSpace",tolua_PX2_UIText_GetSpace00);
   tolua_function(tolua_S,"SetAligns",tolua_PX2_UIText_SetAligns00);
   tolua_function(tolua_S,"GetAligns",tolua_PX2_UIText_GetAligns00);
   tolua_function(tolua_S,"GetHAlign",tolua_PX2_UIText_GetHAlign00);
   tolua_function(tolua_S,"GetVAlign",tolua_PX2_UIText_GetVAlign00);
   tolua_function(tolua_S,"SetAutoWarp",tolua_PX2_UIText_SetAutoWarp00);
   tolua_function(tolua_S,"IsAutoWarp",tolua_PX2_UIText_IsAutoWarp00);
   tolua_function(tolua_S,"SetDoCharTranslate",tolua_PX2_UIText_SetDoCharTranslate00);
   tolua_function(tolua_S,"IsDoCharTranslate",tolua_PX2_UIText_IsDoCharTranslate00);
   tolua_function(tolua_S,"SetPointAsPunctuation",tolua_PX2_UIText_SetPointAsPunctuation00);
   tolua_function(tolua_S,"IsPointAsPunctuation",tolua_PX2_UIText_IsPointAsPunctuation00);
   tolua_function(tolua_S,"SetFontScale",tolua_PX2_UIText_SetFontScale00);
   tolua_function(tolua_S,"GetFontScale",tolua_PX2_UIText_GetFontScale00);
   tolua_function(tolua_S,"SetColor",tolua_PX2_UIText_SetColor00);
   tolua_function(tolua_S,"SetAlpha",tolua_PX2_UIText_SetAlpha00);
   tolua_function(tolua_S,"SetFontWidthHeight",tolua_PX2_UIText_SetFontWidthHeight00);
   tolua_function(tolua_S,"SetFontWidth",tolua_PX2_UIText_SetFontWidth00);
   tolua_function(tolua_S,"GetFontWidth",tolua_PX2_UIText_GetFontWidth00);
   tolua_function(tolua_S,"SetFontHeight",tolua_PX2_UIText_SetFontHeight00);
   tolua_function(tolua_S,"GetFontHeight",tolua_PX2_UIText_GetFontHeight00);
   tolua_function(tolua_S,"GetTextWidth",tolua_PX2_UIText_GetTextWidth00);
   tolua_function(tolua_S,"GetTextWidth",tolua_PX2_UIText_GetTextWidth01);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIInputText","UIInputText","UIText",tolua_collect_UIInputText);
  #else
  tolua_cclass(tolua_S,"UIInputText","UIInputText","UIText",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIInputText");
   tolua_function(tolua_S,"new",tolua_PX2_UIInputText_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UIInputText_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UIInputText_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UIInputText_delete00);
   tolua_function(tolua_S,"SetRealText",tolua_PX2_UIInputText_SetRealText00);
   tolua_function(tolua_S,"GetRealText",tolua_PX2_UIInputText_GetRealText00);
   tolua_function(tolua_S,"SetPassword",tolua_PX2_UIInputText_SetPassword00);
   tolua_function(tolua_S,"IsPassword",tolua_PX2_UIInputText_IsPassword00);
   tolua_function(tolua_S,"SetFixedWidth",tolua_PX2_UIInputText_SetFixedWidth00);
   tolua_function(tolua_S,"GetFixedWidth",tolua_PX2_UIInputText_GetFixedWidth00);
   tolua_function(tolua_S,"GetTextWidth",tolua_PX2_UIInputText_GetTextWidth00);
   tolua_variable(tolua_S,"__IMEDelegate__",tolua_get_UIInputText___IMEDelegate__,NULL);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIFText","UIFText","UIFrame",tolua_collect_UIFText);
  #else
  tolua_cclass(tolua_S,"UIFText","UIFText","UIFrame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIFText");
   tolua_function(tolua_S,"new",tolua_PX2_UIFText_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UIFText_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UIFText_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UIFText_delete00);
   tolua_function(tolua_S,"New",tolua_PX2_UIFText_New00);
   tolua_function(tolua_S,"New",tolua_PX2_UIFText_New01);
   tolua_function(tolua_S,"GetText",tolua_PX2_UIFText_GetText00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UICheckButton","UICheckButton","UIButtonBase",tolua_collect_UICheckButton);
  #else
  tolua_cclass(tolua_S,"UICheckButton","UICheckButton","UIButtonBase",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UICheckButton");
   tolua_function(tolua_S,"new",tolua_PX2_UICheckButton_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UICheckButton_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UICheckButton_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UICheckButton_delete00);
   tolua_function(tolua_S,"Check",tolua_PX2_UICheckButton_Check00);
   tolua_function(tolua_S,"IsCheck",tolua_PX2_UICheckButton_IsCheck00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIProgressBar","UIProgressBar","UIFrame",tolua_collect_UIProgressBar);
  #else
  tolua_cclass(tolua_S,"UIProgressBar","UIProgressBar","UIFrame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIProgressBar");
   tolua_function(tolua_S,"new",tolua_PX2_UIProgressBar_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UIProgressBar_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UIProgressBar_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UIProgressBar_delete00);
   tolua_function(tolua_S,"SetBackPicBox",tolua_PX2_UIProgressBar_SetBackPicBox00);
   tolua_function(tolua_S,"SetProgressPicBox",tolua_PX2_UIProgressBar_SetProgressPicBox00);
   tolua_function(tolua_S,"SetOverPicBox",tolua_PX2_UIProgressBar_SetOverPicBox00);
   tolua_function(tolua_S,"GetBackPicBox",tolua_PX2_UIProgressBar_GetBackPicBox00);
   tolua_function(tolua_S,"GetProgressPicBox",tolua_PX2_UIProgressBar_GetProgressPicBox00);
   tolua_function(tolua_S,"GetOverPicBox",tolua_PX2_UIProgressBar_GetOverPicBox00);
   tolua_function(tolua_S,"OnPivotChanged",tolua_PX2_UIProgressBar_OnPivotChanged00);
   tolua_function(tolua_S,"OnSizeChanged",tolua_PX2_UIProgressBar_OnSizeChanged00);
   tolua_function(tolua_S,"SetProgress",tolua_PX2_UIProgressBar_SetProgress00);
   tolua_function(tolua_S,"GetProgress",tolua_PX2_UIProgressBar_GetProgress00);
   tolua_function(tolua_S,"SetProgressAnimInit",tolua_PX2_UIProgressBar_SetProgressAnimInit00);
   tolua_function(tolua_S,"SetProgressAnim",tolua_PX2_UIProgressBar_SetProgressAnim00);
   tolua_function(tolua_S,"SetProgressAnimSpeed",tolua_PX2_UIProgressBar_SetProgressAnimSpeed00);
   tolua_function(tolua_S,"GetProgressAnimSpeed",tolua_PX2_UIProgressBar_GetProgressAnimSpeed00);
   tolua_function(tolua_S,"GetProgressBarCtrl",tolua_PX2_UIProgressBar_GetProgressBarCtrl00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIEditBox","UIEditBox","UIFrame",tolua_collect_UIEditBox);
  #else
  tolua_cclass(tolua_S,"UIEditBox","UIEditBox","UIFrame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIEditBox");
   tolua_function(tolua_S,"new",tolua_PX2_UIEditBox_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UIEditBox_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UIEditBox_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UIEditBox_delete00);
   tolua_function(tolua_S,"New",tolua_PX2_UIEditBox_New00);
   tolua_function(tolua_S,"New",tolua_PX2_UIEditBox_New01);
   tolua_function(tolua_S,"Enable",tolua_PX2_UIEditBox_Enable00);
   tolua_function(tolua_S,"SetPassword",tolua_PX2_UIEditBox_SetPassword00);
   tolua_function(tolua_S,"IsPassword",tolua_PX2_UIEditBox_IsPassword00);
   tolua_function(tolua_S,"GetBackPicBox",tolua_PX2_UIEditBox_GetBackPicBox00);
   tolua_function(tolua_S,"SetText",tolua_PX2_UIEditBox_SetText00);
   tolua_function(tolua_S,"GetText",tolua_PX2_UIEditBox_GetText00);
   tolua_function(tolua_S,"GetRealText",tolua_PX2_UIEditBox_GetRealText00);
   tolua_function(tolua_S,"GetInputText",tolua_PX2_UIEditBox_GetInputText00);
   tolua_function(tolua_S,"SetFixedWidth",tolua_PX2_UIEditBox_SetFixedWidth00);
   tolua_function(tolua_S,"GetFixedWidth",tolua_PX2_UIEditBox_GetFixedWidth00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIRound","UIRound","UIFrame",tolua_collect_UIRound);
  #else
  tolua_cclass(tolua_S,"UIRound","UIRound","UIFrame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIRound");
   tolua_function(tolua_S,"new",tolua_PX2_UIRound_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UIRound_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UIRound_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UIRound_delete00);
   tolua_function(tolua_S,"GetBack",tolua_PX2_UIRound_GetBack00);
   tolua_function(tolua_S,"GetButton",tolua_PX2_UIRound_GetButton00);
   tolua_function(tolua_S,"SetDragable",tolua_PX2_UIRound_SetDragable00);
   tolua_function(tolua_S,"IsDragable",tolua_PX2_UIRound_IsDragable00);
   tolua_function(tolua_S,"GetDraggingDir",tolua_PX2_UIRound_GetDraggingDir00);
   tolua_function(tolua_S,"GetDraggingPercent",tolua_PX2_UIRound_GetDraggingPercent00);
   tolua_function(tolua_S,"GetDraggedDir",tolua_PX2_UIRound_GetDraggedDir00);
   tolua_function(tolua_S,"GetDraggedPercent",tolua_PX2_UIRound_GetDraggedPercent00);
   tolua_function(tolua_S,"GetDragingDirSimple",tolua_PX2_UIRound_GetDragingDirSimple00);
   tolua_function(tolua_S,"GetCurPickWorldPos",tolua_PX2_UIRound_GetCurPickWorldPos00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIVlc","UIVlc","UIFrame",tolua_collect_UIVlc);
  #else
  tolua_cclass(tolua_S,"UIVlc","UIVlc","UIFrame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIVlc");
   tolua_function(tolua_S,"new",tolua_PX2_UIVlc_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UIVlc_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UIVlc_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UIVlc_delete00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIAuiFrame","UIAuiFrame","UIFrame",tolua_collect_UIAuiFrame);
  #else
  tolua_cclass(tolua_S,"UIAuiFrame","UIAuiFrame","UIFrame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIAuiFrame");
   tolua_function(tolua_S,"new",tolua_PX2_UIAuiFrame_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UIAuiFrame_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UIAuiFrame_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UIAuiFrame_delete00);
   tolua_function(tolua_S,"New",tolua_PX2_UIAuiFrame_New00);
   tolua_function(tolua_S,"New",tolua_PX2_UIAuiFrame_New01);
   tolua_function(tolua_S,"SetSplitterSize",tolua_PX2_UIAuiFrame_SetSplitterSize00);
   tolua_variable(tolua_S,"SpLeft",tolua_get_UIAuiFrame_SpLeft,tolua_set_UIAuiFrame_SpLeft);
   tolua_variable(tolua_S,"SpRight",tolua_get_UIAuiFrame_SpRight,tolua_set_UIAuiFrame_SpRight);
   tolua_variable(tolua_S,"SpBottom",tolua_get_UIAuiFrame_SpBottom,tolua_set_UIAuiFrame_SpBottom);
   tolua_variable(tolua_S,"SpTop",tolua_get_UIAuiFrame_SpTop,tolua_set_UIAuiFrame_SpTop);
   tolua_variable(tolua_S,"AuiBlockDefault",tolua_get_UIAuiFrame_AuiBlockDefault,tolua_set_UIAuiFrame_AuiBlockDefault);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UISplitterFrame","UISplitterFrame","UIFrame",tolua_collect_UISplitterFrame);
  #else
  tolua_cclass(tolua_S,"UISplitterFrame","UISplitterFrame","UIFrame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UISplitterFrame");
   tolua_function(tolua_S,"new",tolua_PX2_UISplitterFrame_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UISplitterFrame_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UISplitterFrame_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UISplitterFrame_delete00);
   tolua_function(tolua_S,"New",tolua_PX2_UISplitterFrame_New00);
   tolua_function(tolua_S,"New",tolua_PX2_UISplitterFrame_New01);
   tolua_function(tolua_S,"IsHor",tolua_PX2_UISplitterFrame_IsHor00);
   tolua_constant(tolua_S,"DT_VALUE",UISplitterFrame::DT_VALUE);
   tolua_constant(tolua_S,"DT_PERCENT",UISplitterFrame::DT_PERCENT);
   tolua_constant(tolua_S,"DT_MAX_TYPE",UISplitterFrame::DT_MAX_TYPE);
   tolua_function(tolua_S,"SetDragType",tolua_PX2_UISplitterFrame_SetDragType00);
   tolua_function(tolua_S,"GetDragType",tolua_PX2_UISplitterFrame_GetDragType00);
   tolua_function(tolua_S,"SetDragRange",tolua_PX2_UISplitterFrame_SetDragRange00);
   tolua_function(tolua_S,"GetDragRange",tolua_PX2_UISplitterFrame_GetDragRange00);
   tolua_constant(tolua_S,"PT_NONE",UISplitterFrame::PT_NONE);
   tolua_constant(tolua_S,"PT_LEFT",UISplitterFrame::PT_LEFT);
   tolua_constant(tolua_S,"PT_RIGHT",UISplitterFrame::PT_RIGHT);
   tolua_constant(tolua_S,"PT_BOTTOM",UISplitterFrame::PT_BOTTOM);
   tolua_constant(tolua_S,"PT_TOP",UISplitterFrame::PT_TOP);
   tolua_constant(tolua_S,"PT_MAX_TYPE",UISplitterFrame::PT_MAX_TYPE);
   tolua_function(tolua_S,"SetPosType",tolua_PX2_UISplitterFrame_SetPosType00);
   tolua_function(tolua_S,"GetPosType",tolua_PX2_UISplitterFrame_GetPosType00);
   tolua_function(tolua_S,"SetDragable",tolua_PX2_UISplitterFrame_SetDragable00);
   tolua_function(tolua_S,"IsDragable",tolua_PX2_UISplitterFrame_IsDragable00);
   tolua_function(tolua_S,"SetDraging",tolua_PX2_UISplitterFrame_SetDraging00);
   tolua_function(tolua_S,"IsDraging",tolua_PX2_UISplitterFrame_IsDraging00);
   tolua_function(tolua_S,"OnDraging",tolua_PX2_UISplitterFrame_OnDraging00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UITabFrame","UITabFrame","UIFrame",tolua_collect_UITabFrame);
  #else
  tolua_cclass(tolua_S,"UITabFrame","UITabFrame","UIFrame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UITabFrame");
   tolua_function(tolua_S,"new",tolua_PX2_UITabFrame_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UITabFrame_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UITabFrame_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UITabFrame_delete00);
   tolua_function(tolua_S,"New",tolua_PX2_UITabFrame_New00);
   tolua_function(tolua_S,"New",tolua_PX2_UITabFrame_New01);
   tolua_constant(tolua_S,"LPT_TOP",UITabFrame::LPT_TOP);
   tolua_constant(tolua_S,"LPT_BOTTOM",UITabFrame::LPT_BOTTOM);
   tolua_constant(tolua_S,"LPT_LEFT",UITabFrame::LPT_LEFT);
   tolua_constant(tolua_S,"LPT_RIGHT",UITabFrame::LPT_RIGHT);
   tolua_constant(tolua_S,"LPT_MAX_TYPE",UITabFrame::LPT_MAX_TYPE);
   tolua_function(tolua_S,"SetLayoutPos",tolua_PX2_UITabFrame_SetLayoutPos00);
   tolua_function(tolua_S,"GetLayoutPos",tolua_PX2_UITabFrame_GetLayoutPos00);
   tolua_function(tolua_S,"SetTabBarHeight",tolua_PX2_UITabFrame_SetTabBarHeight00);
   tolua_function(tolua_S,"GetTabBarHeight",tolua_PX2_UITabFrame_GetTabBarHeight00);
   tolua_function(tolua_S,"SetTabWidth",tolua_PX2_UITabFrame_SetTabWidth00);
   tolua_function(tolua_S,"GetTabWidth",tolua_PX2_UITabFrame_GetTabWidth00);
   tolua_function(tolua_S,"SetTabHeight",tolua_PX2_UITabFrame_SetTabHeight00);
   tolua_function(tolua_S,"GetTabHeight",tolua_PX2_UITabFrame_GetTabHeight00);
   tolua_constant(tolua_S,"TLT_FIX",UITabFrame::TLT_FIX);
   tolua_constant(tolua_S,"TLT_SCALE",UITabFrame::TLT_SCALE);
   tolua_constant(tolua_S,"TLT_MAX_TYPE",UITabFrame::TLT_MAX_TYPE);
   tolua_function(tolua_S,"SetTabLayoutType",tolua_PX2_UITabFrame_SetTabLayoutType00);
   tolua_function(tolua_S,"GetTabLayoutType",tolua_PX2_UITabFrame_GetTabLayoutType00);
   tolua_function(tolua_S,"OnSizeChanged",tolua_PX2_UITabFrame_OnSizeChanged00);
   tolua_function(tolua_S,"AddTab",tolua_PX2_UITabFrame_AddTab00);
   tolua_function(tolua_S,"IsHasTab",tolua_PX2_UITabFrame_IsHasTab00);
   tolua_function(tolua_S,"GetTab",tolua_PX2_UITabFrame_GetTab00);
   tolua_function(tolua_S,"RemoveTab",tolua_PX2_UITabFrame_RemoveTab00);
   tolua_function(tolua_S,"RemoveAllTabs",tolua_PX2_UITabFrame_RemoveAllTabs00);
   tolua_function(tolua_S,"GetNumTabs",tolua_PX2_UITabFrame_GetNumTabs00);
   tolua_function(tolua_S,"SetActiveTab",tolua_PX2_UITabFrame_SetActiveTab00);
   tolua_function(tolua_S,"GetActiveTab",tolua_PX2_UITabFrame_GetActiveTab00);
   tolua_function(tolua_S,"GetTabButton",tolua_PX2_UITabFrame_GetTabButton00);
   tolua_function(tolua_S,"GetTitleBarFrame",tolua_PX2_UITabFrame_GetTitleBarFrame00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIWebFrame","UIWebFrame","UIFrame",tolua_collect_UIWebFrame);
  #else
  tolua_cclass(tolua_S,"UIWebFrame","UIWebFrame","UIFrame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIWebFrame");
   tolua_function(tolua_S,"new",tolua_PX2_UIWebFrame_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UIWebFrame_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UIWebFrame_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UIWebFrame_delete00);
   tolua_function(tolua_S,"New",tolua_PX2_UIWebFrame_New00);
   tolua_function(tolua_S,"New",tolua_PX2_UIWebFrame_New01);
   tolua_function(tolua_S,"ShowNativeView",tolua_PX2_UIWebFrame_ShowNativeView00);
   tolua_function(tolua_S,"IsShowNativeView",tolua_PX2_UIWebFrame_IsShowNativeView00);
   tolua_function(tolua_S,"SetUpdateToTex",tolua_PX2_UIWebFrame_SetUpdateToTex00);
   tolua_function(tolua_S,"IsUpdateToTex",tolua_PX2_UIWebFrame_IsUpdateToTex00);
   tolua_function(tolua_S,"LoadHTMLString",tolua_PX2_UIWebFrame_LoadHTMLString00);
   tolua_function(tolua_S,"LoadURL",tolua_PX2_UIWebFrame_LoadURL00);
   tolua_function(tolua_S,"LoadFile",tolua_PX2_UIWebFrame_LoadFile00);
   tolua_function(tolua_S,"StopLoading",tolua_PX2_UIWebFrame_StopLoading00);
   tolua_function(tolua_S,"Reload",tolua_PX2_UIWebFrame_Reload00);
   tolua_function(tolua_S,"CanGoBack",tolua_PX2_UIWebFrame_CanGoBack00);
   tolua_function(tolua_S,"CanGoForward",tolua_PX2_UIWebFrame_CanGoForward00);
   tolua_function(tolua_S,"GoBack",tolua_PX2_UIWebFrame_GoBack00);
   tolua_function(tolua_S,"GoForward",tolua_PX2_UIWebFrame_GoForward00);
   tolua_function(tolua_S,"EvaluateJS",tolua_PX2_UIWebFrame_EvaluateJS00);
   tolua_function(tolua_S,"SetScalesPageToFit",tolua_PX2_UIWebFrame_SetScalesPageToFit00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIGridFrame","UIGridFrame","UIFrame",tolua_collect_UIGridFrame);
  #else
  tolua_cclass(tolua_S,"UIGridFrame","UIGridFrame","UIFrame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIGridFrame");
   tolua_function(tolua_S,"new",tolua_PX2_UIGridFrame_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UIGridFrame_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UIGridFrame_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UIGridFrame_delete00);
   tolua_function(tolua_S,"New",tolua_PX2_UIGridFrame_New00);
   tolua_function(tolua_S,"New",tolua_PX2_UIGridFrame_New01);
   tolua_function(tolua_S,"AddItem",tolua_PX2_UIGridFrame_AddItem00);
   tolua_function(tolua_S,"RemoveAllItems",tolua_PX2_UIGridFrame_RemoveAllItems00);
   tolua_function(tolua_S,"SetSliderPercent",tolua_PX2_UIGridFrame_SetSliderPercent00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"LogicManager","LogicManager","",NULL);
  tolua_beginmodule(tolua_S,"LogicManager");
   tolua_function(tolua_S,"BeginAddFunObj",tolua_PX2_LogicManager_BeginAddFunObj00);
   tolua_function(tolua_S,"BeginAddClassFunObj",tolua_PX2_LogicManager_BeginAddClassFunObj00);
   tolua_function(tolua_S,"BeginAddClassFunObj",tolua_PX2_LogicManager_BeginAddClassFunObj01);
   tolua_function(tolua_S,"BeginAddClassFunObj",tolua_PX2_LogicManager_BeginAddClassFunObj02);
   tolua_function(tolua_S,"BeginAddParam",tolua_PX2_LogicManager_BeginAddParam00);
   tolua_function(tolua_S,"BeginAddEvent",tolua_PX2_LogicManager_BeginAddEvent00);
   tolua_function(tolua_S,"AddInput",tolua_PX2_LogicManager_AddInput00);
   tolua_function(tolua_S,"AddInputChar",tolua_PX2_LogicManager_AddInputChar00);
   tolua_function(tolua_S,"AddInputInt",tolua_PX2_LogicManager_AddInputInt00);
   tolua_function(tolua_S,"AddInputFloat",tolua_PX2_LogicManager_AddInputFloat00);
   tolua_function(tolua_S,"AddInputBool",tolua_PX2_LogicManager_AddInputBool00);
   tolua_function(tolua_S,"AddInputString",tolua_PX2_LogicManager_AddInputString00);
   tolua_function(tolua_S,"AddInputObj",tolua_PX2_LogicManager_AddInputObj00);
   tolua_function(tolua_S,"AddOutput",tolua_PX2_LogicManager_AddOutput00);
   tolua_function(tolua_S,"EndAddFun_Ctrl",tolua_PX2_LogicManager_EndAddFun_Ctrl00);
   tolua_function(tolua_S,"EndAddFun_Param",tolua_PX2_LogicManager_EndAddFun_Param00);
   tolua_function(tolua_S,"EndAddFun_Operator",tolua_PX2_LogicManager_EndAddFun_Operator00);
   tolua_function(tolua_S,"EndAddFun_General",tolua_PX2_LogicManager_EndAddFun_General00);
   tolua_function(tolua_S,"EndAddFun_Event",tolua_PX2_LogicManager_EndAddFun_Event00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Project","Project","",NULL);
  tolua_beginmodule(tolua_S,"Project");
   tolua_function(tolua_S,"SetScene",tolua_PX2_Project_SetScene00);
   tolua_function(tolua_S,"GetScene",tolua_PX2_Project_GetScene00);
   tolua_function(tolua_S,"GetSceneFilename",tolua_PX2_Project_GetSceneFilename00);
   tolua_function(tolua_S,"SetUI",tolua_PX2_Project_SetUI00);
   tolua_function(tolua_S,"GetUI",tolua_PX2_Project_GetUI00);
   tolua_function(tolua_S,"GetUIFilename",tolua_PX2_Project_GetUIFilename00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Scene","Scene","Node",tolua_collect_Scene);
  #else
  tolua_cclass(tolua_S,"Scene","Scene","Node",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Scene");
   tolua_function(tolua_S,"new",tolua_PX2_Scene_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Scene_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Scene_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Scene_delete00);
   tolua_function(tolua_S,"New",tolua_PX2_Scene_New00);
   tolua_function(tolua_S,"New",tolua_PX2_Scene_New01);
   tolua_function(tolua_S,"GetAmbientRegionController",tolua_PX2_Scene_GetAmbientRegionController00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Application","Application","",NULL);
  tolua_beginmodule(tolua_S,"Application");
   tolua_constant(tolua_S,"PLT_WINDOWS",Application::PLT_WINDOWS);
   tolua_constant(tolua_S,"PLT_ANDROID",Application::PLT_ANDROID);
   tolua_constant(tolua_S,"PLT_IOS",Application::PLT_IOS);
   tolua_constant(tolua_S,"PLT_MAX_TYPE",Application::PLT_MAX_TYPE);
   tolua_function(tolua_S,"GetPlatformType",tolua_PX2_Application_GetPlatformType00);
   tolua_function(tolua_S,"GetElapsedTime",tolua_PX2_Application_GetElapsedTime00);
   tolua_function(tolua_S,"SetScreenSize",tolua_PX2_Application_SetScreenSize00);
   tolua_function(tolua_S,"GetScreenSize",tolua_PX2_Application_GetScreenSize00);
   tolua_constant(tolua_S,"PLM_SIMPLE",Application::PLM_SIMPLE);
   tolua_constant(tolua_S,"PLM_LOGIC",Application::PLM_LOGIC);
   tolua_constant(tolua_S,"PLM_MAX_MODE",Application::PLM_MAX_MODE);
   tolua_function(tolua_S,"LoadBoost",tolua_PX2_Application_LoadBoost00);
   tolua_function(tolua_S,"GetBoostSize",tolua_PX2_Application_GetBoostSize00);
   tolua_function(tolua_S,"GetBoostProjectName",tolua_PX2_Application_GetBoostProjectName00);
   tolua_function(tolua_S,"GetPlayLogicMode",tolua_PX2_Application_GetPlayLogicMode00);
   tolua_function(tolua_S,"GetPlayLogicModeStr",tolua_PX2_Application_GetPlayLogicModeStr00);
   tolua_function(tolua_S,"IsShowInfo",tolua_PX2_Application_IsShowInfo00);
   tolua_function(tolua_S,"SetBoostProjectName",tolua_PX2_Application_SetBoostProjectName00);
   tolua_function(tolua_S,"SetBoostSize",tolua_PX2_Application_SetBoostSize00);
   tolua_function(tolua_S,"SetBoostSize",tolua_PX2_Application_SetBoostSize01);
   tolua_function(tolua_S,"SetPlayLogicMode",tolua_PX2_Application_SetPlayLogicMode00);
   tolua_function(tolua_S,"SetShowInfo",tolua_PX2_Application_SetShowInfo00);
   tolua_function(tolua_S,"NewProject",tolua_PX2_Application_NewProject00);
   tolua_function(tolua_S,"LoadProject",tolua_PX2_Application_LoadProject00);
   tolua_function(tolua_S,"SaveProject",tolua_PX2_Application_SaveProject00);
   tolua_function(tolua_S,"SaveProjectAs",tolua_PX2_Application_SaveProjectAs00);
   tolua_function(tolua_S,"CloseProject",tolua_PX2_Application_CloseProject00);
   tolua_function(tolua_S,"GetProjectFilePath",tolua_PX2_Application_GetProjectFilePath00);
   tolua_function(tolua_S,"NewScene",tolua_PX2_Application_NewScene00);
   tolua_function(tolua_S,"LoadScene",tolua_PX2_Application_LoadScene00);
   tolua_function(tolua_S,"SaveScene",tolua_PX2_Application_SaveScene00);
   tolua_function(tolua_S,"SaveSceneAs",tolua_PX2_Application_SaveSceneAs00);
   tolua_function(tolua_S,"CloseScene",tolua_PX2_Application_CloseScene00);
   tolua_function(tolua_S,"LoadUI",tolua_PX2_Application_LoadUI00);
   tolua_function(tolua_S,"CloseUI",tolua_PX2_Application_CloseUI00);
   tolua_constant(tolua_S,"PT_NONE",Application::PT_NONE);
   tolua_constant(tolua_S,"PT_SIMULATE",Application::PT_SIMULATE);
   tolua_constant(tolua_S,"PT_PLAY",Application::PT_PLAY);
   tolua_constant(tolua_S,"PT_MAX_TYPE",Application::PT_MAX_TYPE);
   tolua_function(tolua_S,"Play",tolua_PX2_Application_Play00);
   tolua_function(tolua_S,"GetPlayType",tolua_PX2_Application_GetPlayType00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Creater","Creater","",NULL);
  tolua_beginmodule(tolua_S,"Creater");
   tolua_function(tolua_S,"CreateMovable_Box",tolua_PX2_Creater_CreateMovable_Box00);
   tolua_function(tolua_S,"CreateMovable_Sphere",tolua_PX2_Creater_CreateMovable_Sphere00);
   tolua_function(tolua_S,"CreateMovable_Rectangle",tolua_PX2_Creater_CreateMovable_Rectangle00);
   tolua_function(tolua_S,"CreateNode",tolua_PX2_Creater_CreateNode00);
   tolua_function(tolua_S,"CreateNode_Camera",tolua_PX2_Creater_CreateNode_Camera00);
   tolua_function(tolua_S,"CreateNode_Model",tolua_PX2_Creater_CreateNode_Model00);
   tolua_function(tolua_S,"CreateMovable_FromRes",tolua_PX2_Creater_CreateMovable_FromRes00);
   tolua_function(tolua_S,"CreateScriptController_FromRes",tolua_PX2_Creater_CreateScriptController_FromRes00);
   tolua_function(tolua_S,"CreateSkyBox",tolua_PX2_Creater_CreateSkyBox00);
   tolua_function(tolua_S,"CreateTerrain",tolua_PX2_Creater_CreateTerrain00);
   tolua_function(tolua_S,"CreateParticleEmitter",tolua_PX2_Creater_CreateParticleEmitter00);
   tolua_function(tolua_S,"CreateBillboard",tolua_PX2_Creater_CreateBillboard00);
   tolua_function(tolua_S,"CreateBeamEmitter",tolua_PX2_Creater_CreateBeamEmitter00);
   tolua_function(tolua_S,"CreateRibbonEmitter",tolua_PX2_Creater_CreateRibbonEmitter00);
   tolua_function(tolua_S,"CreateSoundable",tolua_PX2_Creater_CreateSoundable00);
   tolua_function(tolua_S,"CreateEffectModule",tolua_PX2_Creater_CreateEffectModule00);
   tolua_function(tolua_S,"CreateUIFrame",tolua_PX2_Creater_CreateUIFrame00);
   tolua_function(tolua_S,"CreateUIFPicBox",tolua_PX2_Creater_CreateUIFPicBox00);
   tolua_function(tolua_S,"CreateUIFText",tolua_PX2_Creater_CreateUIFText00);
   tolua_function(tolua_S,"CreateUIButton",tolua_PX2_Creater_CreateUIButton00);
   tolua_function(tolua_S,"CreateUICheckButton",tolua_PX2_Creater_CreateUICheckButton00);
   tolua_function(tolua_S,"CreateUIComboBox",tolua_PX2_Creater_CreateUIComboBox00);
   tolua_function(tolua_S,"CreateUIEditBox",tolua_PX2_Creater_CreateUIEditBox00);
   tolua_function(tolua_S,"CreateUIProgressBar",tolua_PX2_Creater_CreateUIProgressBar00);
   tolua_function(tolua_S,"CreateUIRound",tolua_PX2_Creater_CreateUIRound00);
   tolua_function(tolua_S,"CreateICC_Alpha",tolua_PX2_Creater_CreateICC_Alpha00);
   tolua_function(tolua_S,"CreateICC_Color",tolua_PX2_Creater_CreateICC_Color00);
   tolua_function(tolua_S,"CreateICC_UniformScale",tolua_PX2_Creater_CreateICC_UniformScale00);
   tolua_function(tolua_S,"CreateICC_Scale",tolua_PX2_Creater_CreateICC_Scale00);
   tolua_function(tolua_S,"CreateICC_Rotate",tolua_PX2_Creater_CreateICC_Rotate00);
   tolua_function(tolua_S,"CreateICC_Translate",tolua_PX2_Creater_CreateICC_Translate00);
   tolua_function(tolua_S,"CreateTriggerController",tolua_PX2_Creater_CreateTriggerController00);
   tolua_function(tolua_S,"AddObject",tolua_PX2_Creater_AddObject00);
   tolua_function(tolua_S,"RemoveObject",tolua_PX2_Creater_RemoveObject00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"URDoManager","URDoManager","",NULL);
  tolua_beginmodule(tolua_S,"URDoManager");
   tolua_function(tolua_S,"Clear",tolua_PX2_URDoManager_Clear00);
   tolua_function(tolua_S,"IsHasUnDo",tolua_PX2_URDoManager_IsHasUnDo00);
   tolua_function(tolua_S,"IsHasReDo",tolua_PX2_URDoManager_IsHasReDo00);
   tolua_function(tolua_S,"UnDo",tolua_PX2_URDoManager_UnDo00);
   tolua_function(tolua_S,"ReDo",tolua_PX2_URDoManager_ReDo00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Cast","Cast","",NULL);
  tolua_beginmodule(tolua_S,"Cast");
   tolua_function(tolua_S,"ToController",tolua_PX2_Cast_ToController00);
   tolua_function(tolua_S,"ToControlledable",tolua_PX2_Cast_ToControlledable00);
   tolua_function(tolua_S,"ToMovable",tolua_PX2_Cast_ToMovable00);
   tolua_function(tolua_S,"ToNode",tolua_PX2_Cast_ToNode00);
   tolua_function(tolua_S,"ToEffectController",tolua_PX2_Cast_ToEffectController00);
   tolua_function(tolua_S,"ToO",tolua_PX2_Cast_ToO00);
   tolua_function(tolua_S,"ToSC",tolua_PX2_Cast_ToSC00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UI","UI","UIFrame",tolua_collect_UI);
  #else
  tolua_cclass(tolua_S,"UI","UI","UIFrame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UI");
   tolua_function(tolua_S,"new",tolua_PX2_UI_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UI_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UI_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UI_delete00);
   tolua_function(tolua_S,"New",tolua_PX2_UI_New00);
   tolua_function(tolua_S,"New",tolua_PX2_UI_New01);
   tolua_function(tolua_S,"GetCameras",tolua_PX2_UI_GetCameras00);
   tolua_function(tolua_S,"GetFirstCamera",tolua_PX2_UI_GetFirstCamera00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"EngineEventHandler","EngineEventHandler","",NULL);
  tolua_beginmodule(tolua_S,"EngineEventHandler");
   tolua_function(tolua_S,"AddEventCall",tolua_PX2_EngineEventHandler_AddEventCall00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"TriggerController","TriggerController","Controller",tolua_collect_TriggerController);
  #else
  tolua_cclass(tolua_S,"TriggerController","TriggerController","Controller",NULL);
  #endif
  tolua_beginmodule(tolua_S,"TriggerController");
   tolua_function(tolua_S,"new",tolua_PX2_TriggerController_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_TriggerController_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_TriggerController_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_TriggerController_delete00);
   tolua_constant(tolua_S,"AT_SPHERE",TriggerController::AT_SPHERE);
   tolua_constant(tolua_S,"AT_BOX",TriggerController::AT_BOX);
   tolua_constant(tolua_S,"AT_MAX_TYPE",TriggerController::AT_MAX_TYPE);
   tolua_function(tolua_S,"SetAreaType",tolua_PX2_TriggerController_SetAreaType00);
   tolua_function(tolua_S,"GetAreaType",tolua_PX2_TriggerController_GetAreaType00);
   tolua_function(tolua_S,"SetAreaParam",tolua_PX2_TriggerController_SetAreaParam00);
   tolua_function(tolua_S,"GetAreaParam",tolua_PX2_TriggerController_GetAreaParam00);
   tolua_function(tolua_S,"IsPointIn",tolua_PX2_TriggerController_IsPointIn00);
   tolua_constant(tolua_S,"TT_ENTER_ONCE",TriggerController::TT_ENTER_ONCE);
   tolua_constant(tolua_S,"TT_ENTER_EVERYENTER",TriggerController::TT_ENTER_EVERYENTER);
   tolua_constant(tolua_S,"TT_MAX_TYPE",TriggerController::TT_MAX_TYPE);
   tolua_function(tolua_S,"SetTrigerType",tolua_PX2_TriggerController_SetTrigerType00);
   tolua_function(tolua_S,"GetTrigerType",tolua_PX2_TriggerController_GetTrigerType00);
   tolua_function(tolua_S,"Triger",tolua_PX2_TriggerController_Triger00);
   tolua_function(tolua_S,"ResetTriger",tolua_PX2_TriggerController_ResetTriger00);
   tolua_function(tolua_S,"IsTrigered",tolua_PX2_TriggerController_IsTrigered00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"AmbientRegionController","AmbientRegionController","TriggerController",tolua_collect_AmbientRegionController);
  #else
  tolua_cclass(tolua_S,"AmbientRegionController","AmbientRegionController","TriggerController",NULL);
  #endif
  tolua_beginmodule(tolua_S,"AmbientRegionController");
   tolua_function(tolua_S,"new",tolua_PX2_AmbientRegionController_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_AmbientRegionController_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_AmbientRegionController_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_AmbientRegionController_delete00);
   tolua_function(tolua_S,"SetLightCameraLookPostion",tolua_PX2_AmbientRegionController_SetLightCameraLookPostion00);
   tolua_function(tolua_S,"SetLightCameraLookDistance",tolua_PX2_AmbientRegionController_SetLightCameraLookDistance00);
   tolua_function(tolua_S,"SetLightCameraExtent",tolua_PX2_AmbientRegionController_SetLightCameraExtent00);
   tolua_function(tolua_S,"SetHorAngle",tolua_PX2_AmbientRegionController_SetHorAngle00);
   tolua_function(tolua_S,"GetHorAngle",tolua_PX2_AmbientRegionController_GetHorAngle00);
   tolua_function(tolua_S,"SetVerAngle",tolua_PX2_AmbientRegionController_SetVerAngle00);
   tolua_function(tolua_S,"GetVerAngle",tolua_PX2_AmbientRegionController_GetVerAngle00);
   tolua_function(tolua_S,"SetAmbientColor",tolua_PX2_AmbientRegionController_SetAmbientColor00);
   tolua_function(tolua_S,"GetAmbientColor",tolua_PX2_AmbientRegionController_GetAmbientColor00);
   tolua_function(tolua_S,"SetDiffuseColor",tolua_PX2_AmbientRegionController_SetDiffuseColor00);
   tolua_function(tolua_S,"GetDiffuseColor",tolua_PX2_AmbientRegionController_GetDiffuseColor00);
   tolua_function(tolua_S,"SetSpecularColor",tolua_PX2_AmbientRegionController_SetSpecularColor00);
   tolua_function(tolua_S,"GetSpecularColor",tolua_PX2_AmbientRegionController_GetSpecularColor00);
   tolua_function(tolua_S,"SetSpecularPow",tolua_PX2_AmbientRegionController_SetSpecularPow00);
   tolua_function(tolua_S,"GetSpecularPow",tolua_PX2_AmbientRegionController_GetSpecularPow00);
   tolua_function(tolua_S,"SetIntensity",tolua_PX2_AmbientRegionController_SetIntensity00);
   tolua_function(tolua_S,"GetIntensity",tolua_PX2_AmbientRegionController_GetIntensity00);
   tolua_function(tolua_S,"SetFogColorHeight",tolua_PX2_AmbientRegionController_SetFogColorHeight00);
   tolua_function(tolua_S,"GetFogColorHeight",tolua_PX2_AmbientRegionController_GetFogColorHeight00);
   tolua_function(tolua_S,"SetFogParamHeight",tolua_PX2_AmbientRegionController_SetFogParamHeight00);
   tolua_function(tolua_S,"GetFogParamHeight",tolua_PX2_AmbientRegionController_GetFogParamHeight00);
   tolua_function(tolua_S,"SetFogColorDistance",tolua_PX2_AmbientRegionController_SetFogColorDistance00);
   tolua_function(tolua_S,"GetFogColorDistance",tolua_PX2_AmbientRegionController_GetFogColorDistance00);
   tolua_function(tolua_S,"SetFogParamDistance",tolua_PX2_AmbientRegionController_SetFogParamDistance00);
   tolua_function(tolua_S,"GetFogParamDistance",tolua_PX2_AmbientRegionController_GetFogParamDistance00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"GeneralServer","GeneralServer","",NULL);
  tolua_beginmodule(tolua_S,"GeneralServer");
   tolua_function(tolua_S,"SendString",tolua_PX2_GeneralServer_SendString00);
  tolua_endmodule(tolua_S);
 tolua_endmodule(tolua_S);
 return 1;
}


#if defined(LUA_VERSION_NUM) && LUA_VERSION_NUM >= 501
 TOLUA_API int luaopen_PX2 (lua_State* tolua_S) {
 return tolua_PX2_open(tolua_S);
};
#endif

